// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : sqrl_acorn.v
// Device     : xc7a200t-fbg484-3
// LiteX sha1 : 29140260
// Date       : 2021-11-12 14:15:34
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module sqrl_acorn (
	(* dont_touch = "true" *)	input  wire clk200_p,
	input  wire clk200_n,
	output wire [15:0] ddram_a,
	output wire [2:0] ddram_ba,
	output wire ddram_ras_n,
	output wire ddram_cas_n,
	output wire ddram_we_n,
	output wire [1:0] ddram_dm,
	inout  wire [15:0] ddram_dq,
	inout  wire [1:0] ddram_dqs_p,
	inout  wire [1:0] ddram_dqs_n,
	output wire ddram_clk_p,
	output wire ddram_clk_n,
	output wire ddram_cke,
	output wire ddram_odt,
	output wire ddram_reset_n,
	input  wire pcie_x4_rst_n,
	(* dont_touch = "true" *)	input  wire pcie_x4_clk_p,
	input  wire pcie_x4_clk_n,
	input  wire [3:0] pcie_x4_rx_p,
	input  wire [3:0] pcie_x4_rx_n,
	output wire [3:0] pcie_x4_tx_p,
	output wire [3:0] pcie_x4_tx_n,
	output wire flash_cs_n,
	output wire flash_mosi,
	input  wire flash_miso,
	input  wire flash_wp,
	input  wire flash_hold,
	output reg  user_led0,
	output reg  user_led1,
	output reg  user_led2,
	output reg  user_led3,
	output reg  gpio_0,
	output reg  gpio_1,
	output reg  gpio_2,
	output reg  gpio_3,
	output reg  gpio_4,
	output reg  gpio_5,
	output reg  gpio_6,
	output reg  gpio_7,
	output reg  gpio_8,
	output reg  gpio_9,
	output reg  gpio_10,
	output reg  gpio_11
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  basesoc_basesoc_soc_rst = 1'd0;
wire basesoc_basesoc_cpu_rst;
reg  [1:0] basesoc_basesoc_reset_storage = 2'd0;
reg  basesoc_basesoc_reset_re = 1'd0;
reg  [31:0] basesoc_basesoc_scratch_storage = 32'd305419896;
reg  basesoc_basesoc_scratch_re = 1'd0;
wire [31:0] basesoc_basesoc_bus_errors_status;
wire basesoc_basesoc_bus_errors_we;
reg  basesoc_basesoc_bus_errors_re = 1'd0;
wire basesoc_basesoc_bus_error;
reg  [31:0] basesoc_basesoc_bus_errors = 32'd0;
wire basesoc_basesoc_reset;
reg  [31:0] basesoc_basesoc_interrupt = 32'd0;
wire [29:0] basesoc_basesoc_ibus_adr;
wire [31:0] basesoc_basesoc_ibus_dat_w;
wire [31:0] basesoc_basesoc_ibus_dat_r;
wire [3:0] basesoc_basesoc_ibus_sel;
wire basesoc_basesoc_ibus_cyc;
wire basesoc_basesoc_ibus_stb;
wire basesoc_basesoc_ibus_ack;
wire basesoc_basesoc_ibus_we;
wire [2:0] basesoc_basesoc_ibus_cti;
wire [1:0] basesoc_basesoc_ibus_bte;
wire basesoc_basesoc_ibus_err;
wire [29:0] basesoc_basesoc_dbus_adr;
wire [31:0] basesoc_basesoc_dbus_dat_w;
wire [31:0] basesoc_basesoc_dbus_dat_r;
wire [3:0] basesoc_basesoc_dbus_sel;
wire basesoc_basesoc_dbus_cyc;
wire basesoc_basesoc_dbus_stb;
wire basesoc_basesoc_dbus_ack;
wire basesoc_basesoc_dbus_we;
wire [2:0] basesoc_basesoc_dbus_cti;
wire [1:0] basesoc_basesoc_dbus_bte;
wire basesoc_basesoc_dbus_err;
reg  [31:0] basesoc_basesoc_vexriscv = 32'd0;
wire [29:0] basesoc_basesoc_basesoc_ram_bus_adr;
wire [31:0] basesoc_basesoc_basesoc_ram_bus_dat_w;
wire [31:0] basesoc_basesoc_basesoc_ram_bus_dat_r;
wire [3:0] basesoc_basesoc_basesoc_ram_bus_sel;
wire basesoc_basesoc_basesoc_ram_bus_cyc;
wire basesoc_basesoc_basesoc_ram_bus_stb;
reg  basesoc_basesoc_basesoc_ram_bus_ack = 1'd0;
wire basesoc_basesoc_basesoc_ram_bus_we;
wire [2:0] basesoc_basesoc_basesoc_ram_bus_cti;
wire [1:0] basesoc_basesoc_basesoc_ram_bus_bte;
reg  basesoc_basesoc_basesoc_ram_bus_err = 1'd0;
wire [14:0] basesoc_basesoc_basesoc_adr;
wire [31:0] basesoc_basesoc_basesoc_dat_r;
wire [29:0] basesoc_basesoc_ram_bus_ram_bus_adr;
wire [31:0] basesoc_basesoc_ram_bus_ram_bus_dat_w;
wire [31:0] basesoc_basesoc_ram_bus_ram_bus_dat_r;
wire [3:0] basesoc_basesoc_ram_bus_ram_bus_sel;
wire basesoc_basesoc_ram_bus_ram_bus_cyc;
wire basesoc_basesoc_ram_bus_ram_bus_stb;
reg  basesoc_basesoc_ram_bus_ram_bus_ack = 1'd0;
wire basesoc_basesoc_ram_bus_ram_bus_we;
wire [2:0] basesoc_basesoc_ram_bus_ram_bus_cti;
wire [1:0] basesoc_basesoc_ram_bus_ram_bus_bte;
reg  basesoc_basesoc_ram_bus_ram_bus_err = 1'd0;
wire [10:0] basesoc_basesoc_ram_adr;
wire [31:0] basesoc_basesoc_ram_dat_r;
reg  [3:0] basesoc_basesoc_ram_we = 4'd0;
wire [31:0] basesoc_basesoc_ram_dat_w;
reg  basesoc_basesoc_uartcrossover_rxtx_re = 1'd0;
wire [7:0] basesoc_basesoc_uartcrossover_rxtx_r;
reg  basesoc_basesoc_uartcrossover_rxtx_we = 1'd0;
wire [7:0] basesoc_basesoc_uartcrossover_rxtx_w;
wire basesoc_basesoc_uartcrossover_txfull_status;
wire basesoc_basesoc_uartcrossover_txfull_we;
reg  basesoc_basesoc_uartcrossover_txfull_re = 1'd0;
wire basesoc_basesoc_uartcrossover_rxempty_status;
wire basesoc_basesoc_uartcrossover_rxempty_we;
reg  basesoc_basesoc_uartcrossover_rxempty_re = 1'd0;
wire basesoc_basesoc_uartcrossover_irq;
wire basesoc_basesoc_uartcrossover_tx_status;
reg  basesoc_basesoc_uartcrossover_tx_pending = 1'd0;
wire basesoc_basesoc_uartcrossover_tx_trigger;
reg  basesoc_basesoc_uartcrossover_tx_clear = 1'd0;
reg  basesoc_basesoc_uartcrossover_tx_trigger_d = 1'd0;
wire basesoc_basesoc_uartcrossover_rx_status;
reg  basesoc_basesoc_uartcrossover_rx_pending = 1'd0;
wire basesoc_basesoc_uartcrossover_rx_trigger;
reg  basesoc_basesoc_uartcrossover_rx_clear = 1'd0;
reg  basesoc_basesoc_uartcrossover_rx_trigger_d = 1'd0;
wire basesoc_basesoc_uartcrossover_tx0;
wire basesoc_basesoc_uartcrossover_rx0;
reg  [1:0] basesoc_basesoc_uartcrossover_status_status = 2'd0;
wire basesoc_basesoc_uartcrossover_status_we;
reg  basesoc_basesoc_uartcrossover_status_re = 1'd0;
wire basesoc_basesoc_uartcrossover_tx1;
wire basesoc_basesoc_uartcrossover_rx1;
reg  [1:0] basesoc_basesoc_uartcrossover_pending_status = 2'd0;
wire basesoc_basesoc_uartcrossover_pending_we;
reg  basesoc_basesoc_uartcrossover_pending_re = 1'd0;
reg  [1:0] basesoc_basesoc_uartcrossover_pending_r = 2'd0;
wire basesoc_basesoc_uartcrossover_tx2;
wire basesoc_basesoc_uartcrossover_rx2;
reg  [1:0] basesoc_basesoc_uartcrossover_enable_storage = 2'd0;
reg  basesoc_basesoc_uartcrossover_enable_re = 1'd0;
wire basesoc_basesoc_uartcrossover_txempty_status;
wire basesoc_basesoc_uartcrossover_txempty_we;
reg  basesoc_basesoc_uartcrossover_txempty_re = 1'd0;
wire basesoc_basesoc_uartcrossover_rxfull_status;
wire basesoc_basesoc_uartcrossover_rxfull_we;
reg  basesoc_basesoc_uartcrossover_rxfull_re = 1'd0;
wire basesoc_basesoc_uartcrossover_uartcrossover_sink_valid;
wire basesoc_basesoc_uartcrossover_uartcrossover_sink_ready;
wire basesoc_basesoc_uartcrossover_uartcrossover_sink_first;
wire basesoc_basesoc_uartcrossover_uartcrossover_sink_last;
wire [7:0] basesoc_basesoc_uartcrossover_uartcrossover_sink_payload_data;
wire basesoc_basesoc_uartcrossover_uartcrossover_source_valid;
wire basesoc_basesoc_uartcrossover_uartcrossover_source_ready;
wire basesoc_basesoc_uartcrossover_uartcrossover_source_first;
wire basesoc_basesoc_uartcrossover_uartcrossover_source_last;
wire [7:0] basesoc_basesoc_uartcrossover_uartcrossover_source_payload_data;
wire basesoc_basesoc_uartcrossover_tx_fifo_sink_valid;
wire basesoc_basesoc_uartcrossover_tx_fifo_sink_ready;
reg  basesoc_basesoc_uartcrossover_tx_fifo_sink_first = 1'd0;
reg  basesoc_basesoc_uartcrossover_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_basesoc_uartcrossover_tx_fifo_sink_payload_data;
wire basesoc_basesoc_uartcrossover_tx_fifo_source_valid;
wire basesoc_basesoc_uartcrossover_tx_fifo_source_ready;
wire basesoc_basesoc_uartcrossover_tx_fifo_source_first;
wire basesoc_basesoc_uartcrossover_tx_fifo_source_last;
wire [7:0] basesoc_basesoc_uartcrossover_tx_fifo_source_payload_data;
wire basesoc_basesoc_uartcrossover_tx_fifo_re;
reg  basesoc_basesoc_uartcrossover_tx_fifo_readable = 1'd0;
wire basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_we;
wire basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_writable;
wire basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_re;
wire basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_readable;
wire [9:0] basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_din;
wire [9:0] basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_dout;
reg  [4:0] basesoc_basesoc_uartcrossover_tx_fifo_level0 = 5'd0;
reg  basesoc_basesoc_uartcrossover_tx_fifo_replace = 1'd0;
reg  [3:0] basesoc_basesoc_uartcrossover_tx_fifo_produce = 4'd0;
reg  [3:0] basesoc_basesoc_uartcrossover_tx_fifo_consume = 4'd0;
reg  [3:0] basesoc_basesoc_uartcrossover_tx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_basesoc_uartcrossover_tx_fifo_wrport_dat_r;
wire basesoc_basesoc_uartcrossover_tx_fifo_wrport_we;
wire [9:0] basesoc_basesoc_uartcrossover_tx_fifo_wrport_dat_w;
wire basesoc_basesoc_uartcrossover_tx_fifo_do_read;
wire [3:0] basesoc_basesoc_uartcrossover_tx_fifo_rdport_adr;
wire [9:0] basesoc_basesoc_uartcrossover_tx_fifo_rdport_dat_r;
wire basesoc_basesoc_uartcrossover_tx_fifo_rdport_re;
wire [4:0] basesoc_basesoc_uartcrossover_tx_fifo_level1;
wire [7:0] basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_payload_data;
wire basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_first;
wire basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_last;
wire [7:0] basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_payload_data;
wire basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_first;
wire basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_last;
wire basesoc_basesoc_uartcrossover_rx_fifo_sink_valid;
wire basesoc_basesoc_uartcrossover_rx_fifo_sink_ready;
wire basesoc_basesoc_uartcrossover_rx_fifo_sink_first;
wire basesoc_basesoc_uartcrossover_rx_fifo_sink_last;
wire [7:0] basesoc_basesoc_uartcrossover_rx_fifo_sink_payload_data;
wire basesoc_basesoc_uartcrossover_rx_fifo_source_valid;
wire basesoc_basesoc_uartcrossover_rx_fifo_source_ready;
wire basesoc_basesoc_uartcrossover_rx_fifo_source_first;
wire basesoc_basesoc_uartcrossover_rx_fifo_source_last;
wire [7:0] basesoc_basesoc_uartcrossover_rx_fifo_source_payload_data;
wire basesoc_basesoc_uartcrossover_rx_fifo_re;
reg  basesoc_basesoc_uartcrossover_rx_fifo_readable = 1'd0;
wire basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_we;
wire basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_writable;
wire basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_re;
wire basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_readable;
wire [9:0] basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_din;
wire [9:0] basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_dout;
reg  [4:0] basesoc_basesoc_uartcrossover_rx_fifo_level0 = 5'd0;
reg  basesoc_basesoc_uartcrossover_rx_fifo_replace = 1'd0;
reg  [3:0] basesoc_basesoc_uartcrossover_rx_fifo_produce = 4'd0;
reg  [3:0] basesoc_basesoc_uartcrossover_rx_fifo_consume = 4'd0;
reg  [3:0] basesoc_basesoc_uartcrossover_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_basesoc_uartcrossover_rx_fifo_wrport_dat_r;
wire basesoc_basesoc_uartcrossover_rx_fifo_wrport_we;
wire [9:0] basesoc_basesoc_uartcrossover_rx_fifo_wrport_dat_w;
wire basesoc_basesoc_uartcrossover_rx_fifo_do_read;
wire [3:0] basesoc_basesoc_uartcrossover_rx_fifo_rdport_adr;
wire [9:0] basesoc_basesoc_uartcrossover_rx_fifo_rdport_dat_r;
wire basesoc_basesoc_uartcrossover_rx_fifo_rdport_re;
wire [4:0] basesoc_basesoc_uartcrossover_rx_fifo_level1;
wire [7:0] basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_payload_data;
wire basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_first;
wire basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_last;
wire [7:0] basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_payload_data;
wire basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_first;
wire basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_last;
reg  basesoc_basesoc_xover_rxtx_re = 1'd0;
wire [7:0] basesoc_basesoc_xover_rxtx_r;
reg  basesoc_basesoc_xover_rxtx_we = 1'd0;
wire [7:0] basesoc_basesoc_xover_rxtx_w;
wire basesoc_basesoc_xover_txfull_status;
wire basesoc_basesoc_xover_txfull_we;
reg  basesoc_basesoc_xover_txfull_re = 1'd0;
wire basesoc_basesoc_xover_rxempty_status;
wire basesoc_basesoc_xover_rxempty_we;
reg  basesoc_basesoc_xover_rxempty_re = 1'd0;
wire basesoc_basesoc_xover_irq;
wire basesoc_basesoc_xover_tx_status;
reg  basesoc_basesoc_xover_tx_pending = 1'd0;
wire basesoc_basesoc_xover_tx_trigger;
reg  basesoc_basesoc_xover_tx_clear = 1'd0;
reg  basesoc_basesoc_xover_tx_trigger_d = 1'd0;
wire basesoc_basesoc_xover_rx_status;
reg  basesoc_basesoc_xover_rx_pending = 1'd0;
wire basesoc_basesoc_xover_rx_trigger;
reg  basesoc_basesoc_xover_rx_clear = 1'd0;
reg  basesoc_basesoc_xover_rx_trigger_d = 1'd0;
wire basesoc_basesoc_xover_tx0;
wire basesoc_basesoc_xover_rx0;
reg  [1:0] basesoc_basesoc_xover_status_status = 2'd0;
wire basesoc_basesoc_xover_status_we;
reg  basesoc_basesoc_xover_status_re = 1'd0;
wire basesoc_basesoc_xover_tx1;
wire basesoc_basesoc_xover_rx1;
reg  [1:0] basesoc_basesoc_xover_pending_status = 2'd0;
wire basesoc_basesoc_xover_pending_we;
reg  basesoc_basesoc_xover_pending_re = 1'd0;
reg  [1:0] basesoc_basesoc_xover_pending_r = 2'd0;
wire basesoc_basesoc_xover_tx2;
wire basesoc_basesoc_xover_rx2;
reg  [1:0] basesoc_basesoc_xover_enable_storage = 2'd0;
reg  basesoc_basesoc_xover_enable_re = 1'd0;
wire basesoc_basesoc_xover_txempty_status;
wire basesoc_basesoc_xover_txempty_we;
reg  basesoc_basesoc_xover_txempty_re = 1'd0;
wire basesoc_basesoc_xover_rxfull_status;
wire basesoc_basesoc_xover_rxfull_we;
reg  basesoc_basesoc_xover_rxfull_re = 1'd0;
wire basesoc_basesoc_xover_uart_sink_valid;
wire basesoc_basesoc_xover_uart_sink_ready;
wire basesoc_basesoc_xover_uart_sink_first;
wire basesoc_basesoc_xover_uart_sink_last;
wire [7:0] basesoc_basesoc_xover_uart_sink_payload_data;
wire basesoc_basesoc_xover_uart_source_valid;
wire basesoc_basesoc_xover_uart_source_ready;
wire basesoc_basesoc_xover_uart_source_first;
wire basesoc_basesoc_xover_uart_source_last;
wire [7:0] basesoc_basesoc_xover_uart_source_payload_data;
wire basesoc_basesoc_xover_tx_fifo_sink_valid;
wire basesoc_basesoc_xover_tx_fifo_sink_ready;
reg  basesoc_basesoc_xover_tx_fifo_sink_first = 1'd0;
reg  basesoc_basesoc_xover_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_basesoc_xover_tx_fifo_sink_payload_data;
reg  basesoc_basesoc_xover_tx_fifo_source_valid = 1'd0;
wire basesoc_basesoc_xover_tx_fifo_source_ready;
reg  basesoc_basesoc_xover_tx_fifo_source_first = 1'd0;
reg  basesoc_basesoc_xover_tx_fifo_source_last = 1'd0;
reg  [7:0] basesoc_basesoc_xover_tx_fifo_source_payload_data = 8'd0;
wire basesoc_basesoc_xover_rx_fifo_sink_valid;
wire basesoc_basesoc_xover_rx_fifo_sink_ready;
wire basesoc_basesoc_xover_rx_fifo_sink_first;
wire basesoc_basesoc_xover_rx_fifo_sink_last;
wire [7:0] basesoc_basesoc_xover_rx_fifo_sink_payload_data;
wire basesoc_basesoc_xover_rx_fifo_source_valid;
wire basesoc_basesoc_xover_rx_fifo_source_ready;
wire basesoc_basesoc_xover_rx_fifo_source_first;
wire basesoc_basesoc_xover_rx_fifo_source_last;
wire [7:0] basesoc_basesoc_xover_rx_fifo_source_payload_data;
wire basesoc_basesoc_xover_rx_fifo_re;
reg  basesoc_basesoc_xover_rx_fifo_readable = 1'd0;
wire basesoc_basesoc_xover_rx_fifo_syncfifo_we;
wire basesoc_basesoc_xover_rx_fifo_syncfifo_writable;
wire basesoc_basesoc_xover_rx_fifo_syncfifo_re;
wire basesoc_basesoc_xover_rx_fifo_syncfifo_readable;
wire [9:0] basesoc_basesoc_xover_rx_fifo_syncfifo_din;
wire [9:0] basesoc_basesoc_xover_rx_fifo_syncfifo_dout;
reg  [4:0] basesoc_basesoc_xover_rx_fifo_level0 = 5'd0;
reg  basesoc_basesoc_xover_rx_fifo_replace = 1'd0;
reg  [3:0] basesoc_basesoc_xover_rx_fifo_produce = 4'd0;
reg  [3:0] basesoc_basesoc_xover_rx_fifo_consume = 4'd0;
reg  [3:0] basesoc_basesoc_xover_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_basesoc_xover_rx_fifo_wrport_dat_r;
wire basesoc_basesoc_xover_rx_fifo_wrport_we;
wire [9:0] basesoc_basesoc_xover_rx_fifo_wrport_dat_w;
wire basesoc_basesoc_xover_rx_fifo_do_read;
wire [3:0] basesoc_basesoc_xover_rx_fifo_rdport_adr;
wire [9:0] basesoc_basesoc_xover_rx_fifo_rdport_dat_r;
wire basesoc_basesoc_xover_rx_fifo_rdport_re;
wire [4:0] basesoc_basesoc_xover_rx_fifo_level1;
wire [7:0] basesoc_basesoc_xover_rx_fifo_fifo_in_payload_data;
wire basesoc_basesoc_xover_rx_fifo_fifo_in_first;
wire basesoc_basesoc_xover_rx_fifo_fifo_in_last;
wire [7:0] basesoc_basesoc_xover_rx_fifo_fifo_out_payload_data;
wire basesoc_basesoc_xover_rx_fifo_fifo_out_first;
wire basesoc_basesoc_xover_rx_fifo_fifo_out_last;
reg  [31:0] basesoc_basesoc_load_storage = 32'd0;
reg  basesoc_basesoc_load_re = 1'd0;
reg  [31:0] basesoc_basesoc_reload_storage = 32'd0;
reg  basesoc_basesoc_reload_re = 1'd0;
reg  basesoc_basesoc_en_storage = 1'd0;
reg  basesoc_basesoc_en_re = 1'd0;
reg  basesoc_basesoc_update_value_storage = 1'd0;
reg  basesoc_basesoc_update_value_re = 1'd0;
reg  [31:0] basesoc_basesoc_value_status = 32'd0;
wire basesoc_basesoc_value_we;
reg  basesoc_basesoc_value_re = 1'd0;
wire basesoc_basesoc_irq;
wire basesoc_basesoc_zero_status;
reg  basesoc_basesoc_zero_pending = 1'd0;
wire basesoc_basesoc_zero_trigger;
reg  basesoc_basesoc_zero_clear = 1'd0;
reg  basesoc_basesoc_zero_trigger_d = 1'd0;
wire basesoc_basesoc_zero0;
wire basesoc_basesoc_status_status;
wire basesoc_basesoc_status_we;
reg  basesoc_basesoc_status_re = 1'd0;
wire basesoc_basesoc_zero1;
wire basesoc_basesoc_pending_status;
wire basesoc_basesoc_pending_we;
reg  basesoc_basesoc_pending_re = 1'd0;
reg  basesoc_basesoc_pending_r = 1'd0;
wire basesoc_basesoc_zero2;
reg  basesoc_basesoc_enable_storage = 1'd0;
reg  basesoc_basesoc_enable_re = 1'd0;
reg  [31:0] basesoc_basesoc_value = 32'd0;
wire crg_rst;
(* dont_touch = "true" *) wire sys_clk;
wire sys_rst;
wire sys4x_clk;
wire sys4x_dqs_clk;
wire idelay_clk;
wire idelay_rst;
wire crg_reset;
reg  crg_power_down = 1'd0;
wire crg_locked;
(* dont_touch = "true" *) wire crg_clkin;
wire crg_clkout0;
wire crg_clkout_buf0;
wire crg_clkout1;
wire crg_clkout_buf1;
wire crg_clkout2;
wire crg_clkout_buf2;
wire crg_clkout3;
wire crg_clkout_buf3;
reg  [3:0] crg_reset_counter = 4'd15;
reg  crg_ic_reset = 1'd1;
reg  a7ddrphy_rst_storage = 1'd0;
reg  a7ddrphy_rst_re = 1'd0;
reg  [4:0] a7ddrphy_half_sys8x_taps_storage = 5'd8;
reg  a7ddrphy_half_sys8x_taps_re = 1'd0;
reg  a7ddrphy_wlevel_en_storage = 1'd0;
reg  a7ddrphy_wlevel_en_re = 1'd0;
reg  a7ddrphy_wlevel_strobe_re = 1'd0;
wire a7ddrphy_wlevel_strobe_r;
reg  a7ddrphy_wlevel_strobe_we = 1'd0;
reg  a7ddrphy_wlevel_strobe_w = 1'd0;
reg  [1:0] a7ddrphy_dly_sel_storage = 2'd0;
reg  a7ddrphy_dly_sel_re = 1'd0;
reg  a7ddrphy_rdly_dq_rst_re = 1'd0;
wire a7ddrphy_rdly_dq_rst_r;
reg  a7ddrphy_rdly_dq_rst_we = 1'd0;
reg  a7ddrphy_rdly_dq_rst_w = 1'd0;
reg  a7ddrphy_rdly_dq_inc_re = 1'd0;
wire a7ddrphy_rdly_dq_inc_r;
reg  a7ddrphy_rdly_dq_inc_we = 1'd0;
reg  a7ddrphy_rdly_dq_inc_w = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
wire a7ddrphy_rdly_dq_bitslip_rst_r;
reg  a7ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_re = 1'd0;
wire a7ddrphy_rdly_dq_bitslip_r;
reg  a7ddrphy_rdly_dq_bitslip_we = 1'd0;
reg  a7ddrphy_rdly_dq_bitslip_w = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_rst_re = 1'd0;
wire a7ddrphy_wdly_dq_bitslip_rst_r;
reg  a7ddrphy_wdly_dq_bitslip_rst_we = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_rst_w = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_re = 1'd0;
wire a7ddrphy_wdly_dq_bitslip_r;
reg  a7ddrphy_wdly_dq_bitslip_we = 1'd0;
reg  a7ddrphy_wdly_dq_bitslip_w = 1'd0;
reg  [1:0] a7ddrphy_rdphase_storage = 2'd2;
reg  a7ddrphy_rdphase_re = 1'd0;
reg  [1:0] a7ddrphy_wrphase_storage = 2'd3;
reg  a7ddrphy_wrphase_re = 1'd0;
wire [15:0] a7ddrphy_dfi_p0_address;
wire [2:0] a7ddrphy_dfi_p0_bank;
wire a7ddrphy_dfi_p0_cas_n;
wire a7ddrphy_dfi_p0_cs_n;
wire a7ddrphy_dfi_p0_ras_n;
wire a7ddrphy_dfi_p0_we_n;
wire a7ddrphy_dfi_p0_cke;
wire a7ddrphy_dfi_p0_odt;
wire a7ddrphy_dfi_p0_reset_n;
wire a7ddrphy_dfi_p0_act_n;
wire [31:0] a7ddrphy_dfi_p0_wrdata;
wire a7ddrphy_dfi_p0_wrdata_en;
wire [3:0] a7ddrphy_dfi_p0_wrdata_mask;
wire a7ddrphy_dfi_p0_rddata_en;
reg  [31:0] a7ddrphy_dfi_p0_rddata = 32'd0;
wire a7ddrphy_dfi_p0_rddata_valid;
wire [15:0] a7ddrphy_dfi_p1_address;
wire [2:0] a7ddrphy_dfi_p1_bank;
wire a7ddrphy_dfi_p1_cas_n;
wire a7ddrphy_dfi_p1_cs_n;
wire a7ddrphy_dfi_p1_ras_n;
wire a7ddrphy_dfi_p1_we_n;
wire a7ddrphy_dfi_p1_cke;
wire a7ddrphy_dfi_p1_odt;
wire a7ddrphy_dfi_p1_reset_n;
wire a7ddrphy_dfi_p1_act_n;
wire [31:0] a7ddrphy_dfi_p1_wrdata;
wire a7ddrphy_dfi_p1_wrdata_en;
wire [3:0] a7ddrphy_dfi_p1_wrdata_mask;
wire a7ddrphy_dfi_p1_rddata_en;
reg  [31:0] a7ddrphy_dfi_p1_rddata = 32'd0;
wire a7ddrphy_dfi_p1_rddata_valid;
wire [15:0] a7ddrphy_dfi_p2_address;
wire [2:0] a7ddrphy_dfi_p2_bank;
wire a7ddrphy_dfi_p2_cas_n;
wire a7ddrphy_dfi_p2_cs_n;
wire a7ddrphy_dfi_p2_ras_n;
wire a7ddrphy_dfi_p2_we_n;
wire a7ddrphy_dfi_p2_cke;
wire a7ddrphy_dfi_p2_odt;
wire a7ddrphy_dfi_p2_reset_n;
wire a7ddrphy_dfi_p2_act_n;
wire [31:0] a7ddrphy_dfi_p2_wrdata;
wire a7ddrphy_dfi_p2_wrdata_en;
wire [3:0] a7ddrphy_dfi_p2_wrdata_mask;
wire a7ddrphy_dfi_p2_rddata_en;
reg  [31:0] a7ddrphy_dfi_p2_rddata = 32'd0;
wire a7ddrphy_dfi_p2_rddata_valid;
wire [15:0] a7ddrphy_dfi_p3_address;
wire [2:0] a7ddrphy_dfi_p3_bank;
wire a7ddrphy_dfi_p3_cas_n;
wire a7ddrphy_dfi_p3_cs_n;
wire a7ddrphy_dfi_p3_ras_n;
wire a7ddrphy_dfi_p3_we_n;
wire a7ddrphy_dfi_p3_cke;
wire a7ddrphy_dfi_p3_odt;
wire a7ddrphy_dfi_p3_reset_n;
wire a7ddrphy_dfi_p3_act_n;
wire [31:0] a7ddrphy_dfi_p3_wrdata;
wire a7ddrphy_dfi_p3_wrdata_en;
wire [3:0] a7ddrphy_dfi_p3_wrdata_mask;
wire a7ddrphy_dfi_p3_rddata_en;
reg  [31:0] a7ddrphy_dfi_p3_rddata = 32'd0;
wire a7ddrphy_dfi_p3_rddata_valid;
wire a7ddrphy_sd_clk_se_nodelay;
reg  a7ddrphy_dqs_oe = 1'd0;
wire a7ddrphy_dqs_preamble;
wire a7ddrphy_dqs_postamble;
wire a7ddrphy_dqs_oe_delay_tappeddelayline;
reg  a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg  a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
reg  a7ddrphy_dqspattern0 = 1'd0;
reg  a7ddrphy_dqspattern1 = 1'd0;
reg  [7:0] a7ddrphy_dqspattern_o0 = 8'd0;
reg  [7:0] a7ddrphy_dqspattern_o1 = 8'd0;
wire a7ddrphy_dqs_o_no_delay0;
wire a7ddrphy_dqs_t0;
reg  [7:0] a7ddrphy_bitslip00 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r0 = 16'd0;
wire a7ddrphy0;
wire a7ddrphy_dqs_o_no_delay1;
wire a7ddrphy_dqs_t1;
reg  [7:0] a7ddrphy_bitslip10 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r0 = 16'd0;
wire a7ddrphy1;
reg  [7:0] a7ddrphy_bitslip01 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r1 = 16'd0;
reg  [7:0] a7ddrphy_bitslip11 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r1 = 16'd0;
wire a7ddrphy_dq_oe;
wire a7ddrphy_dq_oe_delay_tappeddelayline;
reg  a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg  a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire a7ddrphy_dq_o_nodelay0;
wire a7ddrphy_dq_i_nodelay0;
wire a7ddrphy_dq_i_delayed0;
wire a7ddrphy_dq_t0;
reg  [7:0] a7ddrphy_bitslip02 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value2 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r2 = 16'd0;
wire [7:0] a7ddrphy_bitslip03;
reg  [7:0] a7ddrphy_bitslip04 = 8'd0;
reg  [2:0] a7ddrphy_bitslip0_value3 = 3'd7;
reg  [15:0] a7ddrphy_bitslip0_r3 = 16'd0;
wire a7ddrphy_dq_o_nodelay1;
wire a7ddrphy_dq_i_nodelay1;
wire a7ddrphy_dq_i_delayed1;
wire a7ddrphy_dq_t1;
reg  [7:0] a7ddrphy_bitslip12 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value2 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r2 = 16'd0;
wire [7:0] a7ddrphy_bitslip13;
reg  [7:0] a7ddrphy_bitslip14 = 8'd0;
reg  [2:0] a7ddrphy_bitslip1_value3 = 3'd7;
reg  [15:0] a7ddrphy_bitslip1_r3 = 16'd0;
wire a7ddrphy_dq_o_nodelay2;
wire a7ddrphy_dq_i_nodelay2;
wire a7ddrphy_dq_i_delayed2;
wire a7ddrphy_dq_t2;
reg  [7:0] a7ddrphy_bitslip20 = 8'd0;
reg  [2:0] a7ddrphy_bitslip2_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip2_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip21;
reg  [7:0] a7ddrphy_bitslip22 = 8'd0;
reg  [2:0] a7ddrphy_bitslip2_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip2_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay3;
wire a7ddrphy_dq_i_nodelay3;
wire a7ddrphy_dq_i_delayed3;
wire a7ddrphy_dq_t3;
reg  [7:0] a7ddrphy_bitslip30 = 8'd0;
reg  [2:0] a7ddrphy_bitslip3_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip3_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip31;
reg  [7:0] a7ddrphy_bitslip32 = 8'd0;
reg  [2:0] a7ddrphy_bitslip3_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip3_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay4;
wire a7ddrphy_dq_i_nodelay4;
wire a7ddrphy_dq_i_delayed4;
wire a7ddrphy_dq_t4;
reg  [7:0] a7ddrphy_bitslip40 = 8'd0;
reg  [2:0] a7ddrphy_bitslip4_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip4_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip41;
reg  [7:0] a7ddrphy_bitslip42 = 8'd0;
reg  [2:0] a7ddrphy_bitslip4_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip4_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay5;
wire a7ddrphy_dq_i_nodelay5;
wire a7ddrphy_dq_i_delayed5;
wire a7ddrphy_dq_t5;
reg  [7:0] a7ddrphy_bitslip50 = 8'd0;
reg  [2:0] a7ddrphy_bitslip5_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip5_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip51;
reg  [7:0] a7ddrphy_bitslip52 = 8'd0;
reg  [2:0] a7ddrphy_bitslip5_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip5_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay6;
wire a7ddrphy_dq_i_nodelay6;
wire a7ddrphy_dq_i_delayed6;
wire a7ddrphy_dq_t6;
reg  [7:0] a7ddrphy_bitslip60 = 8'd0;
reg  [2:0] a7ddrphy_bitslip6_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip6_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip61;
reg  [7:0] a7ddrphy_bitslip62 = 8'd0;
reg  [2:0] a7ddrphy_bitslip6_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip6_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay7;
wire a7ddrphy_dq_i_nodelay7;
wire a7ddrphy_dq_i_delayed7;
wire a7ddrphy_dq_t7;
reg  [7:0] a7ddrphy_bitslip70 = 8'd0;
reg  [2:0] a7ddrphy_bitslip7_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip7_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip71;
reg  [7:0] a7ddrphy_bitslip72 = 8'd0;
reg  [2:0] a7ddrphy_bitslip7_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip7_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay8;
wire a7ddrphy_dq_i_nodelay8;
wire a7ddrphy_dq_i_delayed8;
wire a7ddrphy_dq_t8;
reg  [7:0] a7ddrphy_bitslip80 = 8'd0;
reg  [2:0] a7ddrphy_bitslip8_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip8_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip81;
reg  [7:0] a7ddrphy_bitslip82 = 8'd0;
reg  [2:0] a7ddrphy_bitslip8_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip8_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay9;
wire a7ddrphy_dq_i_nodelay9;
wire a7ddrphy_dq_i_delayed9;
wire a7ddrphy_dq_t9;
reg  [7:0] a7ddrphy_bitslip90 = 8'd0;
reg  [2:0] a7ddrphy_bitslip9_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip9_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip91;
reg  [7:0] a7ddrphy_bitslip92 = 8'd0;
reg  [2:0] a7ddrphy_bitslip9_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip9_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay10;
wire a7ddrphy_dq_i_nodelay10;
wire a7ddrphy_dq_i_delayed10;
wire a7ddrphy_dq_t10;
reg  [7:0] a7ddrphy_bitslip100 = 8'd0;
reg  [2:0] a7ddrphy_bitslip10_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip10_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip101;
reg  [7:0] a7ddrphy_bitslip102 = 8'd0;
reg  [2:0] a7ddrphy_bitslip10_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip10_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay11;
wire a7ddrphy_dq_i_nodelay11;
wire a7ddrphy_dq_i_delayed11;
wire a7ddrphy_dq_t11;
reg  [7:0] a7ddrphy_bitslip110 = 8'd0;
reg  [2:0] a7ddrphy_bitslip11_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip11_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip111;
reg  [7:0] a7ddrphy_bitslip112 = 8'd0;
reg  [2:0] a7ddrphy_bitslip11_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip11_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay12;
wire a7ddrphy_dq_i_nodelay12;
wire a7ddrphy_dq_i_delayed12;
wire a7ddrphy_dq_t12;
reg  [7:0] a7ddrphy_bitslip120 = 8'd0;
reg  [2:0] a7ddrphy_bitslip12_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip12_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip121;
reg  [7:0] a7ddrphy_bitslip122 = 8'd0;
reg  [2:0] a7ddrphy_bitslip12_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip12_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay13;
wire a7ddrphy_dq_i_nodelay13;
wire a7ddrphy_dq_i_delayed13;
wire a7ddrphy_dq_t13;
reg  [7:0] a7ddrphy_bitslip130 = 8'd0;
reg  [2:0] a7ddrphy_bitslip13_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip13_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip131;
reg  [7:0] a7ddrphy_bitslip132 = 8'd0;
reg  [2:0] a7ddrphy_bitslip13_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip13_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay14;
wire a7ddrphy_dq_i_nodelay14;
wire a7ddrphy_dq_i_delayed14;
wire a7ddrphy_dq_t14;
reg  [7:0] a7ddrphy_bitslip140 = 8'd0;
reg  [2:0] a7ddrphy_bitslip14_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip14_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip141;
reg  [7:0] a7ddrphy_bitslip142 = 8'd0;
reg  [2:0] a7ddrphy_bitslip14_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip14_r1 = 16'd0;
wire a7ddrphy_dq_o_nodelay15;
wire a7ddrphy_dq_i_nodelay15;
wire a7ddrphy_dq_i_delayed15;
wire a7ddrphy_dq_t15;
reg  [7:0] a7ddrphy_bitslip150 = 8'd0;
reg  [2:0] a7ddrphy_bitslip15_value0 = 3'd7;
reg  [15:0] a7ddrphy_bitslip15_r0 = 16'd0;
wire [7:0] a7ddrphy_bitslip151;
reg  [7:0] a7ddrphy_bitslip152 = 8'd0;
reg  [2:0] a7ddrphy_bitslip15_value1 = 3'd7;
reg  [15:0] a7ddrphy_bitslip15_r1 = 16'd0;
reg  a7ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg  a7ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg  a7ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg  a7ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg  a7ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
wire [15:0] basesoc_sdram_inti_p0_address;
wire [2:0] basesoc_sdram_inti_p0_bank;
reg  basesoc_sdram_inti_p0_cas_n = 1'd1;
reg  basesoc_sdram_inti_p0_cs_n = 1'd1;
reg  basesoc_sdram_inti_p0_ras_n = 1'd1;
reg  basesoc_sdram_inti_p0_we_n = 1'd1;
wire basesoc_sdram_inti_p0_cke;
wire basesoc_sdram_inti_p0_odt;
wire basesoc_sdram_inti_p0_reset_n;
reg  basesoc_sdram_inti_p0_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p0_wrdata;
wire basesoc_sdram_inti_p0_wrdata_en;
wire [3:0] basesoc_sdram_inti_p0_wrdata_mask;
wire basesoc_sdram_inti_p0_rddata_en;
reg  [31:0] basesoc_sdram_inti_p0_rddata = 32'd0;
reg  basesoc_sdram_inti_p0_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_inti_p1_address;
wire [2:0] basesoc_sdram_inti_p1_bank;
reg  basesoc_sdram_inti_p1_cas_n = 1'd1;
reg  basesoc_sdram_inti_p1_cs_n = 1'd1;
reg  basesoc_sdram_inti_p1_ras_n = 1'd1;
reg  basesoc_sdram_inti_p1_we_n = 1'd1;
wire basesoc_sdram_inti_p1_cke;
wire basesoc_sdram_inti_p1_odt;
wire basesoc_sdram_inti_p1_reset_n;
reg  basesoc_sdram_inti_p1_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p1_wrdata;
wire basesoc_sdram_inti_p1_wrdata_en;
wire [3:0] basesoc_sdram_inti_p1_wrdata_mask;
wire basesoc_sdram_inti_p1_rddata_en;
reg  [31:0] basesoc_sdram_inti_p1_rddata = 32'd0;
reg  basesoc_sdram_inti_p1_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_inti_p2_address;
wire [2:0] basesoc_sdram_inti_p2_bank;
reg  basesoc_sdram_inti_p2_cas_n = 1'd1;
reg  basesoc_sdram_inti_p2_cs_n = 1'd1;
reg  basesoc_sdram_inti_p2_ras_n = 1'd1;
reg  basesoc_sdram_inti_p2_we_n = 1'd1;
wire basesoc_sdram_inti_p2_cke;
wire basesoc_sdram_inti_p2_odt;
wire basesoc_sdram_inti_p2_reset_n;
reg  basesoc_sdram_inti_p2_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p2_wrdata;
wire basesoc_sdram_inti_p2_wrdata_en;
wire [3:0] basesoc_sdram_inti_p2_wrdata_mask;
wire basesoc_sdram_inti_p2_rddata_en;
reg  [31:0] basesoc_sdram_inti_p2_rddata = 32'd0;
reg  basesoc_sdram_inti_p2_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_inti_p3_address;
wire [2:0] basesoc_sdram_inti_p3_bank;
reg  basesoc_sdram_inti_p3_cas_n = 1'd1;
reg  basesoc_sdram_inti_p3_cs_n = 1'd1;
reg  basesoc_sdram_inti_p3_ras_n = 1'd1;
reg  basesoc_sdram_inti_p3_we_n = 1'd1;
wire basesoc_sdram_inti_p3_cke;
wire basesoc_sdram_inti_p3_odt;
wire basesoc_sdram_inti_p3_reset_n;
reg  basesoc_sdram_inti_p3_act_n = 1'd1;
wire [31:0] basesoc_sdram_inti_p3_wrdata;
wire basesoc_sdram_inti_p3_wrdata_en;
wire [3:0] basesoc_sdram_inti_p3_wrdata_mask;
wire basesoc_sdram_inti_p3_rddata_en;
reg  [31:0] basesoc_sdram_inti_p3_rddata = 32'd0;
reg  basesoc_sdram_inti_p3_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_slave_p0_address;
wire [2:0] basesoc_sdram_slave_p0_bank;
wire basesoc_sdram_slave_p0_cas_n;
wire basesoc_sdram_slave_p0_cs_n;
wire basesoc_sdram_slave_p0_ras_n;
wire basesoc_sdram_slave_p0_we_n;
wire basesoc_sdram_slave_p0_cke;
wire basesoc_sdram_slave_p0_odt;
wire basesoc_sdram_slave_p0_reset_n;
wire basesoc_sdram_slave_p0_act_n;
wire [31:0] basesoc_sdram_slave_p0_wrdata;
wire basesoc_sdram_slave_p0_wrdata_en;
wire [3:0] basesoc_sdram_slave_p0_wrdata_mask;
wire basesoc_sdram_slave_p0_rddata_en;
reg  [31:0] basesoc_sdram_slave_p0_rddata = 32'd0;
reg  basesoc_sdram_slave_p0_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_slave_p1_address;
wire [2:0] basesoc_sdram_slave_p1_bank;
wire basesoc_sdram_slave_p1_cas_n;
wire basesoc_sdram_slave_p1_cs_n;
wire basesoc_sdram_slave_p1_ras_n;
wire basesoc_sdram_slave_p1_we_n;
wire basesoc_sdram_slave_p1_cke;
wire basesoc_sdram_slave_p1_odt;
wire basesoc_sdram_slave_p1_reset_n;
wire basesoc_sdram_slave_p1_act_n;
wire [31:0] basesoc_sdram_slave_p1_wrdata;
wire basesoc_sdram_slave_p1_wrdata_en;
wire [3:0] basesoc_sdram_slave_p1_wrdata_mask;
wire basesoc_sdram_slave_p1_rddata_en;
reg  [31:0] basesoc_sdram_slave_p1_rddata = 32'd0;
reg  basesoc_sdram_slave_p1_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_slave_p2_address;
wire [2:0] basesoc_sdram_slave_p2_bank;
wire basesoc_sdram_slave_p2_cas_n;
wire basesoc_sdram_slave_p2_cs_n;
wire basesoc_sdram_slave_p2_ras_n;
wire basesoc_sdram_slave_p2_we_n;
wire basesoc_sdram_slave_p2_cke;
wire basesoc_sdram_slave_p2_odt;
wire basesoc_sdram_slave_p2_reset_n;
wire basesoc_sdram_slave_p2_act_n;
wire [31:0] basesoc_sdram_slave_p2_wrdata;
wire basesoc_sdram_slave_p2_wrdata_en;
wire [3:0] basesoc_sdram_slave_p2_wrdata_mask;
wire basesoc_sdram_slave_p2_rddata_en;
reg  [31:0] basesoc_sdram_slave_p2_rddata = 32'd0;
reg  basesoc_sdram_slave_p2_rddata_valid = 1'd0;
wire [15:0] basesoc_sdram_slave_p3_address;
wire [2:0] basesoc_sdram_slave_p3_bank;
wire basesoc_sdram_slave_p3_cas_n;
wire basesoc_sdram_slave_p3_cs_n;
wire basesoc_sdram_slave_p3_ras_n;
wire basesoc_sdram_slave_p3_we_n;
wire basesoc_sdram_slave_p3_cke;
wire basesoc_sdram_slave_p3_odt;
wire basesoc_sdram_slave_p3_reset_n;
wire basesoc_sdram_slave_p3_act_n;
wire [31:0] basesoc_sdram_slave_p3_wrdata;
wire basesoc_sdram_slave_p3_wrdata_en;
wire [3:0] basesoc_sdram_slave_p3_wrdata_mask;
wire basesoc_sdram_slave_p3_rddata_en;
reg  [31:0] basesoc_sdram_slave_p3_rddata = 32'd0;
reg  basesoc_sdram_slave_p3_rddata_valid = 1'd0;
reg  [15:0] basesoc_sdram_master_p0_address = 16'd0;
reg  [2:0] basesoc_sdram_master_p0_bank = 3'd0;
reg  basesoc_sdram_master_p0_cas_n = 1'd1;
reg  basesoc_sdram_master_p0_cs_n = 1'd1;
reg  basesoc_sdram_master_p0_ras_n = 1'd1;
reg  basesoc_sdram_master_p0_we_n = 1'd1;
reg  basesoc_sdram_master_p0_cke = 1'd0;
reg  basesoc_sdram_master_p0_odt = 1'd0;
reg  basesoc_sdram_master_p0_reset_n = 1'd0;
reg  basesoc_sdram_master_p0_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p0_wrdata = 32'd0;
reg  basesoc_sdram_master_p0_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p0_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p0_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p0_rddata;
wire basesoc_sdram_master_p0_rddata_valid;
reg  [15:0] basesoc_sdram_master_p1_address = 16'd0;
reg  [2:0] basesoc_sdram_master_p1_bank = 3'd0;
reg  basesoc_sdram_master_p1_cas_n = 1'd1;
reg  basesoc_sdram_master_p1_cs_n = 1'd1;
reg  basesoc_sdram_master_p1_ras_n = 1'd1;
reg  basesoc_sdram_master_p1_we_n = 1'd1;
reg  basesoc_sdram_master_p1_cke = 1'd0;
reg  basesoc_sdram_master_p1_odt = 1'd0;
reg  basesoc_sdram_master_p1_reset_n = 1'd0;
reg  basesoc_sdram_master_p1_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p1_wrdata = 32'd0;
reg  basesoc_sdram_master_p1_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p1_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p1_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p1_rddata;
wire basesoc_sdram_master_p1_rddata_valid;
reg  [15:0] basesoc_sdram_master_p2_address = 16'd0;
reg  [2:0] basesoc_sdram_master_p2_bank = 3'd0;
reg  basesoc_sdram_master_p2_cas_n = 1'd1;
reg  basesoc_sdram_master_p2_cs_n = 1'd1;
reg  basesoc_sdram_master_p2_ras_n = 1'd1;
reg  basesoc_sdram_master_p2_we_n = 1'd1;
reg  basesoc_sdram_master_p2_cke = 1'd0;
reg  basesoc_sdram_master_p2_odt = 1'd0;
reg  basesoc_sdram_master_p2_reset_n = 1'd0;
reg  basesoc_sdram_master_p2_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p2_wrdata = 32'd0;
reg  basesoc_sdram_master_p2_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p2_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p2_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p2_rddata;
wire basesoc_sdram_master_p2_rddata_valid;
reg  [15:0] basesoc_sdram_master_p3_address = 16'd0;
reg  [2:0] basesoc_sdram_master_p3_bank = 3'd0;
reg  basesoc_sdram_master_p3_cas_n = 1'd1;
reg  basesoc_sdram_master_p3_cs_n = 1'd1;
reg  basesoc_sdram_master_p3_ras_n = 1'd1;
reg  basesoc_sdram_master_p3_we_n = 1'd1;
reg  basesoc_sdram_master_p3_cke = 1'd0;
reg  basesoc_sdram_master_p3_odt = 1'd0;
reg  basesoc_sdram_master_p3_reset_n = 1'd0;
reg  basesoc_sdram_master_p3_act_n = 1'd1;
reg  [31:0] basesoc_sdram_master_p3_wrdata = 32'd0;
reg  basesoc_sdram_master_p3_wrdata_en = 1'd0;
reg  [3:0] basesoc_sdram_master_p3_wrdata_mask = 4'd0;
reg  basesoc_sdram_master_p3_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_master_p3_rddata;
wire basesoc_sdram_master_p3_rddata_valid;
wire basesoc_sdram_sel;
wire basesoc_sdram_cke;
wire basesoc_sdram_odt;
wire basesoc_sdram_reset_n;
reg  [3:0] basesoc_sdram_storage = 4'd1;
reg  basesoc_sdram_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector0_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector0_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector0_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector0_command_issue_r;
reg  basesoc_sdram_phaseinjector0_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector0_command_issue_w = 1'd0;
reg  [15:0] basesoc_sdram_phaseinjector0_address_storage = 16'd0;
reg  basesoc_sdram_phaseinjector0_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector0_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector0_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector0_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector0_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector0_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector0_rddata_we;
reg  basesoc_sdram_phaseinjector0_rddata_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector1_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector1_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector1_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector1_command_issue_r;
reg  basesoc_sdram_phaseinjector1_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector1_command_issue_w = 1'd0;
reg  [15:0] basesoc_sdram_phaseinjector1_address_storage = 16'd0;
reg  basesoc_sdram_phaseinjector1_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector1_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector1_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector1_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector1_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector1_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector1_rddata_we;
reg  basesoc_sdram_phaseinjector1_rddata_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector2_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector2_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector2_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector2_command_issue_r;
reg  basesoc_sdram_phaseinjector2_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector2_command_issue_w = 1'd0;
reg  [15:0] basesoc_sdram_phaseinjector2_address_storage = 16'd0;
reg  basesoc_sdram_phaseinjector2_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector2_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector2_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector2_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector2_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector2_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector2_rddata_we;
reg  basesoc_sdram_phaseinjector2_rddata_re = 1'd0;
reg  [5:0] basesoc_sdram_phaseinjector3_command_storage = 6'd0;
reg  basesoc_sdram_phaseinjector3_command_re = 1'd0;
reg  basesoc_sdram_phaseinjector3_command_issue_re = 1'd0;
wire basesoc_sdram_phaseinjector3_command_issue_r;
reg  basesoc_sdram_phaseinjector3_command_issue_we = 1'd0;
reg  basesoc_sdram_phaseinjector3_command_issue_w = 1'd0;
reg  [15:0] basesoc_sdram_phaseinjector3_address_storage = 16'd0;
reg  basesoc_sdram_phaseinjector3_address_re = 1'd0;
reg  [2:0] basesoc_sdram_phaseinjector3_baddress_storage = 3'd0;
reg  basesoc_sdram_phaseinjector3_baddress_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector3_wrdata_storage = 32'd0;
reg  basesoc_sdram_phaseinjector3_wrdata_re = 1'd0;
reg  [31:0] basesoc_sdram_phaseinjector3_rddata_status = 32'd0;
wire basesoc_sdram_phaseinjector3_rddata_we;
reg  basesoc_sdram_phaseinjector3_rddata_re = 1'd0;
wire basesoc_sdram_interface_bank0_valid;
wire basesoc_sdram_interface_bank0_ready;
wire basesoc_sdram_interface_bank0_we;
wire [22:0] basesoc_sdram_interface_bank0_addr;
wire basesoc_sdram_interface_bank0_lock;
wire basesoc_sdram_interface_bank0_wdata_ready;
wire basesoc_sdram_interface_bank0_rdata_valid;
wire basesoc_sdram_interface_bank1_valid;
wire basesoc_sdram_interface_bank1_ready;
wire basesoc_sdram_interface_bank1_we;
wire [22:0] basesoc_sdram_interface_bank1_addr;
wire basesoc_sdram_interface_bank1_lock;
wire basesoc_sdram_interface_bank1_wdata_ready;
wire basesoc_sdram_interface_bank1_rdata_valid;
wire basesoc_sdram_interface_bank2_valid;
wire basesoc_sdram_interface_bank2_ready;
wire basesoc_sdram_interface_bank2_we;
wire [22:0] basesoc_sdram_interface_bank2_addr;
wire basesoc_sdram_interface_bank2_lock;
wire basesoc_sdram_interface_bank2_wdata_ready;
wire basesoc_sdram_interface_bank2_rdata_valid;
wire basesoc_sdram_interface_bank3_valid;
wire basesoc_sdram_interface_bank3_ready;
wire basesoc_sdram_interface_bank3_we;
wire [22:0] basesoc_sdram_interface_bank3_addr;
wire basesoc_sdram_interface_bank3_lock;
wire basesoc_sdram_interface_bank3_wdata_ready;
wire basesoc_sdram_interface_bank3_rdata_valid;
wire basesoc_sdram_interface_bank4_valid;
wire basesoc_sdram_interface_bank4_ready;
wire basesoc_sdram_interface_bank4_we;
wire [22:0] basesoc_sdram_interface_bank4_addr;
wire basesoc_sdram_interface_bank4_lock;
wire basesoc_sdram_interface_bank4_wdata_ready;
wire basesoc_sdram_interface_bank4_rdata_valid;
wire basesoc_sdram_interface_bank5_valid;
wire basesoc_sdram_interface_bank5_ready;
wire basesoc_sdram_interface_bank5_we;
wire [22:0] basesoc_sdram_interface_bank5_addr;
wire basesoc_sdram_interface_bank5_lock;
wire basesoc_sdram_interface_bank5_wdata_ready;
wire basesoc_sdram_interface_bank5_rdata_valid;
wire basesoc_sdram_interface_bank6_valid;
wire basesoc_sdram_interface_bank6_ready;
wire basesoc_sdram_interface_bank6_we;
wire [22:0] basesoc_sdram_interface_bank6_addr;
wire basesoc_sdram_interface_bank6_lock;
wire basesoc_sdram_interface_bank6_wdata_ready;
wire basesoc_sdram_interface_bank6_rdata_valid;
wire basesoc_sdram_interface_bank7_valid;
wire basesoc_sdram_interface_bank7_ready;
wire basesoc_sdram_interface_bank7_we;
wire [22:0] basesoc_sdram_interface_bank7_addr;
wire basesoc_sdram_interface_bank7_lock;
wire basesoc_sdram_interface_bank7_wdata_ready;
wire basesoc_sdram_interface_bank7_rdata_valid;
reg  [127:0] basesoc_sdram_interface_wdata = 128'd0;
reg  [15:0] basesoc_sdram_interface_wdata_we = 16'd0;
wire [127:0] basesoc_sdram_interface_rdata;
reg  [15:0] basesoc_sdram_dfi_p0_address = 16'd0;
reg  [2:0] basesoc_sdram_dfi_p0_bank = 3'd0;
reg  basesoc_sdram_dfi_p0_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p0_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p0_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p0_we_n = 1'd1;
wire basesoc_sdram_dfi_p0_cke;
wire basesoc_sdram_dfi_p0_odt;
wire basesoc_sdram_dfi_p0_reset_n;
reg  basesoc_sdram_dfi_p0_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p0_wrdata;
reg  basesoc_sdram_dfi_p0_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p0_wrdata_mask;
reg  basesoc_sdram_dfi_p0_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p0_rddata;
wire basesoc_sdram_dfi_p0_rddata_valid;
reg  [15:0] basesoc_sdram_dfi_p1_address = 16'd0;
reg  [2:0] basesoc_sdram_dfi_p1_bank = 3'd0;
reg  basesoc_sdram_dfi_p1_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p1_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p1_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p1_we_n = 1'd1;
wire basesoc_sdram_dfi_p1_cke;
wire basesoc_sdram_dfi_p1_odt;
wire basesoc_sdram_dfi_p1_reset_n;
reg  basesoc_sdram_dfi_p1_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p1_wrdata;
reg  basesoc_sdram_dfi_p1_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p1_wrdata_mask;
reg  basesoc_sdram_dfi_p1_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p1_rddata;
wire basesoc_sdram_dfi_p1_rddata_valid;
reg  [15:0] basesoc_sdram_dfi_p2_address = 16'd0;
reg  [2:0] basesoc_sdram_dfi_p2_bank = 3'd0;
reg  basesoc_sdram_dfi_p2_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p2_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p2_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p2_we_n = 1'd1;
wire basesoc_sdram_dfi_p2_cke;
wire basesoc_sdram_dfi_p2_odt;
wire basesoc_sdram_dfi_p2_reset_n;
reg  basesoc_sdram_dfi_p2_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p2_wrdata;
reg  basesoc_sdram_dfi_p2_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p2_wrdata_mask;
reg  basesoc_sdram_dfi_p2_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p2_rddata;
wire basesoc_sdram_dfi_p2_rddata_valid;
reg  [15:0] basesoc_sdram_dfi_p3_address = 16'd0;
reg  [2:0] basesoc_sdram_dfi_p3_bank = 3'd0;
reg  basesoc_sdram_dfi_p3_cas_n = 1'd1;
reg  basesoc_sdram_dfi_p3_cs_n = 1'd1;
reg  basesoc_sdram_dfi_p3_ras_n = 1'd1;
reg  basesoc_sdram_dfi_p3_we_n = 1'd1;
wire basesoc_sdram_dfi_p3_cke;
wire basesoc_sdram_dfi_p3_odt;
wire basesoc_sdram_dfi_p3_reset_n;
reg  basesoc_sdram_dfi_p3_act_n = 1'd1;
wire [31:0] basesoc_sdram_dfi_p3_wrdata;
reg  basesoc_sdram_dfi_p3_wrdata_en = 1'd0;
wire [3:0] basesoc_sdram_dfi_p3_wrdata_mask;
reg  basesoc_sdram_dfi_p3_rddata_en = 1'd0;
wire [31:0] basesoc_sdram_dfi_p3_rddata;
wire basesoc_sdram_dfi_p3_rddata_valid;
reg  basesoc_sdram_cmd_valid = 1'd0;
reg  basesoc_sdram_cmd_ready = 1'd0;
reg  basesoc_sdram_cmd_last = 1'd0;
reg  [15:0] basesoc_sdram_cmd_payload_a = 16'd0;
reg  [2:0] basesoc_sdram_cmd_payload_ba = 3'd0;
reg  basesoc_sdram_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_cmd_payload_we = 1'd0;
reg  basesoc_sdram_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_cmd_payload_is_write = 1'd0;
wire basesoc_sdram_wants_refresh;
wire basesoc_sdram_wants_zqcs;
wire basesoc_sdram_timer_wait;
wire basesoc_sdram_timer_done0;
wire [9:0] basesoc_sdram_timer_count0;
wire basesoc_sdram_timer_done1;
reg  [9:0] basesoc_sdram_timer_count1 = 10'd781;
wire basesoc_sdram_postponer_req_i;
reg  basesoc_sdram_postponer_req_o = 1'd0;
reg  basesoc_sdram_postponer_count = 1'd0;
reg  basesoc_sdram_sequencer_start0 = 1'd0;
wire basesoc_sdram_sequencer_done0;
wire basesoc_sdram_sequencer_start1;
reg  basesoc_sdram_sequencer_done1 = 1'd0;
reg  [6:0] basesoc_sdram_sequencer_counter = 7'd0;
reg  basesoc_sdram_sequencer_count = 1'd0;
wire basesoc_sdram_zqcs_timer_wait;
wire basesoc_sdram_zqcs_timer_done0;
wire [26:0] basesoc_sdram_zqcs_timer_count0;
wire basesoc_sdram_zqcs_timer_done1;
reg  [26:0] basesoc_sdram_zqcs_timer_count1 = 27'd99999999;
reg  basesoc_sdram_zqcs_executer_start = 1'd0;
reg  basesoc_sdram_zqcs_executer_done = 1'd0;
reg  [4:0] basesoc_sdram_zqcs_executer_counter = 5'd0;
wire basesoc_sdram_bankmachine0_req_valid;
wire basesoc_sdram_bankmachine0_req_ready;
wire basesoc_sdram_bankmachine0_req_we;
wire [22:0] basesoc_sdram_bankmachine0_req_addr;
wire basesoc_sdram_bankmachine0_req_lock;
reg  basesoc_sdram_bankmachine0_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine0_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine0_refresh_req;
reg  basesoc_sdram_bankmachine0_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine0_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine0_cmd_payload_ba;
reg  basesoc_sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine0_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
wire [25:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
wire [25:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
reg  [3:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine0_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine0_row = 16'd0;
reg  basesoc_sdram_bankmachine0_row_opened = 1'd0;
wire basesoc_sdram_bankmachine0_row_hit;
reg  basesoc_sdram_bankmachine0_row_open = 1'd0;
reg  basesoc_sdram_bankmachine0_row_close = 1'd0;
reg  basesoc_sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine0_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine0_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine0_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine0_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine0_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine0_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine0_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine1_req_valid;
wire basesoc_sdram_bankmachine1_req_ready;
wire basesoc_sdram_bankmachine1_req_we;
wire [22:0] basesoc_sdram_bankmachine1_req_addr;
wire basesoc_sdram_bankmachine1_req_lock;
reg  basesoc_sdram_bankmachine1_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine1_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine1_refresh_req;
reg  basesoc_sdram_bankmachine1_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine1_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine1_cmd_payload_ba;
reg  basesoc_sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine1_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
wire [25:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
wire [25:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
reg  [3:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine1_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine1_row = 16'd0;
reg  basesoc_sdram_bankmachine1_row_opened = 1'd0;
wire basesoc_sdram_bankmachine1_row_hit;
reg  basesoc_sdram_bankmachine1_row_open = 1'd0;
reg  basesoc_sdram_bankmachine1_row_close = 1'd0;
reg  basesoc_sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine1_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine1_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine1_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine1_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine1_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine1_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine1_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine2_req_valid;
wire basesoc_sdram_bankmachine2_req_ready;
wire basesoc_sdram_bankmachine2_req_we;
wire [22:0] basesoc_sdram_bankmachine2_req_addr;
wire basesoc_sdram_bankmachine2_req_lock;
reg  basesoc_sdram_bankmachine2_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine2_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine2_refresh_req;
reg  basesoc_sdram_bankmachine2_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine2_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine2_cmd_payload_ba;
reg  basesoc_sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine2_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
wire [25:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
wire [25:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
reg  [3:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine2_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine2_row = 16'd0;
reg  basesoc_sdram_bankmachine2_row_opened = 1'd0;
wire basesoc_sdram_bankmachine2_row_hit;
reg  basesoc_sdram_bankmachine2_row_open = 1'd0;
reg  basesoc_sdram_bankmachine2_row_close = 1'd0;
reg  basesoc_sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine2_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine2_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine2_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine2_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine2_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine2_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine2_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine3_req_valid;
wire basesoc_sdram_bankmachine3_req_ready;
wire basesoc_sdram_bankmachine3_req_we;
wire [22:0] basesoc_sdram_bankmachine3_req_addr;
wire basesoc_sdram_bankmachine3_req_lock;
reg  basesoc_sdram_bankmachine3_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine3_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine3_refresh_req;
reg  basesoc_sdram_bankmachine3_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine3_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine3_cmd_payload_ba;
reg  basesoc_sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine3_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
wire [25:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
wire [25:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
reg  [3:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine3_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine3_row = 16'd0;
reg  basesoc_sdram_bankmachine3_row_opened = 1'd0;
wire basesoc_sdram_bankmachine3_row_hit;
reg  basesoc_sdram_bankmachine3_row_open = 1'd0;
reg  basesoc_sdram_bankmachine3_row_close = 1'd0;
reg  basesoc_sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine3_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine3_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine3_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine3_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine3_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine3_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine3_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine4_req_valid;
wire basesoc_sdram_bankmachine4_req_ready;
wire basesoc_sdram_bankmachine4_req_we;
wire [22:0] basesoc_sdram_bankmachine4_req_addr;
wire basesoc_sdram_bankmachine4_req_lock;
reg  basesoc_sdram_bankmachine4_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine4_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine4_refresh_req;
reg  basesoc_sdram_bankmachine4_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine4_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine4_cmd_payload_ba;
reg  basesoc_sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine4_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
wire [25:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
wire [25:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
reg  [3:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine4_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine4_row = 16'd0;
reg  basesoc_sdram_bankmachine4_row_opened = 1'd0;
wire basesoc_sdram_bankmachine4_row_hit;
reg  basesoc_sdram_bankmachine4_row_open = 1'd0;
reg  basesoc_sdram_bankmachine4_row_close = 1'd0;
reg  basesoc_sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine4_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine4_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine4_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine4_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine4_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine4_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine4_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine5_req_valid;
wire basesoc_sdram_bankmachine5_req_ready;
wire basesoc_sdram_bankmachine5_req_we;
wire [22:0] basesoc_sdram_bankmachine5_req_addr;
wire basesoc_sdram_bankmachine5_req_lock;
reg  basesoc_sdram_bankmachine5_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine5_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine5_refresh_req;
reg  basesoc_sdram_bankmachine5_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine5_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine5_cmd_payload_ba;
reg  basesoc_sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine5_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
wire [25:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
wire [25:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
reg  [3:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine5_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine5_row = 16'd0;
reg  basesoc_sdram_bankmachine5_row_opened = 1'd0;
wire basesoc_sdram_bankmachine5_row_hit;
reg  basesoc_sdram_bankmachine5_row_open = 1'd0;
reg  basesoc_sdram_bankmachine5_row_close = 1'd0;
reg  basesoc_sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine5_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine5_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine5_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine5_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine5_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine5_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine5_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine6_req_valid;
wire basesoc_sdram_bankmachine6_req_ready;
wire basesoc_sdram_bankmachine6_req_we;
wire [22:0] basesoc_sdram_bankmachine6_req_addr;
wire basesoc_sdram_bankmachine6_req_lock;
reg  basesoc_sdram_bankmachine6_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine6_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine6_refresh_req;
reg  basesoc_sdram_bankmachine6_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine6_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine6_cmd_payload_ba;
reg  basesoc_sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine6_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
wire [25:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
wire [25:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
reg  [3:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine6_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine6_row = 16'd0;
reg  basesoc_sdram_bankmachine6_row_opened = 1'd0;
wire basesoc_sdram_bankmachine6_row_hit;
reg  basesoc_sdram_bankmachine6_row_open = 1'd0;
reg  basesoc_sdram_bankmachine6_row_close = 1'd0;
reg  basesoc_sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine6_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine6_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine6_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine6_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine6_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine6_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine6_trascon_count = 3'd0;
wire basesoc_sdram_bankmachine7_req_valid;
wire basesoc_sdram_bankmachine7_req_ready;
wire basesoc_sdram_bankmachine7_req_we;
wire [22:0] basesoc_sdram_bankmachine7_req_addr;
wire basesoc_sdram_bankmachine7_req_lock;
reg  basesoc_sdram_bankmachine7_req_wdata_ready = 1'd0;
reg  basesoc_sdram_bankmachine7_req_rdata_valid = 1'd0;
wire basesoc_sdram_bankmachine7_refresh_req;
reg  basesoc_sdram_bankmachine7_refresh_gnt = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_valid = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_ready = 1'd0;
reg  [15:0] basesoc_sdram_bankmachine7_cmd_payload_a = 16'd0;
wire [2:0] basesoc_sdram_bankmachine7_cmd_payload_ba;
reg  basesoc_sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_we = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg  basesoc_sdram_bankmachine7_auto_precharge = 1'd0;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
reg  basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_first = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_last = 1'd0;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
wire [22:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
wire [25:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
wire [25:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
reg  [3:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level = 4'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume = 3'd0;
reg  [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr = 3'd0;
wire [25:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we;
wire [25:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read;
wire [2:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr;
wire [25:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we;
wire [22:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
wire [22:0] basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_valid;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_ready;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_first;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_last;
wire basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_we;
wire [22:0] basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_addr;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_valid = 1'd0;
wire basesoc_sdram_bankmachine7_cmd_buffer_source_ready;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_first = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_last = 1'd0;
reg  basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we = 1'd0;
reg  [22:0] basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr = 23'd0;
reg  [15:0] basesoc_sdram_bankmachine7_row = 16'd0;
reg  basesoc_sdram_bankmachine7_row_opened = 1'd0;
wire basesoc_sdram_bankmachine7_row_hit;
reg  basesoc_sdram_bankmachine7_row_open = 1'd0;
reg  basesoc_sdram_bankmachine7_row_close = 1'd0;
reg  basesoc_sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire basesoc_sdram_bankmachine7_twtpcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine7_twtpcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_twtpcon_count = 3'd0;
wire basesoc_sdram_bankmachine7_trccon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine7_trccon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_trccon_count = 3'd0;
wire basesoc_sdram_bankmachine7_trascon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_bankmachine7_trascon_ready = 1'd0;
reg  [2:0] basesoc_sdram_bankmachine7_trascon_count = 3'd0;
wire basesoc_sdram_ras_allowed;
wire basesoc_sdram_cas_allowed;
wire [1:0] basesoc_sdram_rdcmdphase;
wire [1:0] basesoc_sdram_wrcmdphase;
reg  basesoc_sdram_choose_cmd_want_reads = 1'd0;
reg  basesoc_sdram_choose_cmd_want_writes = 1'd0;
reg  basesoc_sdram_choose_cmd_want_cmds = 1'd0;
reg  basesoc_sdram_choose_cmd_want_activates = 1'd0;
wire basesoc_sdram_choose_cmd_cmd_valid;
reg  basesoc_sdram_choose_cmd_cmd_ready = 1'd0;
wire [15:0] basesoc_sdram_choose_cmd_cmd_payload_a;
wire [2:0] basesoc_sdram_choose_cmd_cmd_payload_ba;
reg  basesoc_sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_choose_cmd_cmd_payload_we = 1'd0;
wire basesoc_sdram_choose_cmd_cmd_payload_is_cmd;
wire basesoc_sdram_choose_cmd_cmd_payload_is_read;
wire basesoc_sdram_choose_cmd_cmd_payload_is_write;
reg  [7:0] basesoc_sdram_choose_cmd_valids = 8'd0;
wire [7:0] basesoc_sdram_choose_cmd_request;
reg  [2:0] basesoc_sdram_choose_cmd_grant = 3'd0;
wire basesoc_sdram_choose_cmd_ce;
reg  basesoc_sdram_choose_req_want_reads = 1'd0;
reg  basesoc_sdram_choose_req_want_writes = 1'd0;
reg  basesoc_sdram_choose_req_want_cmds = 1'd0;
reg  basesoc_sdram_choose_req_want_activates = 1'd0;
wire basesoc_sdram_choose_req_cmd_valid;
reg  basesoc_sdram_choose_req_cmd_ready = 1'd0;
wire [15:0] basesoc_sdram_choose_req_cmd_payload_a;
wire [2:0] basesoc_sdram_choose_req_cmd_payload_ba;
reg  basesoc_sdram_choose_req_cmd_payload_cas = 1'd0;
reg  basesoc_sdram_choose_req_cmd_payload_ras = 1'd0;
reg  basesoc_sdram_choose_req_cmd_payload_we = 1'd0;
wire basesoc_sdram_choose_req_cmd_payload_is_cmd;
wire basesoc_sdram_choose_req_cmd_payload_is_read;
wire basesoc_sdram_choose_req_cmd_payload_is_write;
reg  [7:0] basesoc_sdram_choose_req_valids = 8'd0;
wire [7:0] basesoc_sdram_choose_req_request;
reg  [2:0] basesoc_sdram_choose_req_grant = 3'd0;
wire basesoc_sdram_choose_req_ce;
reg  [15:0] basesoc_sdram_nop_a = 16'd0;
reg  [2:0] basesoc_sdram_nop_ba = 3'd0;
reg  [1:0] basesoc_sdram_steerer_sel0 = 2'd0;
reg  [1:0] basesoc_sdram_steerer_sel1 = 2'd0;
reg  [1:0] basesoc_sdram_steerer_sel2 = 2'd0;
reg  [1:0] basesoc_sdram_steerer_sel3 = 2'd0;
reg  basesoc_sdram_steerer0 = 1'd1;
reg  basesoc_sdram_steerer1 = 1'd1;
reg  basesoc_sdram_steerer2 = 1'd1;
reg  basesoc_sdram_steerer3 = 1'd1;
reg  basesoc_sdram_steerer4 = 1'd1;
reg  basesoc_sdram_steerer5 = 1'd1;
reg  basesoc_sdram_steerer6 = 1'd1;
reg  basesoc_sdram_steerer7 = 1'd1;
wire basesoc_sdram_trrdcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_trrdcon_ready = 1'd0;
reg  basesoc_sdram_trrdcon_count = 1'd0;
wire basesoc_sdram_tfawcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_tfawcon_ready = 1'd1;
wire [2:0] basesoc_sdram_tfawcon_count;
reg  [4:0] basesoc_sdram_tfawcon_window = 5'd0;
wire basesoc_sdram_tccdcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_tccdcon_ready = 1'd0;
reg  basesoc_sdram_tccdcon_count = 1'd0;
wire basesoc_sdram_twtrcon_valid;
(* dont_touch = "true" *) reg  basesoc_sdram_twtrcon_ready = 1'd0;
reg  [2:0] basesoc_sdram_twtrcon_count = 3'd0;
wire basesoc_sdram_read_available;
wire basesoc_sdram_write_available;
reg  basesoc_sdram_en0 = 1'd0;
wire basesoc_sdram_max_time0;
reg  [4:0] basesoc_sdram_time0 = 5'd0;
reg  basesoc_sdram_en1 = 1'd0;
wire basesoc_sdram_max_time1;
reg  [3:0] basesoc_sdram_time1 = 4'd0;
wire basesoc_sdram_go_to_refresh;
wire basesoc_port_flush;
reg  basesoc_port_cmd_valid = 1'd0;
wire basesoc_port_cmd_ready;
wire basesoc_port_cmd_last;
wire basesoc_port_cmd_payload_we;
wire [25:0] basesoc_port_cmd_payload_addr;
reg  basesoc_port_wdata_valid = 1'd0;
wire basesoc_port_wdata_ready;
wire [127:0] basesoc_port_wdata_payload_data;
wire [15:0] basesoc_port_wdata_payload_we;
wire basesoc_port_rdata_valid;
wire basesoc_port_rdata_ready;
wire [127:0] basesoc_port_rdata_payload_data;
wire [29:0] basesoc_wb_sdram_adr;
wire [31:0] basesoc_wb_sdram_dat_w;
reg  [31:0] basesoc_wb_sdram_dat_r = 32'd0;
wire [3:0] basesoc_wb_sdram_sel;
wire basesoc_wb_sdram_cyc;
wire basesoc_wb_sdram_stb;
reg  basesoc_wb_sdram_ack = 1'd0;
wire basesoc_wb_sdram_we;
wire [2:0] basesoc_wb_sdram_cti;
wire [1:0] basesoc_wb_sdram_bte;
reg  basesoc_wb_sdram_err = 1'd0;
wire [29:0] basesoc_interface_adr;
wire [127:0] basesoc_interface_dat_w;
reg  [127:0] basesoc_interface_dat_r = 128'd0;
wire [15:0] basesoc_interface_sel;
reg  basesoc_interface_cyc = 1'd0;
reg  basesoc_interface_stb = 1'd0;
reg  basesoc_interface_ack = 1'd0;
reg  basesoc_interface_we = 1'd0;
wire [8:0] basesoc_data_port_adr;
wire [127:0] basesoc_data_port_dat_r;
reg  [15:0] basesoc_data_port_we = 16'd0;
reg  [127:0] basesoc_data_port_dat_w = 128'd0;
reg  basesoc_write_from_slave = 1'd0;
reg  [1:0] basesoc_adr_offset_r = 2'd0;
wire [8:0] basesoc_tag_port_adr;
wire [23:0] basesoc_tag_port_dat_r;
reg  basesoc_tag_port_we = 1'd0;
wire [23:0] basesoc_tag_port_dat_w;
wire [22:0] basesoc_tag_do_tag;
wire basesoc_tag_do_dirty;
wire [22:0] basesoc_tag_di_tag;
reg  basesoc_tag_di_dirty = 1'd0;
reg  basesoc_word_clr = 1'd0;
reg  basesoc_word_inc = 1'd0;
reg  basesoc_aborted = 1'd0;
reg  basesoc_is_ongoing = 1'd0;
wire s7pciephy_sink_sink_valid;
wire s7pciephy_sink_sink_ready;
wire s7pciephy_sink_sink_first;
wire s7pciephy_sink_sink_last;
wire [127:0] s7pciephy_sink_sink_payload_dat;
wire [15:0] s7pciephy_sink_sink_payload_be;
wire s7pciephy_source_source_valid;
wire s7pciephy_source_source_ready;
wire s7pciephy_source_source_first;
wire s7pciephy_source_source_last;
wire [127:0] s7pciephy_source_source_payload_dat;
wire [15:0] s7pciephy_source_source_payload_be;
wire s7pciephy_msi_valid;
wire s7pciephy_msi_ready;
wire s7pciephy_msi_first;
wire s7pciephy_msi_last;
wire [7:0] s7pciephy_msi_payload_dat;
wire s7pciephy_csrfield_status;
wire s7pciephy_csrfield_rate;
wire [1:0] s7pciephy_csrfield_width;
wire [5:0] s7pciephy_csrfield_ltssm;
reg  [9:0] s7pciephy_link_status_status = 10'd0;
wire s7pciephy_link_status_we;
reg  s7pciephy_link_status_re = 1'd0;
wire s7pciephy_msi_enable_status;
wire s7pciephy_msi_enable_we;
reg  s7pciephy_msi_enable_re = 1'd0;
wire s7pciephy_msix_enable_status;
wire s7pciephy_msix_enable_we;
reg  s7pciephy_msix_enable_re = 1'd0;
wire s7pciephy_bus_master_enable_status;
wire s7pciephy_bus_master_enable_we;
reg  s7pciephy_bus_master_enable_re = 1'd0;
wire [15:0] s7pciephy_max_request_size_status;
wire s7pciephy_max_request_size_we;
reg  s7pciephy_max_request_size_re = 1'd0;
wire [15:0] s7pciephy_max_payload_size_status;
wire s7pciephy_max_payload_size_we;
reg  s7pciephy_max_payload_size_re = 1'd0;
reg  [15:0] s7pciephy_id = 16'd0;
reg  [15:0] s7pciephy_max_request_size = 16'd0;
reg  [15:0] s7pciephy_max_payload_size = 16'd0;
wire s7pciephy_pcie_refclk;
wire s7pciephy_pcie_rst_n;
(* dont_touch = "true" *) wire pcie_clk;
wire pcie_rst;
wire s7pciephy_tx_datapath_sink_sink_valid;
wire s7pciephy_tx_datapath_sink_sink_ready;
wire s7pciephy_tx_datapath_sink_sink_first;
wire s7pciephy_tx_datapath_sink_sink_last;
wire [127:0] s7pciephy_tx_datapath_sink_sink_payload_dat;
wire [15:0] s7pciephy_tx_datapath_sink_sink_payload_be;
wire s7pciephy_tx_datapath_source_source_valid;
wire s7pciephy_tx_datapath_source_source_ready;
wire s7pciephy_tx_datapath_source_source_first;
wire s7pciephy_tx_datapath_source_source_last;
wire [127:0] s7pciephy_tx_datapath_source_source_payload_dat;
wire [15:0] s7pciephy_tx_datapath_source_source_payload_be;
wire s7pciephy_tx_datapath_pipe_valid_sink_valid;
wire s7pciephy_tx_datapath_pipe_valid_sink_ready;
wire s7pciephy_tx_datapath_pipe_valid_sink_first;
wire s7pciephy_tx_datapath_pipe_valid_sink_last;
wire [127:0] s7pciephy_tx_datapath_pipe_valid_sink_payload_dat;
wire [15:0] s7pciephy_tx_datapath_pipe_valid_sink_payload_be;
reg  s7pciephy_tx_datapath_pipe_valid_source_valid = 1'd0;
wire s7pciephy_tx_datapath_pipe_valid_source_ready;
reg  s7pciephy_tx_datapath_pipe_valid_source_first = 1'd0;
reg  s7pciephy_tx_datapath_pipe_valid_source_last = 1'd0;
reg  [127:0] s7pciephy_tx_datapath_pipe_valid_source_payload_dat = 128'd0;
reg  [15:0] s7pciephy_tx_datapath_pipe_valid_source_payload_be = 16'd0;
wire s7pciephy_tx_datapath_cdc_sink_valid;
wire s7pciephy_tx_datapath_cdc_sink_ready;
wire s7pciephy_tx_datapath_cdc_sink_first;
wire s7pciephy_tx_datapath_cdc_sink_last;
wire [127:0] s7pciephy_tx_datapath_cdc_sink_payload_dat;
wire [15:0] s7pciephy_tx_datapath_cdc_sink_payload_be;
wire s7pciephy_tx_datapath_cdc_source_valid;
wire s7pciephy_tx_datapath_cdc_source_ready;
wire s7pciephy_tx_datapath_cdc_source_first;
wire s7pciephy_tx_datapath_cdc_source_last;
wire [127:0] s7pciephy_tx_datapath_cdc_source_payload_dat;
wire [15:0] s7pciephy_tx_datapath_cdc_source_payload_be;
wire s7pciephy_tx_datapath_cdc_asyncfifo_we;
wire s7pciephy_tx_datapath_cdc_asyncfifo_writable;
wire s7pciephy_tx_datapath_cdc_asyncfifo_re;
wire s7pciephy_tx_datapath_cdc_asyncfifo_readable;
wire [145:0] s7pciephy_tx_datapath_cdc_asyncfifo_din;
wire [145:0] s7pciephy_tx_datapath_cdc_asyncfifo_dout;
wire s7pciephy_tx_datapath_cdc_graycounter0_ce;
(* dont_touch = "true" *) reg  [2:0] s7pciephy_tx_datapath_cdc_graycounter0_q = 3'd0;
wire [2:0] s7pciephy_tx_datapath_cdc_graycounter0_q_next;
reg  [2:0] s7pciephy_tx_datapath_cdc_graycounter0_q_binary = 3'd0;
reg  [2:0] s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary = 3'd0;
wire s7pciephy_tx_datapath_cdc_graycounter1_ce;
(* dont_touch = "true" *) reg  [2:0] s7pciephy_tx_datapath_cdc_graycounter1_q = 3'd0;
wire [2:0] s7pciephy_tx_datapath_cdc_graycounter1_q_next;
reg  [2:0] s7pciephy_tx_datapath_cdc_graycounter1_q_binary = 3'd0;
reg  [2:0] s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] s7pciephy_tx_datapath_cdc_produce_rdomain;
wire [2:0] s7pciephy_tx_datapath_cdc_consume_wdomain;
wire [1:0] s7pciephy_tx_datapath_cdc_wrport_adr;
wire [145:0] s7pciephy_tx_datapath_cdc_wrport_dat_r;
wire s7pciephy_tx_datapath_cdc_wrport_we;
wire [145:0] s7pciephy_tx_datapath_cdc_wrport_dat_w;
wire [1:0] s7pciephy_tx_datapath_cdc_rdport_adr;
wire [145:0] s7pciephy_tx_datapath_cdc_rdport_dat_r;
wire [127:0] s7pciephy_tx_datapath_cdc_fifo_in_payload_dat;
wire [15:0] s7pciephy_tx_datapath_cdc_fifo_in_payload_be;
wire s7pciephy_tx_datapath_cdc_fifo_in_first;
wire s7pciephy_tx_datapath_cdc_fifo_in_last;
wire [127:0] s7pciephy_tx_datapath_cdc_fifo_out_payload_dat;
wire [15:0] s7pciephy_tx_datapath_cdc_fifo_out_payload_be;
wire s7pciephy_tx_datapath_cdc_fifo_out_first;
wire s7pciephy_tx_datapath_cdc_fifo_out_last;
wire s7pciephy_tx_datapath_converter_sink_valid;
wire s7pciephy_tx_datapath_converter_sink_ready;
wire s7pciephy_tx_datapath_converter_sink_first;
wire s7pciephy_tx_datapath_converter_sink_last;
wire [127:0] s7pciephy_tx_datapath_converter_sink_payload_dat;
wire [15:0] s7pciephy_tx_datapath_converter_sink_payload_be;
wire s7pciephy_tx_datapath_converter_source_valid;
wire s7pciephy_tx_datapath_converter_source_ready;
wire s7pciephy_tx_datapath_converter_source_first;
wire s7pciephy_tx_datapath_converter_source_last;
wire [127:0] s7pciephy_tx_datapath_converter_source_payload_dat;
wire [15:0] s7pciephy_tx_datapath_converter_source_payload_be;
wire s7pciephy_tx_datapath_converter_converter_sink_valid;
wire s7pciephy_tx_datapath_converter_converter_sink_ready;
wire s7pciephy_tx_datapath_converter_converter_sink_first;
wire s7pciephy_tx_datapath_converter_converter_sink_last;
wire [143:0] s7pciephy_tx_datapath_converter_converter_sink_payload_data;
wire s7pciephy_tx_datapath_converter_converter_source_valid;
wire s7pciephy_tx_datapath_converter_converter_source_ready;
wire s7pciephy_tx_datapath_converter_converter_source_first;
wire s7pciephy_tx_datapath_converter_converter_source_last;
wire [143:0] s7pciephy_tx_datapath_converter_converter_source_payload_data;
wire s7pciephy_tx_datapath_converter_converter_source_payload_valid_token_count;
wire s7pciephy_tx_datapath_converter_source_source_valid;
wire s7pciephy_tx_datapath_converter_source_source_ready;
wire s7pciephy_tx_datapath_converter_source_source_first;
wire s7pciephy_tx_datapath_converter_source_source_last;
wire [143:0] s7pciephy_tx_datapath_converter_source_source_payload_data;
wire s7pciephy_tx_datapath_pipe_ready_sink_valid;
wire s7pciephy_tx_datapath_pipe_ready_sink_ready;
wire s7pciephy_tx_datapath_pipe_ready_sink_first;
wire s7pciephy_tx_datapath_pipe_ready_sink_last;
wire [127:0] s7pciephy_tx_datapath_pipe_ready_sink_payload_dat;
wire [15:0] s7pciephy_tx_datapath_pipe_ready_sink_payload_be;
reg  s7pciephy_tx_datapath_pipe_ready_source_valid = 1'd0;
wire s7pciephy_tx_datapath_pipe_ready_source_ready;
reg  s7pciephy_tx_datapath_pipe_ready_source_first = 1'd0;
reg  s7pciephy_tx_datapath_pipe_ready_source_last = 1'd0;
reg  [127:0] s7pciephy_tx_datapath_pipe_ready_source_payload_dat = 128'd0;
reg  [15:0] s7pciephy_tx_datapath_pipe_ready_source_payload_be = 16'd0;
reg  s7pciephy_tx_datapath_pipe_ready_valid = 1'd0;
reg  s7pciephy_tx_datapath_pipe_ready_sink_d_valid = 1'd0;
reg  s7pciephy_tx_datapath_pipe_ready_sink_d_ready = 1'd0;
reg  s7pciephy_tx_datapath_pipe_ready_sink_d_first = 1'd0;
reg  s7pciephy_tx_datapath_pipe_ready_sink_d_last = 1'd0;
reg  [127:0] s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat = 128'd0;
reg  [15:0] s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be = 16'd0;
wire s7pciephy_rx_datapath_sink_sink_valid;
wire s7pciephy_rx_datapath_sink_sink_ready;
wire s7pciephy_rx_datapath_sink_sink_first;
wire s7pciephy_rx_datapath_sink_sink_last;
wire [127:0] s7pciephy_rx_datapath_sink_sink_payload_dat;
wire [15:0] s7pciephy_rx_datapath_sink_sink_payload_be;
wire s7pciephy_rx_datapath_source_source_valid;
wire s7pciephy_rx_datapath_source_source_ready;
wire s7pciephy_rx_datapath_source_source_first;
wire s7pciephy_rx_datapath_source_source_last;
wire [127:0] s7pciephy_rx_datapath_source_source_payload_dat;
wire [15:0] s7pciephy_rx_datapath_source_source_payload_be;
wire s7pciephy_rx_datapath_aligner_sink_valid;
reg  s7pciephy_rx_datapath_aligner_sink_ready = 1'd0;
wire s7pciephy_rx_datapath_aligner_sink_first;
wire s7pciephy_rx_datapath_aligner_sink_last;
wire [127:0] s7pciephy_rx_datapath_aligner_sink_payload_dat;
wire [15:0] s7pciephy_rx_datapath_aligner_sink_payload_be;
reg  s7pciephy_rx_datapath_aligner_source_valid = 1'd0;
wire s7pciephy_rx_datapath_aligner_source_ready;
reg  s7pciephy_rx_datapath_aligner_source_first = 1'd0;
reg  s7pciephy_rx_datapath_aligner_source_last = 1'd0;
reg  [127:0] s7pciephy_rx_datapath_aligner_source_payload_dat = 128'd0;
reg  [15:0] s7pciephy_rx_datapath_aligner_source_payload_be = 16'd0;
reg  [1:0] s7pciephy_rx_datapath_aligner_first_dword = 2'd0;
reg  [63:0] s7pciephy_rx_datapath_aligner_dat_last = 64'd0;
reg  [7:0] s7pciephy_rx_datapath_aligner_be_last = 8'd0;
wire s7pciephy_rx_datapath_pipe_ready_sink_valid;
wire s7pciephy_rx_datapath_pipe_ready_sink_ready;
wire s7pciephy_rx_datapath_pipe_ready_sink_first;
wire s7pciephy_rx_datapath_pipe_ready_sink_last;
wire [127:0] s7pciephy_rx_datapath_pipe_ready_sink_payload_dat;
wire [15:0] s7pciephy_rx_datapath_pipe_ready_sink_payload_be;
reg  s7pciephy_rx_datapath_pipe_ready_source_valid = 1'd0;
wire s7pciephy_rx_datapath_pipe_ready_source_ready;
reg  s7pciephy_rx_datapath_pipe_ready_source_first = 1'd0;
reg  s7pciephy_rx_datapath_pipe_ready_source_last = 1'd0;
reg  [127:0] s7pciephy_rx_datapath_pipe_ready_source_payload_dat = 128'd0;
reg  [15:0] s7pciephy_rx_datapath_pipe_ready_source_payload_be = 16'd0;
reg  s7pciephy_rx_datapath_pipe_ready_valid = 1'd0;
reg  s7pciephy_rx_datapath_pipe_ready_sink_d_valid = 1'd0;
reg  s7pciephy_rx_datapath_pipe_ready_sink_d_ready = 1'd0;
reg  s7pciephy_rx_datapath_pipe_ready_sink_d_first = 1'd0;
reg  s7pciephy_rx_datapath_pipe_ready_sink_d_last = 1'd0;
reg  [127:0] s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat = 128'd0;
reg  [15:0] s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be = 16'd0;
wire s7pciephy_rx_datapath_converter_sink_valid;
wire s7pciephy_rx_datapath_converter_sink_ready;
wire s7pciephy_rx_datapath_converter_sink_first;
wire s7pciephy_rx_datapath_converter_sink_last;
wire [127:0] s7pciephy_rx_datapath_converter_sink_payload_dat;
wire [15:0] s7pciephy_rx_datapath_converter_sink_payload_be;
wire s7pciephy_rx_datapath_converter_source_valid;
wire s7pciephy_rx_datapath_converter_source_ready;
wire s7pciephy_rx_datapath_converter_source_first;
wire s7pciephy_rx_datapath_converter_source_last;
wire [127:0] s7pciephy_rx_datapath_converter_source_payload_dat;
wire [15:0] s7pciephy_rx_datapath_converter_source_payload_be;
wire s7pciephy_rx_datapath_converter_converter_sink_valid;
wire s7pciephy_rx_datapath_converter_converter_sink_ready;
wire s7pciephy_rx_datapath_converter_converter_sink_first;
wire s7pciephy_rx_datapath_converter_converter_sink_last;
wire [143:0] s7pciephy_rx_datapath_converter_converter_sink_payload_data;
wire s7pciephy_rx_datapath_converter_converter_source_valid;
wire s7pciephy_rx_datapath_converter_converter_source_ready;
wire s7pciephy_rx_datapath_converter_converter_source_first;
wire s7pciephy_rx_datapath_converter_converter_source_last;
wire [143:0] s7pciephy_rx_datapath_converter_converter_source_payload_data;
wire s7pciephy_rx_datapath_converter_converter_source_payload_valid_token_count;
wire s7pciephy_rx_datapath_converter_source_source_valid;
wire s7pciephy_rx_datapath_converter_source_source_ready;
wire s7pciephy_rx_datapath_converter_source_source_first;
wire s7pciephy_rx_datapath_converter_source_source_last;
wire [143:0] s7pciephy_rx_datapath_converter_source_source_payload_data;
wire s7pciephy_rx_datapath_cdc_sink_valid;
wire s7pciephy_rx_datapath_cdc_sink_ready;
wire s7pciephy_rx_datapath_cdc_sink_first;
wire s7pciephy_rx_datapath_cdc_sink_last;
wire [127:0] s7pciephy_rx_datapath_cdc_sink_payload_dat;
wire [15:0] s7pciephy_rx_datapath_cdc_sink_payload_be;
wire s7pciephy_rx_datapath_cdc_source_valid;
wire s7pciephy_rx_datapath_cdc_source_ready;
wire s7pciephy_rx_datapath_cdc_source_first;
wire s7pciephy_rx_datapath_cdc_source_last;
wire [127:0] s7pciephy_rx_datapath_cdc_source_payload_dat;
wire [15:0] s7pciephy_rx_datapath_cdc_source_payload_be;
wire s7pciephy_rx_datapath_cdc_asyncfifo_we;
wire s7pciephy_rx_datapath_cdc_asyncfifo_writable;
wire s7pciephy_rx_datapath_cdc_asyncfifo_re;
wire s7pciephy_rx_datapath_cdc_asyncfifo_readable;
wire [145:0] s7pciephy_rx_datapath_cdc_asyncfifo_din;
wire [145:0] s7pciephy_rx_datapath_cdc_asyncfifo_dout;
wire s7pciephy_rx_datapath_cdc_graycounter0_ce;
(* dont_touch = "true" *) reg  [2:0] s7pciephy_rx_datapath_cdc_graycounter0_q = 3'd0;
wire [2:0] s7pciephy_rx_datapath_cdc_graycounter0_q_next;
reg  [2:0] s7pciephy_rx_datapath_cdc_graycounter0_q_binary = 3'd0;
reg  [2:0] s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary = 3'd0;
wire s7pciephy_rx_datapath_cdc_graycounter1_ce;
(* dont_touch = "true" *) reg  [2:0] s7pciephy_rx_datapath_cdc_graycounter1_q = 3'd0;
wire [2:0] s7pciephy_rx_datapath_cdc_graycounter1_q_next;
reg  [2:0] s7pciephy_rx_datapath_cdc_graycounter1_q_binary = 3'd0;
reg  [2:0] s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] s7pciephy_rx_datapath_cdc_produce_rdomain;
wire [2:0] s7pciephy_rx_datapath_cdc_consume_wdomain;
wire [1:0] s7pciephy_rx_datapath_cdc_wrport_adr;
wire [145:0] s7pciephy_rx_datapath_cdc_wrport_dat_r;
wire s7pciephy_rx_datapath_cdc_wrport_we;
wire [145:0] s7pciephy_rx_datapath_cdc_wrport_dat_w;
wire [1:0] s7pciephy_rx_datapath_cdc_rdport_adr;
wire [145:0] s7pciephy_rx_datapath_cdc_rdport_dat_r;
wire [127:0] s7pciephy_rx_datapath_cdc_fifo_in_payload_dat;
wire [15:0] s7pciephy_rx_datapath_cdc_fifo_in_payload_be;
wire s7pciephy_rx_datapath_cdc_fifo_in_first;
wire s7pciephy_rx_datapath_cdc_fifo_in_last;
wire [127:0] s7pciephy_rx_datapath_cdc_fifo_out_payload_dat;
wire [15:0] s7pciephy_rx_datapath_cdc_fifo_out_payload_be;
wire s7pciephy_rx_datapath_cdc_fifo_out_first;
wire s7pciephy_rx_datapath_cdc_fifo_out_last;
wire s7pciephy_rx_datapath_pipe_valid_sink_valid;
wire s7pciephy_rx_datapath_pipe_valid_sink_ready;
wire s7pciephy_rx_datapath_pipe_valid_sink_first;
wire s7pciephy_rx_datapath_pipe_valid_sink_last;
wire [127:0] s7pciephy_rx_datapath_pipe_valid_sink_payload_dat;
wire [15:0] s7pciephy_rx_datapath_pipe_valid_sink_payload_be;
reg  s7pciephy_rx_datapath_pipe_valid_source_valid = 1'd0;
wire s7pciephy_rx_datapath_pipe_valid_source_ready;
reg  s7pciephy_rx_datapath_pipe_valid_source_first = 1'd0;
reg  s7pciephy_rx_datapath_pipe_valid_source_last = 1'd0;
reg  [127:0] s7pciephy_rx_datapath_pipe_valid_source_payload_dat = 128'd0;
reg  [15:0] s7pciephy_rx_datapath_pipe_valid_source_payload_be = 16'd0;
wire s7pciephy_msi_cdc_sink_valid;
wire s7pciephy_msi_cdc_sink_ready;
wire s7pciephy_msi_cdc_sink_first;
wire s7pciephy_msi_cdc_sink_last;
wire [7:0] s7pciephy_msi_cdc_sink_payload_dat;
wire s7pciephy_msi_cdc_source_valid;
wire s7pciephy_msi_cdc_source_ready;
wire s7pciephy_msi_cdc_source_first;
wire s7pciephy_msi_cdc_source_last;
wire [7:0] s7pciephy_msi_cdc_source_payload_dat;
wire s7pciephy_msi_cdc_asyncfifo_we;
wire s7pciephy_msi_cdc_asyncfifo_writable;
wire s7pciephy_msi_cdc_asyncfifo_re;
wire s7pciephy_msi_cdc_asyncfifo_readable;
wire [9:0] s7pciephy_msi_cdc_asyncfifo_din;
wire [9:0] s7pciephy_msi_cdc_asyncfifo_dout;
wire s7pciephy_msi_cdc_graycounter0_ce;
(* dont_touch = "true" *) reg  [2:0] s7pciephy_msi_cdc_graycounter0_q = 3'd0;
wire [2:0] s7pciephy_msi_cdc_graycounter0_q_next;
reg  [2:0] s7pciephy_msi_cdc_graycounter0_q_binary = 3'd0;
reg  [2:0] s7pciephy_msi_cdc_graycounter0_q_next_binary = 3'd0;
wire s7pciephy_msi_cdc_graycounter1_ce;
(* dont_touch = "true" *) reg  [2:0] s7pciephy_msi_cdc_graycounter1_q = 3'd0;
wire [2:0] s7pciephy_msi_cdc_graycounter1_q_next;
reg  [2:0] s7pciephy_msi_cdc_graycounter1_q_binary = 3'd0;
reg  [2:0] s7pciephy_msi_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] s7pciephy_msi_cdc_produce_rdomain;
wire [2:0] s7pciephy_msi_cdc_consume_wdomain;
wire [1:0] s7pciephy_msi_cdc_wrport_adr;
wire [9:0] s7pciephy_msi_cdc_wrport_dat_r;
wire s7pciephy_msi_cdc_wrport_we;
wire [9:0] s7pciephy_msi_cdc_wrport_dat_w;
wire [1:0] s7pciephy_msi_cdc_rdport_adr;
wire [9:0] s7pciephy_msi_cdc_rdport_dat_r;
wire [7:0] s7pciephy_msi_cdc_fifo_in_payload_dat;
wire s7pciephy_msi_cdc_fifo_in_first;
wire s7pciephy_msi_cdc_fifo_in_last;
wire [7:0] s7pciephy_msi_cdc_fifo_out_payload_dat;
wire s7pciephy_msi_cdc_fifo_out_first;
wire s7pciephy_msi_cdc_fifo_out_last;
wire [7:0] s7pciephy_bus_number;
wire [4:0] s7pciephy_device_number;
wire [2:0] s7pciephy_function_number;
wire [15:0] s7pciephy_command;
wire [15:0] s7pciephy_dcommand;
wire s7pciephy_m_axis_rx_tlast;
wire [31:0] s7pciephy_m_axis_rx_tuser;
wire s7pciephy0;
wire s7pciephy1;
wire s7pciephy2;
wire s7pciephy3;
wire s7pciephy4;
wire s7pciephy5;
wire s7pciephy6;
wire s7pciephy7;
wire s7pciephy8;
wire s7pciephy9;
wire s7pciephy10;
wire s7pciephy11;
wire s7pciephy12;
wire s7pciephy13;
wire s7pciephy14;
wire s7pciephy15;
wire s7pciephy16;
wire s7pciephy17;
wire s7pciephy18;
wire s7pciephy19;
wire s7pciephy20;
wire s7pciephy21;
wire s7pciephy22;
wire s7pciephy23;
wire s7pciephy24;
wire s7pciephy25;
wire s7pciephy26;
wire s7pciephy27;
wire s7pciephy28;
wire s7pciephy29;
wire s7pciephy30;
wire s7pciephy31;
wire s7pciephy32;
wire s7pciephy33;
wire s7pciephy34;
wire s7pciephy35;
wire s7pciephy36;
wire s7pciephy37;
wire s7pciephy38;
wire s7pciephy39;
wire s7pciephy40;
wire s7pciephy41;
wire s7pciephy42;
wire s7pciephy43;
wire s7pciephy44;
wire s7pciephy45;
wire s7pciephy46;
wire s7pciephy47;
wire s7pciephy48;
wire s7pciephy49;
wire s7pciephy50;
wire s7pciephy51;
wire s7pciephy52;
wire s7pciephy53;
wire s7pciephy54;
wire s7pciephy55;
wire s7pciephy56;
wire s7pciephy57;
wire s7pciephy58;
wire s7pciephy59;
wire s7pciephy60;
wire s7pciephy61;
wire s7pciephy62;
wire s7pciephy63;
wire s7pciephy64;
wire s7pciephy65;
wire s7pciephy66;
wire s7pciephy67;
wire s7pciephy68;
wire s7pciephy69;
wire s7pciephy70;
wire s7pciephy71;
wire s7pciephy72;
wire s7pciephy73;
wire s7pciephy74;
wire s7pciephy75;
wire s7pciephy76;
wire s7pciephy77;
wire s7pciephy78;
wire s7pciephy79;
wire basesoc_depacketizer_sink_sink_valid;
wire basesoc_depacketizer_sink_sink_ready;
wire basesoc_depacketizer_sink_sink_first;
wire basesoc_depacketizer_sink_sink_last;
wire [127:0] basesoc_depacketizer_sink_sink_payload_dat;
wire [15:0] basesoc_depacketizer_sink_sink_payload_be;
wire basesoc_depacketizer_req_source_valid;
wire basesoc_depacketizer_req_source_ready;
wire basesoc_depacketizer_req_source_first;
wire basesoc_depacketizer_req_source_last;
wire basesoc_depacketizer_req_source_payload_we;
wire [31:0] basesoc_depacketizer_req_source_payload_adr;
wire [9:0] basesoc_depacketizer_req_source_payload_len;
wire [15:0] basesoc_depacketizer_req_source_payload_req_id;
wire [7:0] basesoc_depacketizer_req_source_payload_tag;
wire [127:0] basesoc_depacketizer_req_source_payload_dat;
reg  [7:0] basesoc_depacketizer_req_source_payload_channel = 8'd0;
reg  [7:0] basesoc_depacketizer_req_source_payload_user_id = 8'd0;
wire basesoc_depacketizer_cmp_source_valid;
wire basesoc_depacketizer_cmp_source_ready;
wire basesoc_depacketizer_cmp_source_first;
wire basesoc_depacketizer_cmp_source_last;
wire [31:0] basesoc_depacketizer_cmp_source_payload_adr;
wire [9:0] basesoc_depacketizer_cmp_source_payload_len;
wire basesoc_depacketizer_cmp_source_payload_end;
wire [15:0] basesoc_depacketizer_cmp_source_payload_req_id;
wire [15:0] basesoc_depacketizer_cmp_source_payload_cmp_id;
wire basesoc_depacketizer_cmp_source_payload_err;
wire [7:0] basesoc_depacketizer_cmp_source_payload_tag;
wire [127:0] basesoc_depacketizer_cmp_source_payload_dat;
reg  [7:0] basesoc_depacketizer_cmp_source_payload_channel = 8'd0;
reg  [7:0] basesoc_depacketizer_cmp_source_payload_user_id = 8'd0;
wire basesoc_depacketizer_header_extracter_sink_valid;
reg  basesoc_depacketizer_header_extracter_sink_ready = 1'd0;
wire basesoc_depacketizer_header_extracter_sink_first;
wire basesoc_depacketizer_header_extracter_sink_last;
wire [127:0] basesoc_depacketizer_header_extracter_sink_payload_dat;
wire [15:0] basesoc_depacketizer_header_extracter_sink_payload_be;
reg  basesoc_depacketizer_header_extracter_source_valid = 1'd0;
wire basesoc_depacketizer_header_extracter_source_ready;
reg  basesoc_depacketizer_header_extracter_source_first = 1'd0;
reg  basesoc_depacketizer_header_extracter_source_last = 1'd0;
reg  [127:0] basesoc_depacketizer_header_extracter_source_payload_header = 128'd0;
reg  [127:0] basesoc_depacketizer_header_extracter_source_payload_dat = 128'd0;
reg  [15:0] basesoc_depacketizer_header_extracter_source_payload_be = 16'd0;
reg  basesoc_depacketizer_header_extracter_first = 1'd0;
reg  basesoc_depacketizer_header_extracter_last = 1'd0;
reg  [127:0] basesoc_depacketizer_header_extracter_dat = 128'd0;
reg  [15:0] basesoc_depacketizer_header_extracter_be = 16'd0;
wire basesoc_depacketizer_dispatch_source_valid;
reg  basesoc_depacketizer_dispatch_source_ready = 1'd0;
wire basesoc_depacketizer_dispatch_source_first;
wire basesoc_depacketizer_dispatch_source_last;
wire [1:0] basesoc_depacketizer_dispatch_source_payload_fmt;
wire [4:0] basesoc_depacketizer_dispatch_source_payload_type;
wire [127:0] basesoc_depacketizer_dispatch_source_payload_dat;
wire [15:0] basesoc_depacketizer_dispatch_source_payload_be;
reg  basesoc_depacketizer_endpoint0_valid = 1'd0;
wire basesoc_depacketizer_endpoint0_ready;
reg  basesoc_depacketizer_endpoint0_first = 1'd0;
reg  basesoc_depacketizer_endpoint0_last = 1'd0;
reg  [1:0] basesoc_depacketizer_endpoint0_payload_fmt = 2'd0;
reg  [4:0] basesoc_depacketizer_endpoint0_payload_type = 5'd0;
reg  [127:0] basesoc_depacketizer_endpoint0_payload_dat = 128'd0;
reg  [15:0] basesoc_depacketizer_endpoint0_payload_be = 16'd0;
reg  basesoc_depacketizer_endpoint1_valid = 1'd0;
wire basesoc_depacketizer_endpoint1_ready;
reg  basesoc_depacketizer_endpoint1_first = 1'd0;
reg  basesoc_depacketizer_endpoint1_last = 1'd0;
reg  [1:0] basesoc_depacketizer_endpoint1_payload_fmt = 2'd0;
reg  [4:0] basesoc_depacketizer_endpoint1_payload_type = 5'd0;
reg  [127:0] basesoc_depacketizer_endpoint1_payload_dat = 128'd0;
reg  [15:0] basesoc_depacketizer_endpoint1_payload_be = 16'd0;
reg  basesoc_depacketizer_dispatcher_sel0 = 1'd0;
reg  basesoc_depacketizer_dispatcher_first = 1'd1;
reg  basesoc_depacketizer_dispatcher_last = 1'd0;
wire basesoc_depacketizer_dispatcher_ongoing0;
reg  basesoc_depacketizer_dispatcher_ongoing1 = 1'd0;
reg  basesoc_depacketizer_dispatcher_sel1 = 1'd0;
reg  basesoc_depacketizer_dispatcher_sel_ongoing = 1'd0;
wire basesoc_depacketizer_tlp_req_valid;
wire basesoc_depacketizer_tlp_req_ready;
wire basesoc_depacketizer_tlp_req_first;
wire basesoc_depacketizer_tlp_req_last;
wire [31:0] basesoc_depacketizer_tlp_req_payload_address;
wire [1:0] basesoc_depacketizer_tlp_req_payload_attr;
wire basesoc_depacketizer_tlp_req_payload_ep;
wire [3:0] basesoc_depacketizer_tlp_req_payload_first_be;
reg  [1:0] basesoc_depacketizer_tlp_req_payload_fmt = 2'd0;
wire [3:0] basesoc_depacketizer_tlp_req_payload_last_be;
wire [9:0] basesoc_depacketizer_tlp_req_payload_length;
wire [15:0] basesoc_depacketizer_tlp_req_payload_requester_id;
wire [7:0] basesoc_depacketizer_tlp_req_payload_tag;
wire [2:0] basesoc_depacketizer_tlp_req_payload_tc;
wire basesoc_depacketizer_tlp_req_payload_td;
reg  [4:0] basesoc_depacketizer_tlp_req_payload_type = 5'd0;
wire [127:0] basesoc_depacketizer_tlp_req_payload_dat;
wire [15:0] basesoc_depacketizer_tlp_req_payload_be;
wire basesoc_depacketizer_tlp_cmp_valid;
wire basesoc_depacketizer_tlp_cmp_ready;
wire basesoc_depacketizer_tlp_cmp_first;
wire basesoc_depacketizer_tlp_cmp_last;
wire [1:0] basesoc_depacketizer_tlp_cmp_payload_attr;
wire basesoc_depacketizer_tlp_cmp_payload_bcm;
wire [11:0] basesoc_depacketizer_tlp_cmp_payload_byte_count;
wire [15:0] basesoc_depacketizer_tlp_cmp_payload_completer_id;
wire basesoc_depacketizer_tlp_cmp_payload_ep;
reg  [1:0] basesoc_depacketizer_tlp_cmp_payload_fmt = 2'd0;
wire [9:0] basesoc_depacketizer_tlp_cmp_payload_length;
wire [6:0] basesoc_depacketizer_tlp_cmp_payload_lower_address;
wire [15:0] basesoc_depacketizer_tlp_cmp_payload_requester_id;
wire [2:0] basesoc_depacketizer_tlp_cmp_payload_status;
wire [7:0] basesoc_depacketizer_tlp_cmp_payload_tag;
wire [2:0] basesoc_depacketizer_tlp_cmp_payload_tc;
wire basesoc_depacketizer_tlp_cmp_payload_td;
reg  [4:0] basesoc_depacketizer_tlp_cmp_payload_type = 5'd0;
wire [127:0] basesoc_depacketizer_tlp_cmp_payload_dat;
wire [15:0] basesoc_depacketizer_tlp_cmp_payload_be;
wire basesoc_packetizer_req_sink_valid;
wire basesoc_packetizer_req_sink_ready;
wire basesoc_packetizer_req_sink_first;
wire basesoc_packetizer_req_sink_last;
wire basesoc_packetizer_req_sink_payload_we;
wire [31:0] basesoc_packetizer_req_sink_payload_adr;
wire [9:0] basesoc_packetizer_req_sink_payload_len;
wire [15:0] basesoc_packetizer_req_sink_payload_req_id;
wire [7:0] basesoc_packetizer_req_sink_payload_tag;
wire [127:0] basesoc_packetizer_req_sink_payload_dat;
wire [7:0] basesoc_packetizer_req_sink_payload_channel;
wire [7:0] basesoc_packetizer_req_sink_payload_user_id;
wire basesoc_packetizer_cmp_sink_valid;
wire basesoc_packetizer_cmp_sink_ready;
wire basesoc_packetizer_cmp_sink_first;
wire basesoc_packetizer_cmp_sink_last;
wire [31:0] basesoc_packetizer_cmp_sink_payload_adr;
wire [9:0] basesoc_packetizer_cmp_sink_payload_len;
wire basesoc_packetizer_cmp_sink_payload_end;
wire [15:0] basesoc_packetizer_cmp_sink_payload_req_id;
wire [15:0] basesoc_packetizer_cmp_sink_payload_cmp_id;
wire basesoc_packetizer_cmp_sink_payload_err;
wire [7:0] basesoc_packetizer_cmp_sink_payload_tag;
wire [127:0] basesoc_packetizer_cmp_sink_payload_dat;
wire [7:0] basesoc_packetizer_cmp_sink_payload_channel;
wire [7:0] basesoc_packetizer_cmp_sink_payload_user_id;
wire basesoc_packetizer_source_source_valid;
wire basesoc_packetizer_source_source_ready;
wire basesoc_packetizer_source_source_first;
wire basesoc_packetizer_source_source_last;
wire [127:0] basesoc_packetizer_source_source_payload_dat;
wire [15:0] basesoc_packetizer_source_source_payload_be;
wire basesoc_packetizer_tlp_req_valid;
wire basesoc_packetizer_tlp_req_ready;
wire basesoc_packetizer_tlp_req_first;
wire basesoc_packetizer_tlp_req_last;
wire [31:0] basesoc_packetizer_tlp_req_payload_address;
wire [1:0] basesoc_packetizer_tlp_req_payload_attr;
wire basesoc_packetizer_tlp_req_payload_ep;
wire [3:0] basesoc_packetizer_tlp_req_payload_first_be;
reg  [1:0] basesoc_packetizer_tlp_req_payload_fmt = 2'd0;
reg  [3:0] basesoc_packetizer_tlp_req_payload_last_be = 4'd0;
wire [9:0] basesoc_packetizer_tlp_req_payload_length;
wire [15:0] basesoc_packetizer_tlp_req_payload_requester_id;
wire [7:0] basesoc_packetizer_tlp_req_payload_tag;
wire [2:0] basesoc_packetizer_tlp_req_payload_tc;
wire basesoc_packetizer_tlp_req_payload_td;
reg  [4:0] basesoc_packetizer_tlp_req_payload_type = 5'd0;
wire [127:0] basesoc_packetizer_tlp_req_payload_dat;
reg  [15:0] basesoc_packetizer_tlp_req_payload_be = 16'd0;
wire basesoc_packetizer_tlp_raw_req_valid;
reg  basesoc_packetizer_tlp_raw_req_ready = 1'd0;
wire basesoc_packetizer_tlp_raw_req_first;
wire basesoc_packetizer_tlp_raw_req_last;
reg  [127:0] basesoc_packetizer_tlp_raw_req_payload_header = 128'd0;
wire [127:0] basesoc_packetizer_tlp_raw_req_payload_dat;
wire [15:0] basesoc_packetizer_tlp_raw_req_payload_be;
wire basesoc_packetizer_tlp_cmp_valid;
wire basesoc_packetizer_tlp_cmp_ready;
wire basesoc_packetizer_tlp_cmp_first;
wire basesoc_packetizer_tlp_cmp_last;
wire [1:0] basesoc_packetizer_tlp_cmp_payload_attr;
wire basesoc_packetizer_tlp_cmp_payload_bcm;
wire [11:0] basesoc_packetizer_tlp_cmp_payload_byte_count;
wire [15:0] basesoc_packetizer_tlp_cmp_payload_completer_id;
wire basesoc_packetizer_tlp_cmp_payload_ep;
reg  [1:0] basesoc_packetizer_tlp_cmp_payload_fmt = 2'd0;
wire [9:0] basesoc_packetizer_tlp_cmp_payload_length;
wire [6:0] basesoc_packetizer_tlp_cmp_payload_lower_address;
wire [15:0] basesoc_packetizer_tlp_cmp_payload_requester_id;
reg  [2:0] basesoc_packetizer_tlp_cmp_payload_status = 3'd0;
wire [7:0] basesoc_packetizer_tlp_cmp_payload_tag;
wire [2:0] basesoc_packetizer_tlp_cmp_payload_tc;
wire basesoc_packetizer_tlp_cmp_payload_td;
reg  [4:0] basesoc_packetizer_tlp_cmp_payload_type = 5'd0;
wire [127:0] basesoc_packetizer_tlp_cmp_payload_dat;
reg  [15:0] basesoc_packetizer_tlp_cmp_payload_be = 16'd0;
wire basesoc_packetizer_tlp_raw_cmp_valid;
reg  basesoc_packetizer_tlp_raw_cmp_ready = 1'd0;
wire basesoc_packetizer_tlp_raw_cmp_first;
wire basesoc_packetizer_tlp_raw_cmp_last;
reg  [127:0] basesoc_packetizer_tlp_raw_cmp_payload_header = 128'd0;
wire [127:0] basesoc_packetizer_tlp_raw_cmp_payload_dat;
wire [15:0] basesoc_packetizer_tlp_raw_cmp_payload_be;
reg  basesoc_packetizer_tlp_raw_valid = 1'd0;
wire basesoc_packetizer_tlp_raw_ready;
reg  basesoc_packetizer_tlp_raw_first = 1'd0;
reg  basesoc_packetizer_tlp_raw_last = 1'd0;
reg  [127:0] basesoc_packetizer_tlp_raw_payload_header = 128'd0;
reg  [127:0] basesoc_packetizer_tlp_raw_payload_dat = 128'd0;
reg  [15:0] basesoc_packetizer_tlp_raw_payload_be = 16'd0;
reg  [1:0] basesoc_packetizer_request = 2'd0;
reg  basesoc_packetizer_grant = 1'd0;
reg  basesoc_packetizer_status0_first = 1'd1;
reg  basesoc_packetizer_status0_last = 1'd0;
wire basesoc_packetizer_status0_ongoing0;
reg  basesoc_packetizer_status0_ongoing1 = 1'd0;
reg  basesoc_packetizer_status1_first = 1'd1;
reg  basesoc_packetizer_status1_last = 1'd0;
wire basesoc_packetizer_status1_ongoing0;
reg  basesoc_packetizer_status1_ongoing1 = 1'd0;
wire basesoc_packetizer_header_inserter_sink_valid;
reg  basesoc_packetizer_header_inserter_sink_ready = 1'd0;
wire basesoc_packetizer_header_inserter_sink_first;
wire basesoc_packetizer_header_inserter_sink_last;
wire [127:0] basesoc_packetizer_header_inserter_sink_payload_header;
wire [127:0] basesoc_packetizer_header_inserter_sink_payload_dat;
wire [15:0] basesoc_packetizer_header_inserter_sink_payload_be;
reg  basesoc_packetizer_header_inserter_source_valid = 1'd0;
wire basesoc_packetizer_header_inserter_source_ready;
reg  basesoc_packetizer_header_inserter_source_first = 1'd0;
reg  basesoc_packetizer_header_inserter_source_last = 1'd0;
reg  [127:0] basesoc_packetizer_header_inserter_source_payload_dat = 128'd0;
reg  [15:0] basesoc_packetizer_header_inserter_source_payload_be = 16'd0;
reg  [127:0] basesoc_packetizer_header_inserter_dat = 128'd0;
reg  basesoc_packetizer_header_inserter_last = 1'd0;
reg  basesoc_master_sink_valid = 1'd0;
wire basesoc_master_sink_ready;
reg  basesoc_master_sink_first = 1'd0;
reg  basesoc_master_sink_last = 1'd0;
reg  basesoc_master_sink_payload_we = 1'd0;
reg  [31:0] basesoc_master_sink_payload_adr = 32'd0;
reg  [9:0] basesoc_master_sink_payload_len = 10'd0;
reg  [15:0] basesoc_master_sink_payload_req_id = 16'd0;
reg  [7:0] basesoc_master_sink_payload_tag = 8'd0;
reg  [127:0] basesoc_master_sink_payload_dat = 128'd0;
reg  [7:0] basesoc_master_sink_payload_channel = 8'd0;
reg  [7:0] basesoc_master_sink_payload_user_id = 8'd0;
wire basesoc_master_source_valid;
wire basesoc_master_source_ready;
wire basesoc_master_source_first;
wire basesoc_master_source_last;
wire [31:0] basesoc_master_source_payload_adr;
wire [9:0] basesoc_master_source_payload_len;
wire basesoc_master_source_payload_end;
wire [15:0] basesoc_master_source_payload_req_id;
wire [15:0] basesoc_master_source_payload_cmp_id;
wire basesoc_master_source_payload_err;
wire [7:0] basesoc_master_source_payload_tag;
wire [127:0] basesoc_master_source_payload_dat;
wire [7:0] basesoc_master_source_payload_channel;
wire [7:0] basesoc_master_source_payload_user_id;
wire basesoc_slave_sink_valid;
wire basesoc_slave_sink_ready;
wire basesoc_slave_sink_first;
wire basesoc_slave_sink_last;
wire [31:0] basesoc_slave_sink_payload_adr;
wire [9:0] basesoc_slave_sink_payload_len;
wire basesoc_slave_sink_payload_end;
wire [15:0] basesoc_slave_sink_payload_req_id;
wire [15:0] basesoc_slave_sink_payload_cmp_id;
wire basesoc_slave_sink_payload_err;
wire [7:0] basesoc_slave_sink_payload_tag;
wire [127:0] basesoc_slave_sink_payload_dat;
wire [7:0] basesoc_slave_sink_payload_channel;
wire [7:0] basesoc_slave_sink_payload_user_id;
wire basesoc_slave_source_valid;
wire basesoc_slave_source_ready;
wire basesoc_slave_source_first;
wire basesoc_slave_source_last;
wire basesoc_slave_source_payload_we;
wire [31:0] basesoc_slave_source_payload_adr;
wire [9:0] basesoc_slave_source_payload_len;
wire [15:0] basesoc_slave_source_payload_req_id;
wire [7:0] basesoc_slave_source_payload_tag;
wire [127:0] basesoc_slave_source_payload_dat;
wire [7:0] basesoc_slave_source_payload_channel;
wire [7:0] basesoc_slave_source_payload_user_id;
reg  [29:0] basesoc_mmap_wishbone_adr = 30'd0;
reg  [31:0] basesoc_mmap_wishbone_dat_w = 32'd0;
wire [31:0] basesoc_mmap_wishbone_dat_r;
reg  [3:0] basesoc_mmap_wishbone_sel = 4'd0;
reg  basesoc_mmap_wishbone_cyc = 1'd0;
reg  basesoc_mmap_wishbone_stb = 1'd0;
wire basesoc_mmap_wishbone_ack;
reg  basesoc_mmap_wishbone_we = 1'd0;
reg  [2:0] basesoc_mmap_wishbone_cti = 3'd0;
reg  [1:0] basesoc_mmap_wishbone_bte = 2'd0;
wire basesoc_mmap_wishbone_err;
reg  basesoc_mmap_sink_valid = 1'd0;
wire basesoc_mmap_sink_ready;
reg  basesoc_mmap_sink_first = 1'd0;
reg  basesoc_mmap_sink_last = 1'd0;
reg  [31:0] basesoc_mmap_sink_payload_adr = 32'd0;
reg  [9:0] basesoc_mmap_sink_payload_len = 10'd0;
reg  basesoc_mmap_sink_payload_end = 1'd0;
reg  [15:0] basesoc_mmap_sink_payload_req_id = 16'd0;
reg  [15:0] basesoc_mmap_sink_payload_cmp_id = 16'd0;
reg  basesoc_mmap_sink_payload_err = 1'd0;
reg  [7:0] basesoc_mmap_sink_payload_tag = 8'd0;
reg  [127:0] basesoc_mmap_sink_payload_dat = 128'd0;
reg  [7:0] basesoc_mmap_sink_payload_channel = 8'd0;
reg  [7:0] basesoc_mmap_sink_payload_user_id = 8'd0;
wire basesoc_mmap_source_valid;
reg  basesoc_mmap_source_ready = 1'd0;
wire basesoc_mmap_source_first;
wire basesoc_mmap_source_last;
wire basesoc_mmap_source_payload_we;
wire [31:0] basesoc_mmap_source_payload_adr;
wire [9:0] basesoc_mmap_source_payload_len;
wire [15:0] basesoc_mmap_source_payload_req_id;
wire [7:0] basesoc_mmap_source_payload_tag;
wire [127:0] basesoc_mmap_source_payload_dat;
wire [7:0] basesoc_mmap_source_payload_channel;
wire [7:0] basesoc_mmap_source_payload_user_id;
reg  basesoc_mmap_update_dat = 1'd0;
reg  [31:0] basesoc_msi_irqs = 32'd0;
wire basesoc_msi_source_valid;
wire basesoc_msi_source_ready;
reg  basesoc_msi_source_first = 1'd0;
reg  basesoc_msi_source_last = 1'd0;
reg  [7:0] basesoc_msi_source_payload_dat = 8'd0;
reg  [31:0] basesoc_msi_enable_storage = 32'd0;
reg  basesoc_msi_enable_re = 1'd0;
reg  [31:0] basesoc_msi_clear_storage = 32'd0;
reg  basesoc_msi_clear_re = 1'd0;
wire [31:0] basesoc_msi_vector_status;
wire basesoc_msi_vector_we;
reg  basesoc_msi_vector_re = 1'd0;
wire [31:0] basesoc_msi_enable;
reg  [31:0] basesoc_msi_clear = 32'd0;
reg  [31:0] basesoc_msi_vector = 32'd0;
reg  [31:0] basesoc_msi_msi = 32'd0;
reg  basesoc_litepciemasterinternalport0_sink_valid = 1'd0;
wire basesoc_litepciemasterinternalport0_sink_ready;
wire basesoc_litepciemasterinternalport0_sink_first;
wire basesoc_litepciemasterinternalport0_sink_last;
wire basesoc_litepciemasterinternalport0_sink_payload_we;
wire [31:0] basesoc_litepciemasterinternalport0_sink_payload_adr;
wire [9:0] basesoc_litepciemasterinternalport0_sink_payload_len;
wire [15:0] basesoc_litepciemasterinternalport0_sink_payload_req_id;
wire [7:0] basesoc_litepciemasterinternalport0_sink_payload_tag;
wire [127:0] basesoc_litepciemasterinternalport0_sink_payload_dat;
wire [7:0] basesoc_litepciemasterinternalport0_sink_payload_channel;
wire [7:0] basesoc_litepciemasterinternalport0_sink_payload_user_id;
wire basesoc_litepciemasterinternalport0_source_valid;
reg  basesoc_litepciemasterinternalport0_source_ready = 1'd0;
wire basesoc_litepciemasterinternalport0_source_first;
wire basesoc_litepciemasterinternalport0_source_last;
wire [31:0] basesoc_litepciemasterinternalport0_source_payload_adr;
wire [9:0] basesoc_litepciemasterinternalport0_source_payload_len;
wire basesoc_litepciemasterinternalport0_source_payload_end;
wire [15:0] basesoc_litepciemasterinternalport0_source_payload_req_id;
wire [15:0] basesoc_litepciemasterinternalport0_source_payload_cmp_id;
wire basesoc_litepciemasterinternalport0_source_payload_err;
wire [7:0] basesoc_litepciemasterinternalport0_source_payload_tag;
wire [127:0] basesoc_litepciemasterinternalport0_source_payload_dat;
wire [7:0] basesoc_litepciemasterinternalport0_source_payload_channel;
wire [7:0] basesoc_litepciemasterinternalport0_source_payload_user_id;
wire basesoc_writer_sink_sink_valid;
reg  basesoc_writer_sink_sink_ready = 1'd0;
wire basesoc_writer_sink_sink_first;
wire basesoc_writer_sink_sink_last;
wire [127:0] basesoc_writer_sink_sink_payload_data;
reg  basesoc_writer_enable_storage = 1'd0;
reg  basesoc_writer_enable_re = 1'd0;
reg  basesoc_writer_irq = 1'd0;
wire basesoc_writer_source_source_valid;
wire basesoc_writer_source_source_ready;
wire basesoc_writer_source_source_first;
wire basesoc_writer_source_source_last;
wire [31:0] basesoc_writer_source_source_payload_address;
wire [23:0] basesoc_writer_source_source_payload_length;
wire basesoc_writer_source_source_payload_irq_disable;
wire basesoc_writer_source_source_payload_last_disable;
wire [31:0] basesoc_writer_address;
wire [23:0] basesoc_writer_length;
wire basesoc_writer_irq_disable;
wire basesoc_writer_last_disable;
reg  [57:0] basesoc_writer_value_storage = 58'd0;
reg  basesoc_writer_value_re = 1'd0;
reg  basesoc_writer_we_storage = 1'd0;
reg  basesoc_writer_we_re = 1'd0;
reg  basesoc_writer_loop_prog_n_storage = 1'd0;
reg  basesoc_writer_loop_prog_n_re = 1'd0;
reg  [15:0] basesoc_writer_index = 16'd0;
reg  [15:0] basesoc_writer_count = 16'd0;
reg  [31:0] basesoc_writer_loop_status_status = 32'd0;
wire basesoc_writer_loop_status_we;
reg  basesoc_writer_loop_status_re = 1'd0;
wire [8:0] basesoc_writer_level_status;
wire basesoc_writer_level_we;
reg  basesoc_writer_level_re = 1'd0;
reg  basesoc_writer_reset_storage = 1'd0;
reg  basesoc_writer_reset_re = 1'd0;
reg  basesoc_writer_table_sink_valid = 1'd0;
wire basesoc_writer_table_sink_ready;
reg  basesoc_writer_table_sink_first = 1'd0;
reg  basesoc_writer_table_sink_last = 1'd0;
reg  [31:0] basesoc_writer_table_sink_payload_address = 32'd0;
reg  [23:0] basesoc_writer_table_sink_payload_length = 24'd0;
reg  basesoc_writer_table_sink_payload_irq_disable = 1'd0;
reg  basesoc_writer_table_sink_payload_last_disable = 1'd0;
wire basesoc_writer_table_source_valid;
wire basesoc_writer_table_source_ready;
wire basesoc_writer_table_source_first;
wire basesoc_writer_table_source_last;
wire [31:0] basesoc_writer_table_source_payload_address;
wire [23:0] basesoc_writer_table_source_payload_length;
wire basesoc_writer_table_source_payload_irq_disable;
wire basesoc_writer_table_source_payload_last_disable;
wire basesoc_writer_table_syncfifo_we;
wire basesoc_writer_table_syncfifo_writable;
wire basesoc_writer_table_syncfifo_re;
wire basesoc_writer_table_syncfifo_readable;
wire [59:0] basesoc_writer_table_syncfifo_din;
wire [59:0] basesoc_writer_table_syncfifo_dout;
reg  [8:0] basesoc_writer_table_level = 9'd0;
reg  basesoc_writer_table_replace = 1'd0;
reg  [7:0] basesoc_writer_table_produce = 8'd0;
reg  [7:0] basesoc_writer_table_consume = 8'd0;
reg  [7:0] basesoc_writer_table_wrport_adr = 8'd0;
wire [59:0] basesoc_writer_table_wrport_dat_r;
wire basesoc_writer_table_wrport_we;
wire [59:0] basesoc_writer_table_wrport_dat_w;
wire basesoc_writer_table_do_read;
wire [7:0] basesoc_writer_table_rdport_adr;
wire [59:0] basesoc_writer_table_rdport_dat_r;
wire [31:0] basesoc_writer_table_fifo_in_payload_address;
wire [23:0] basesoc_writer_table_fifo_in_payload_length;
wire basesoc_writer_table_fifo_in_payload_irq_disable;
wire basesoc_writer_table_fifo_in_payload_last_disable;
wire basesoc_writer_table_fifo_in_first;
wire basesoc_writer_table_fifo_in_last;
wire [31:0] basesoc_writer_table_fifo_out_payload_address;
wire [23:0] basesoc_writer_table_fifo_out_payload_length;
wire basesoc_writer_table_fifo_out_payload_irq_disable;
wire basesoc_writer_table_fifo_out_payload_last_disable;
wire basesoc_writer_table_fifo_out_first;
wire basesoc_writer_table_fifo_out_last;
wire basesoc_writer_table_reset;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_valid;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_ready = 1'd0;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_first;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_last;
wire [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_address;
wire [23:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_length;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_irq_disable;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_last_disable;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_source_valid = 1'd0;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_source_ready;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_source_first = 1'd0;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_source_last = 1'd0;
wire [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_address;
reg  [23:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_length = 24'd0;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_irq_disable;
wire basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_last_disable;
wire [7:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_user_id;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_end = 1'd0;
reg  [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length = 32'd0;
reg  [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset = 32'd0;
reg  [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id = 32'd0;
reg  basesoc_writer_splitter_reset = 1'd0;
wire basesoc_writer_splitter_bufferizeendpoints_sink_valid;
wire basesoc_writer_splitter_bufferizeendpoints_sink_ready;
wire basesoc_writer_splitter_bufferizeendpoints_sink_first;
wire basesoc_writer_splitter_bufferizeendpoints_sink_last;
wire [31:0] basesoc_writer_splitter_bufferizeendpoints_sink_payload_address;
wire [23:0] basesoc_writer_splitter_bufferizeendpoints_sink_payload_length;
wire basesoc_writer_splitter_bufferizeendpoints_sink_payload_irq_disable;
wire basesoc_writer_splitter_bufferizeendpoints_sink_payload_last_disable;
wire [7:0] basesoc_writer_splitter_bufferizeendpoints_sink_payload_user_id;
reg  basesoc_writer_splitter_bufferizeendpoints_source_valid = 1'd0;
reg  basesoc_writer_splitter_bufferizeendpoints_source_ready = 1'd0;
reg  basesoc_writer_splitter_bufferizeendpoints_source_first = 1'd0;
reg  basesoc_writer_splitter_bufferizeendpoints_source_last = 1'd0;
reg  [31:0] basesoc_writer_splitter_bufferizeendpoints_source_payload_address = 32'd0;
reg  [23:0] basesoc_writer_splitter_bufferizeendpoints_source_payload_length = 24'd0;
reg  basesoc_writer_splitter_bufferizeendpoints_source_payload_irq_disable = 1'd0;
reg  basesoc_writer_splitter_bufferizeendpoints_source_payload_last_disable = 1'd0;
reg  [7:0] basesoc_writer_splitter_bufferizeendpoints_source_payload_user_id = 8'd0;
reg  basesoc_writer_data_fifo_sink_valid = 1'd0;
wire basesoc_writer_data_fifo_sink_ready;
reg  basesoc_writer_data_fifo_sink_first = 1'd0;
reg  basesoc_writer_data_fifo_sink_last = 1'd0;
reg  [127:0] basesoc_writer_data_fifo_sink_payload_data = 128'd0;
wire basesoc_writer_data_fifo_source_valid;
reg  basesoc_writer_data_fifo_source_ready = 1'd0;
wire basesoc_writer_data_fifo_source_first;
wire basesoc_writer_data_fifo_source_last;
wire [127:0] basesoc_writer_data_fifo_source_payload_data;
wire basesoc_writer_data_fifo_re;
reg  basesoc_writer_data_fifo_readable = 1'd0;
wire basesoc_writer_data_fifo_syncfifo_we;
wire basesoc_writer_data_fifo_syncfifo_writable;
wire basesoc_writer_data_fifo_syncfifo_re;
wire basesoc_writer_data_fifo_syncfifo_readable;
wire [129:0] basesoc_writer_data_fifo_syncfifo_din;
wire [129:0] basesoc_writer_data_fifo_syncfifo_dout;
reg  [7:0] basesoc_writer_data_fifo_level0 = 8'd0;
reg  basesoc_writer_data_fifo_replace = 1'd0;
reg  [6:0] basesoc_writer_data_fifo_produce = 7'd0;
reg  [6:0] basesoc_writer_data_fifo_consume = 7'd0;
reg  [6:0] basesoc_writer_data_fifo_wrport_adr = 7'd0;
wire [129:0] basesoc_writer_data_fifo_wrport_dat_r;
wire basesoc_writer_data_fifo_wrport_we;
wire [129:0] basesoc_writer_data_fifo_wrport_dat_w;
wire basesoc_writer_data_fifo_do_read;
wire [6:0] basesoc_writer_data_fifo_rdport_adr;
wire [129:0] basesoc_writer_data_fifo_rdport_dat_r;
wire basesoc_writer_data_fifo_rdport_re;
wire [7:0] basesoc_writer_data_fifo_level1;
wire [127:0] basesoc_writer_data_fifo_fifo_in_payload_data;
wire basesoc_writer_data_fifo_fifo_in_first;
wire basesoc_writer_data_fifo_fifo_in_last;
wire [127:0] basesoc_writer_data_fifo_fifo_out_payload_data;
wire basesoc_writer_data_fifo_fifo_out_first;
wire basesoc_writer_data_fifo_fifo_out_last;
reg  basesoc_writer_resetinserter_reset = 1'd0;
reg  [23:0] basesoc_writer_req_count = 24'd0;
reg  basesoc_litepciemasterinternalport1_sink_valid = 1'd0;
wire basesoc_litepciemasterinternalport1_sink_ready;
wire basesoc_litepciemasterinternalport1_sink_first;
wire basesoc_litepciemasterinternalport1_sink_last;
wire basesoc_litepciemasterinternalport1_sink_payload_we;
wire [31:0] basesoc_litepciemasterinternalport1_sink_payload_adr;
wire [9:0] basesoc_litepciemasterinternalport1_sink_payload_len;
wire [15:0] basesoc_litepciemasterinternalport1_sink_payload_req_id;
reg  [7:0] basesoc_litepciemasterinternalport1_sink_payload_tag = 8'd0;
wire [127:0] basesoc_litepciemasterinternalport1_sink_payload_dat;
wire [7:0] basesoc_litepciemasterinternalport1_sink_payload_channel;
wire [7:0] basesoc_litepciemasterinternalport1_sink_payload_user_id;
wire basesoc_litepciemasterinternalport1_source_valid;
reg  basesoc_litepciemasterinternalport1_source_ready = 1'd0;
wire basesoc_litepciemasterinternalport1_source_first;
wire basesoc_litepciemasterinternalport1_source_last;
wire [31:0] basesoc_litepciemasterinternalport1_source_payload_adr;
wire [9:0] basesoc_litepciemasterinternalport1_source_payload_len;
wire basesoc_litepciemasterinternalport1_source_payload_end;
wire [15:0] basesoc_litepciemasterinternalport1_source_payload_req_id;
wire [15:0] basesoc_litepciemasterinternalport1_source_payload_cmp_id;
wire basesoc_litepciemasterinternalport1_source_payload_err;
wire [7:0] basesoc_litepciemasterinternalport1_source_payload_tag;
wire [127:0] basesoc_litepciemasterinternalport1_source_payload_dat;
wire [7:0] basesoc_litepciemasterinternalport1_source_payload_channel;
wire [7:0] basesoc_litepciemasterinternalport1_source_payload_user_id;
wire basesoc_reader_source_source_valid0;
wire basesoc_reader_source_source_ready0;
wire basesoc_reader_source_source_first0;
wire basesoc_reader_source_source_last0;
wire [127:0] basesoc_reader_source_source_payload_data;
reg  basesoc_reader_enable_storage = 1'd0;
reg  basesoc_reader_enable_re = 1'd0;
reg  basesoc_reader_irq = 1'd0;
wire basesoc_reader_source_source_valid1;
wire basesoc_reader_source_source_ready1;
wire basesoc_reader_source_source_first1;
wire basesoc_reader_source_source_last1;
wire [31:0] basesoc_reader_source_source_payload_address;
wire [23:0] basesoc_reader_source_source_payload_length;
wire basesoc_reader_source_source_payload_irq_disable;
wire basesoc_reader_source_source_payload_last_disable;
wire [31:0] basesoc_reader_address;
wire [23:0] basesoc_reader_length;
wire basesoc_reader_irq_disable;
wire basesoc_reader_last_disable;
reg  [57:0] basesoc_reader_value_storage = 58'd0;
reg  basesoc_reader_value_re = 1'd0;
reg  basesoc_reader_we_storage = 1'd0;
reg  basesoc_reader_we_re = 1'd0;
reg  basesoc_reader_loop_prog_n_storage = 1'd0;
reg  basesoc_reader_loop_prog_n_re = 1'd0;
reg  [15:0] basesoc_reader_index = 16'd0;
reg  [15:0] basesoc_reader_count = 16'd0;
reg  [31:0] basesoc_reader_loop_status_status = 32'd0;
wire basesoc_reader_loop_status_we;
reg  basesoc_reader_loop_status_re = 1'd0;
wire [8:0] basesoc_reader_level_status;
wire basesoc_reader_level_we;
reg  basesoc_reader_level_re = 1'd0;
reg  basesoc_reader_reset_storage = 1'd0;
reg  basesoc_reader_reset_re = 1'd0;
reg  basesoc_reader_table_sink_valid = 1'd0;
wire basesoc_reader_table_sink_ready;
reg  basesoc_reader_table_sink_first = 1'd0;
reg  basesoc_reader_table_sink_last = 1'd0;
reg  [31:0] basesoc_reader_table_sink_payload_address = 32'd0;
reg  [23:0] basesoc_reader_table_sink_payload_length = 24'd0;
reg  basesoc_reader_table_sink_payload_irq_disable = 1'd0;
reg  basesoc_reader_table_sink_payload_last_disable = 1'd0;
wire basesoc_reader_table_source_valid;
wire basesoc_reader_table_source_ready;
wire basesoc_reader_table_source_first;
wire basesoc_reader_table_source_last;
wire [31:0] basesoc_reader_table_source_payload_address;
wire [23:0] basesoc_reader_table_source_payload_length;
wire basesoc_reader_table_source_payload_irq_disable;
wire basesoc_reader_table_source_payload_last_disable;
wire basesoc_reader_table_syncfifo_we;
wire basesoc_reader_table_syncfifo_writable;
wire basesoc_reader_table_syncfifo_re;
wire basesoc_reader_table_syncfifo_readable;
wire [59:0] basesoc_reader_table_syncfifo_din;
wire [59:0] basesoc_reader_table_syncfifo_dout;
reg  [8:0] basesoc_reader_table_level = 9'd0;
reg  basesoc_reader_table_replace = 1'd0;
reg  [7:0] basesoc_reader_table_produce = 8'd0;
reg  [7:0] basesoc_reader_table_consume = 8'd0;
reg  [7:0] basesoc_reader_table_wrport_adr = 8'd0;
wire [59:0] basesoc_reader_table_wrport_dat_r;
wire basesoc_reader_table_wrport_we;
wire [59:0] basesoc_reader_table_wrport_dat_w;
wire basesoc_reader_table_do_read;
wire [7:0] basesoc_reader_table_rdport_adr;
wire [59:0] basesoc_reader_table_rdport_dat_r;
wire [31:0] basesoc_reader_table_fifo_in_payload_address;
wire [23:0] basesoc_reader_table_fifo_in_payload_length;
wire basesoc_reader_table_fifo_in_payload_irq_disable;
wire basesoc_reader_table_fifo_in_payload_last_disable;
wire basesoc_reader_table_fifo_in_first;
wire basesoc_reader_table_fifo_in_last;
wire [31:0] basesoc_reader_table_fifo_out_payload_address;
wire [23:0] basesoc_reader_table_fifo_out_payload_length;
wire basesoc_reader_table_fifo_out_payload_irq_disable;
wire basesoc_reader_table_fifo_out_payload_last_disable;
wire basesoc_reader_table_fifo_out_first;
wire basesoc_reader_table_fifo_out_last;
wire basesoc_reader_table_reset;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_valid;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_ready = 1'd0;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_first;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_last;
wire [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_address;
wire [23:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_length;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_irq_disable;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_last_disable;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_source_valid = 1'd0;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_source_ready;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_source_first = 1'd0;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_source_last = 1'd0;
wire [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_address;
reg  [23:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_length = 24'd0;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_irq_disable;
wire basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_last_disable;
wire [7:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_user_id;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_end = 1'd0;
reg  [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length = 32'd0;
reg  [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset = 32'd0;
reg  [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id = 32'd0;
reg  basesoc_reader_splitter_reset = 1'd0;
wire basesoc_reader_splitter_bufferizeendpoints_sink_valid;
wire basesoc_reader_splitter_bufferizeendpoints_sink_ready;
wire basesoc_reader_splitter_bufferizeendpoints_sink_first;
wire basesoc_reader_splitter_bufferizeendpoints_sink_last;
wire [31:0] basesoc_reader_splitter_bufferizeendpoints_sink_payload_address;
wire [23:0] basesoc_reader_splitter_bufferizeendpoints_sink_payload_length;
wire basesoc_reader_splitter_bufferizeendpoints_sink_payload_irq_disable;
wire basesoc_reader_splitter_bufferizeendpoints_sink_payload_last_disable;
wire [7:0] basesoc_reader_splitter_bufferizeendpoints_sink_payload_user_id;
reg  basesoc_reader_splitter_bufferizeendpoints_source_valid = 1'd0;
reg  basesoc_reader_splitter_bufferizeendpoints_source_ready = 1'd0;
reg  basesoc_reader_splitter_bufferizeendpoints_source_first = 1'd0;
reg  basesoc_reader_splitter_bufferizeendpoints_source_last = 1'd0;
reg  [31:0] basesoc_reader_splitter_bufferizeendpoints_source_payload_address = 32'd0;
reg  [23:0] basesoc_reader_splitter_bufferizeendpoints_source_payload_length = 24'd0;
reg  basesoc_reader_splitter_bufferizeendpoints_source_payload_irq_disable = 1'd0;
reg  basesoc_reader_splitter_bufferizeendpoints_source_payload_last_disable = 1'd0;
reg  [7:0] basesoc_reader_splitter_bufferizeendpoints_source_payload_user_id = 8'd0;
reg  [7:0] basesoc_reader_last_user_id = 8'd255;
reg  basesoc_reader_data_fifo_sink_valid = 1'd0;
wire basesoc_reader_data_fifo_sink_ready;
reg  basesoc_reader_data_fifo_sink_first = 1'd0;
reg  basesoc_reader_data_fifo_sink_last = 1'd0;
reg  [127:0] basesoc_reader_data_fifo_sink_payload_data = 128'd0;
wire basesoc_reader_data_fifo_source_valid;
wire basesoc_reader_data_fifo_source_ready;
wire basesoc_reader_data_fifo_source_first;
wire basesoc_reader_data_fifo_source_last;
wire [127:0] basesoc_reader_data_fifo_source_payload_data;
wire basesoc_reader_data_fifo_re;
reg  basesoc_reader_data_fifo_readable = 1'd0;
wire basesoc_reader_data_fifo_syncfifo_we;
wire basesoc_reader_data_fifo_syncfifo_writable;
wire basesoc_reader_data_fifo_syncfifo_re;
wire basesoc_reader_data_fifo_syncfifo_readable;
wire [129:0] basesoc_reader_data_fifo_syncfifo_din;
wire [129:0] basesoc_reader_data_fifo_syncfifo_dout;
reg  [10:0] basesoc_reader_data_fifo_level0 = 11'd0;
reg  basesoc_reader_data_fifo_replace = 1'd0;
reg  [9:0] basesoc_reader_data_fifo_produce = 10'd0;
reg  [9:0] basesoc_reader_data_fifo_consume = 10'd0;
reg  [9:0] basesoc_reader_data_fifo_wrport_adr = 10'd0;
wire [129:0] basesoc_reader_data_fifo_wrport_dat_r;
wire basesoc_reader_data_fifo_wrport_we;
wire [129:0] basesoc_reader_data_fifo_wrport_dat_w;
wire basesoc_reader_data_fifo_do_read;
wire [9:0] basesoc_reader_data_fifo_rdport_adr;
wire [129:0] basesoc_reader_data_fifo_rdport_dat_r;
wire basesoc_reader_data_fifo_rdport_re;
wire [10:0] basesoc_reader_data_fifo_level1;
wire [127:0] basesoc_reader_data_fifo_fifo_in_payload_data;
wire basesoc_reader_data_fifo_fifo_in_first;
wire basesoc_reader_data_fifo_fifo_in_last;
wire [127:0] basesoc_reader_data_fifo_fifo_out_payload_data;
wire basesoc_reader_data_fifo_fifo_out_first;
wire basesoc_reader_data_fifo_fifo_out_last;
reg  basesoc_reader_resetinserter_reset = 1'd0;
reg  [10:0] basesoc_reader_pending_words = 11'd0;
reg  [10:0] basesoc_reader_pending_words_queue = 11'd0;
reg  [10:0] basesoc_reader_pending_words_dequeue = 11'd0;
reg  basesoc_loopback_storage = 1'd0;
reg  basesoc_loopback_re = 1'd0;
wire basesoc_loopback_sink_valid;
reg  basesoc_loopback_sink_ready = 1'd0;
wire basesoc_loopback_sink_first;
wire basesoc_loopback_sink_last;
wire [127:0] basesoc_loopback_sink_payload_data;
reg  basesoc_loopback_source_valid = 1'd0;
wire basesoc_loopback_source_ready;
reg  basesoc_loopback_source_first = 1'd0;
reg  basesoc_loopback_source_last = 1'd0;
reg  [127:0] basesoc_loopback_source_payload_data = 128'd0;
reg  basesoc_loopback_next_source_valid = 1'd0;
wire basesoc_loopback_next_source_ready;
reg  basesoc_loopback_next_source_first = 1'd0;
reg  basesoc_loopback_next_source_last = 1'd0;
reg  [127:0] basesoc_loopback_next_source_payload_data = 128'd0;
wire basesoc_loopback_next_sink_valid;
reg  basesoc_loopback_next_sink_ready = 1'd0;
wire basesoc_loopback_next_sink_first;
wire basesoc_loopback_next_sink_last;
wire [127:0] basesoc_loopback_next_sink_payload_data;
wire basesoc_buffering_sink_sink_valid;
reg  basesoc_buffering_sink_sink_ready = 1'd0;
wire basesoc_buffering_sink_sink_first;
wire basesoc_buffering_sink_sink_last;
wire [127:0] basesoc_buffering_sink_sink_payload_data;
wire basesoc_buffering_source_source_valid;
wire basesoc_buffering_source_source_ready;
wire basesoc_buffering_source_source_first;
wire basesoc_buffering_source_source_last;
wire [127:0] basesoc_buffering_source_source_payload_data;
wire basesoc_buffering_next_source_valid;
reg  basesoc_buffering_next_source_ready = 1'd0;
wire basesoc_buffering_next_source_first;
wire basesoc_buffering_next_source_last;
wire [127:0] basesoc_buffering_next_source_payload_data;
reg  basesoc_buffering_next_sink_valid = 1'd0;
reg  basesoc_buffering_next_sink_ready = 1'd0;
reg  basesoc_buffering_next_sink_first = 1'd0;
reg  basesoc_buffering_next_sink_last = 1'd0;
reg  [127:0] basesoc_buffering_next_sink_payload_data = 128'd0;
wire [10:0] basesoc_buffering_csrfield_depth0;
wire [3:0] basesoc_buffering_csrfield_scratch0;
wire basesoc_buffering_csrfield_level_mode0;
reg  [31:0] basesoc_buffering_reader_fifo_control_storage = 32'd1024;
reg  basesoc_buffering_reader_fifo_control_re = 1'd0;
reg  [10:0] basesoc_buffering_csrfield_level0 = 11'd0;
wire [10:0] basesoc_buffering_reader_fifo_status_status;
wire basesoc_buffering_reader_fifo_status_we;
reg  basesoc_buffering_reader_fifo_status_re = 1'd0;
wire [10:0] basesoc_buffering_csrfield_depth1;
wire [3:0] basesoc_buffering_csrfield_scratch1;
wire basesoc_buffering_csrfield_level_mode1;
reg  [31:0] basesoc_buffering_writer_fifo_control_storage = 32'd1024;
reg  basesoc_buffering_writer_fifo_control_re = 1'd0;
reg  [10:0] basesoc_buffering_csrfield_level1 = 11'd0;
wire [10:0] basesoc_buffering_writer_fifo_status_status;
wire basesoc_buffering_writer_fifo_status_we;
reg  basesoc_buffering_writer_fifo_status_re = 1'd0;
reg  basesoc_buffering_reader_fifo_sink_valid = 1'd0;
wire basesoc_buffering_reader_fifo_sink_ready;
wire basesoc_buffering_reader_fifo_sink_first;
wire basesoc_buffering_reader_fifo_sink_last;
wire [127:0] basesoc_buffering_reader_fifo_sink_payload_data;
wire basesoc_buffering_reader_fifo_source_valid;
wire basesoc_buffering_reader_fifo_source_ready;
wire basesoc_buffering_reader_fifo_source_first;
wire basesoc_buffering_reader_fifo_source_last;
wire [127:0] basesoc_buffering_reader_fifo_source_payload_data;
wire basesoc_buffering_reader_fifo_re;
reg  basesoc_buffering_reader_fifo_readable = 1'd0;
wire basesoc_buffering_reader_fifo_syncfifo_we;
wire basesoc_buffering_reader_fifo_syncfifo_writable;
wire basesoc_buffering_reader_fifo_syncfifo_re;
wire basesoc_buffering_reader_fifo_syncfifo_readable;
wire [129:0] basesoc_buffering_reader_fifo_syncfifo_din;
wire [129:0] basesoc_buffering_reader_fifo_syncfifo_dout;
reg  [6:0] basesoc_buffering_reader_fifo_level0 = 7'd0;
reg  basesoc_buffering_reader_fifo_replace = 1'd0;
reg  [5:0] basesoc_buffering_reader_fifo_produce = 6'd0;
reg  [5:0] basesoc_buffering_reader_fifo_consume = 6'd0;
reg  [5:0] basesoc_buffering_reader_fifo_wrport_adr = 6'd0;
wire [129:0] basesoc_buffering_reader_fifo_wrport_dat_r;
wire basesoc_buffering_reader_fifo_wrport_we;
wire [129:0] basesoc_buffering_reader_fifo_wrport_dat_w;
wire basesoc_buffering_reader_fifo_do_read;
wire [5:0] basesoc_buffering_reader_fifo_rdport_adr;
wire [129:0] basesoc_buffering_reader_fifo_rdport_dat_r;
wire basesoc_buffering_reader_fifo_rdport_re;
wire [6:0] basesoc_buffering_reader_fifo_level1;
wire [127:0] basesoc_buffering_reader_fifo_fifo_in_payload_data;
wire basesoc_buffering_reader_fifo_fifo_in_first;
wire basesoc_buffering_reader_fifo_fifo_in_last;
wire [127:0] basesoc_buffering_reader_fifo_fifo_out_payload_data;
wire basesoc_buffering_reader_fifo_fifo_out_first;
wire basesoc_buffering_reader_fifo_fifo_out_last;
reg  [6:0] basesoc_buffering_reader_fifo_level_min = 7'd0;
reg  basesoc_buffering_writer_fifo_sink_valid = 1'd0;
wire basesoc_buffering_writer_fifo_sink_ready;
wire basesoc_buffering_writer_fifo_sink_first;
wire basesoc_buffering_writer_fifo_sink_last;
wire [127:0] basesoc_buffering_writer_fifo_sink_payload_data;
wire basesoc_buffering_writer_fifo_source_valid;
wire basesoc_buffering_writer_fifo_source_ready;
wire basesoc_buffering_writer_fifo_source_first;
wire basesoc_buffering_writer_fifo_source_last;
wire [127:0] basesoc_buffering_writer_fifo_source_payload_data;
wire basesoc_buffering_writer_fifo_re;
reg  basesoc_buffering_writer_fifo_readable = 1'd0;
wire basesoc_buffering_writer_fifo_syncfifo_we;
wire basesoc_buffering_writer_fifo_syncfifo_writable;
wire basesoc_buffering_writer_fifo_syncfifo_re;
wire basesoc_buffering_writer_fifo_syncfifo_readable;
wire [129:0] basesoc_buffering_writer_fifo_syncfifo_din;
wire [129:0] basesoc_buffering_writer_fifo_syncfifo_dout;
reg  [6:0] basesoc_buffering_writer_fifo_level0 = 7'd0;
reg  basesoc_buffering_writer_fifo_replace = 1'd0;
reg  [5:0] basesoc_buffering_writer_fifo_produce = 6'd0;
reg  [5:0] basesoc_buffering_writer_fifo_consume = 6'd0;
reg  [5:0] basesoc_buffering_writer_fifo_wrport_adr = 6'd0;
wire [129:0] basesoc_buffering_writer_fifo_wrport_dat_r;
wire basesoc_buffering_writer_fifo_wrport_we;
wire [129:0] basesoc_buffering_writer_fifo_wrport_dat_w;
wire basesoc_buffering_writer_fifo_do_read;
wire [5:0] basesoc_buffering_writer_fifo_rdport_adr;
wire [129:0] basesoc_buffering_writer_fifo_rdport_dat_r;
wire basesoc_buffering_writer_fifo_rdport_re;
wire [6:0] basesoc_buffering_writer_fifo_level1;
wire [127:0] basesoc_buffering_writer_fifo_fifo_in_payload_data;
wire basesoc_buffering_writer_fifo_fifo_in_first;
wire basesoc_buffering_writer_fifo_fifo_in_last;
wire [127:0] basesoc_buffering_writer_fifo_fifo_out_payload_data;
wire basesoc_buffering_writer_fifo_fifo_out_first;
wire basesoc_buffering_writer_fifo_fifo_out_last;
reg  [6:0] basesoc_buffering_writer_fifo_level_max = 7'd0;
reg  icap_write = 1'd0;
wire icap_read;
reg  icap_done = 1'd0;
reg  [4:0] icap_addr = 5'd0;
reg  [31:0] icap_write_data = 32'd0;
reg  [31:0] icap_read_data = 32'd0;
(* dont_touch = "true" *) reg  icap_clk = 1'd0;
reg  icap_rst = 1'd0;
reg  [3:0] icap_icap_clk_counter = 4'd0;
reg  icap_csib = 1'd1;
reg  icap_rdwrb = 1'd0;
reg  [31:0] icap__i = 32'd0;
wire [31:0] icap__o;
reg  [3:0] icap_count = 4'd0;
wire icap_reset;
wire [31:0] icap_i_icape2;
wire [31:0] icap_o_icape2;
reg  [4:0] icap_addr_storage = 5'd0;
reg  icap_addr_re = 1'd0;
reg  [31:0] icap_data_storage = 32'd0;
reg  icap_data_re = 1'd0;
reg  icap_data_we = 1'd0;
reg  [31:0] icap_data_dat_w = 32'd0;
reg  icap_write_storage = 1'd0;
reg  icap_write_re = 1'd0;
wire icap_done_status;
wire icap_done_we;
reg  icap_done_re = 1'd0;
reg  icap_read_storage = 1'd0;
reg  icap_read_re = 1'd0;
reg  icap_reload = 1'd0;
reg  flash_cs_n_storage = 1'd0;
reg  flash_cs_n_re = 1'd0;
reg  flash_pads_clk = 1'd0;
reg  flash_pads_cs_n = 1'd0;
reg  flash_pads_mosi = 1'd0;
wire flash_pads_miso;
wire flash_start0;
wire [7:0] flash_length0;
reg  flash_done0 = 1'd0;
reg  flash_irq = 1'd0;
wire [39:0] flash_mosi_1;
reg  [39:0] flash_miso_1 = 40'd0;
wire flash_cs;
wire flash_cs_mode;
wire flash_loopback;
reg  [15:0] flash_clk_divider0 = 16'd4;
reg  flash_start1 = 1'd0;
wire [7:0] flash_length1;
reg  [15:0] flash_control_storage = 16'd0;
reg  flash_control_re = 1'd0;
wire flash_done1;
wire flash_status_status;
wire flash_status_we;
reg  flash_status_re = 1'd0;
reg  [39:0] flash_mosi_storage = 40'd0;
reg  flash_mosi_re = 1'd0;
wire [39:0] flash_miso_status;
wire flash_miso_we;
reg  flash_miso_re = 1'd0;
wire flash_sel;
wire flash_mode0;
reg  [16:0] flash_cs_storage = 17'd1;
reg  flash_cs_re = 1'd0;
wire flash_mode1;
reg  flash_loopback_storage = 1'd0;
reg  flash_loopback_re = 1'd0;
reg  flash_clk_enable = 1'd0;
reg  flash_xfer_enable = 1'd0;
reg  [5:0] flash_count = 6'd0;
reg  flash_mosi_latch = 1'd0;
reg  flash_miso_latch = 1'd0;
reg  [15:0] flash_clk_divider1 = 16'd0;
wire flash_clk_rise;
wire flash_clk_fall;
reg  [39:0] flash_mosi_data = 40'd0;
reg  [5:0] flash_mosi_sel = 6'd0;
reg  [39:0] flash_miso_data = 40'd0;
reg  [3:0] leds_storage = 4'd0;
reg  leds_re = 1'd0;
reg  [3:0] leds_chaser = 4'd0;
reg  leds_mode = 1'd0;
wire leds_wait;
wire leds_done;
reg  [23:0] leds_count = 24'd12500000;
wire subfragments_reset0;
wire subfragments_reset1;
wire subfragments_reset2;
wire subfragments_reset3;
wire subfragments_reset4;
wire subfragments_reset5;
wire subfragments_reset6;
wire subfragments_reset7;
wire subfragments_pll_fb;
reg  [1:0] subfragments_refresher_state = 2'd0;
reg  [1:0] subfragments_refresher_next_state = 2'd0;
reg  [3:0] subfragments_bankmachine0_state = 4'd0;
reg  [3:0] subfragments_bankmachine0_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine1_state = 4'd0;
reg  [3:0] subfragments_bankmachine1_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine2_state = 4'd0;
reg  [3:0] subfragments_bankmachine2_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine3_state = 4'd0;
reg  [3:0] subfragments_bankmachine3_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine4_state = 4'd0;
reg  [3:0] subfragments_bankmachine4_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine5_state = 4'd0;
reg  [3:0] subfragments_bankmachine5_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine6_state = 4'd0;
reg  [3:0] subfragments_bankmachine6_next_state = 4'd0;
reg  [3:0] subfragments_bankmachine7_state = 4'd0;
reg  [3:0] subfragments_bankmachine7_next_state = 4'd0;
reg  [3:0] subfragments_multiplexer_state = 4'd0;
reg  [3:0] subfragments_multiplexer_next_state = 4'd0;
wire subfragments_roundrobin0_request;
wire subfragments_roundrobin0_grant;
wire subfragments_roundrobin0_ce;
wire subfragments_roundrobin1_request;
wire subfragments_roundrobin1_grant;
wire subfragments_roundrobin1_ce;
wire subfragments_roundrobin2_request;
wire subfragments_roundrobin2_grant;
wire subfragments_roundrobin2_ce;
wire subfragments_roundrobin3_request;
wire subfragments_roundrobin3_grant;
wire subfragments_roundrobin3_ce;
wire subfragments_roundrobin4_request;
wire subfragments_roundrobin4_grant;
wire subfragments_roundrobin4_ce;
wire subfragments_roundrobin5_request;
wire subfragments_roundrobin5_grant;
wire subfragments_roundrobin5_ce;
wire subfragments_roundrobin6_request;
wire subfragments_roundrobin6_grant;
wire subfragments_roundrobin6_ce;
wire subfragments_roundrobin7_request;
wire subfragments_roundrobin7_grant;
wire subfragments_roundrobin7_ce;
reg  subfragments_locked0 = 1'd0;
reg  subfragments_locked1 = 1'd0;
reg  subfragments_locked2 = 1'd0;
reg  subfragments_locked3 = 1'd0;
reg  subfragments_locked4 = 1'd0;
reg  subfragments_locked5 = 1'd0;
reg  subfragments_locked6 = 1'd0;
reg  subfragments_locked7 = 1'd0;
reg  subfragments_new_master_wdata_ready0 = 1'd0;
reg  subfragments_new_master_wdata_ready1 = 1'd0;
reg  subfragments_new_master_rdata_valid0 = 1'd0;
reg  subfragments_new_master_rdata_valid1 = 1'd0;
reg  subfragments_new_master_rdata_valid2 = 1'd0;
reg  subfragments_new_master_rdata_valid3 = 1'd0;
reg  subfragments_new_master_rdata_valid4 = 1'd0;
reg  subfragments_new_master_rdata_valid5 = 1'd0;
reg  subfragments_new_master_rdata_valid6 = 1'd0;
reg  subfragments_new_master_rdata_valid7 = 1'd0;
reg  subfragments_new_master_rdata_valid8 = 1'd0;
reg  [1:0] subfragments_fullmemorywe_state = 2'd0;
reg  [1:0] subfragments_fullmemorywe_next_state = 2'd0;
reg  [1:0] subfragments_litedramwishbone2native_state = 2'd0;
reg  [1:0] subfragments_litedramwishbone2native_next_state = 2'd0;
reg  basesoc_aborted_litedramwishbone2native_next_value = 1'd0;
reg  basesoc_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg  subfragments_s7pciephy_state = 1'd0;
reg  subfragments_s7pciephy_next_state = 1'd0;
reg  [1:0] subfragments_litepcietlpdepacketizer_state = 2'd0;
reg  [1:0] subfragments_litepcietlpdepacketizer_next_state = 2'd0;
reg  basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 = 1'd0;
reg  basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg  basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 = 1'd0;
reg  basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
reg  [31:0] subfragments_litepcietlpdepacketizer_next_value0 = 32'd0;
reg  subfragments_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg  [31:0] subfragments_litepcietlpdepacketizer_next_value1 = 32'd0;
reg  subfragments_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
reg  [31:0] subfragments_litepcietlpdepacketizer_next_value2 = 32'd0;
reg  subfragments_litepcietlpdepacketizer_next_value_ce2 = 1'd0;
reg  [31:0] subfragments_litepcietlpdepacketizer_next_value3 = 32'd0;
reg  subfragments_litepcietlpdepacketizer_next_value_ce3 = 1'd0;
reg  subfragments_litepcietlppacketizer_state = 1'd0;
reg  subfragments_litepcietlppacketizer_next_state = 1'd0;
wire subfragments_s_dispatcher_sel;
wire subfragments_master_in_sink_valid;
reg  subfragments_master_in_sink_ready = 1'd0;
wire subfragments_master_in_sink_first;
wire subfragments_master_in_sink_last;
wire subfragments_master_in_sink_payload_we;
wire [31:0] subfragments_master_in_sink_payload_adr;
wire [9:0] subfragments_master_in_sink_payload_len;
wire [15:0] subfragments_master_in_sink_payload_req_id;
wire [7:0] subfragments_master_in_sink_payload_tag;
wire [127:0] subfragments_master_in_sink_payload_dat;
wire [7:0] subfragments_master_in_sink_payload_channel;
wire [7:0] subfragments_master_in_sink_payload_user_id;
reg  subfragments_master_in_source_valid = 1'd0;
wire subfragments_master_in_source_ready;
reg  subfragments_master_in_source_first = 1'd0;
reg  subfragments_master_in_source_last = 1'd0;
reg  [31:0] subfragments_master_in_source_payload_adr = 32'd0;
reg  [9:0] subfragments_master_in_source_payload_len = 10'd0;
reg  subfragments_master_in_source_payload_end = 1'd0;
reg  [15:0] subfragments_master_in_source_payload_req_id = 16'd0;
reg  [15:0] subfragments_master_in_source_payload_cmp_id = 16'd0;
reg  subfragments_master_in_source_payload_err = 1'd0;
reg  [7:0] subfragments_master_in_source_payload_tag = 8'd0;
reg  [127:0] subfragments_master_in_source_payload_dat = 128'd0;
reg  [7:0] subfragments_master_in_source_payload_channel = 8'd0;
reg  [7:0] subfragments_master_in_source_payload_user_id = 8'd0;
reg  subfragments_master_out_sink_valid = 1'd0;
reg  subfragments_master_out_sink_ready = 1'd0;
wire subfragments_master_out_sink_first;
wire subfragments_master_out_sink_last;
wire subfragments_master_out_sink_payload_we;
wire [31:0] subfragments_master_out_sink_payload_adr;
wire [9:0] subfragments_master_out_sink_payload_len;
wire [15:0] subfragments_master_out_sink_payload_req_id;
reg  [7:0] subfragments_master_out_sink_payload_tag = 8'd0;
wire [127:0] subfragments_master_out_sink_payload_dat;
wire [7:0] subfragments_master_out_sink_payload_channel;
wire [7:0] subfragments_master_out_sink_payload_user_id;
wire subfragments_master_out_source_valid;
reg  subfragments_master_out_source_ready = 1'd0;
wire subfragments_master_out_source_first;
wire subfragments_master_out_source_last;
wire [31:0] subfragments_master_out_source_payload_adr;
wire [9:0] subfragments_master_out_source_payload_len;
wire subfragments_master_out_source_payload_end;
wire [15:0] subfragments_master_out_source_payload_req_id;
wire [15:0] subfragments_master_out_source_payload_cmp_id;
wire subfragments_master_out_source_payload_err;
wire [7:0] subfragments_master_out_source_payload_tag;
wire [127:0] subfragments_master_out_source_payload_dat;
wire [7:0] subfragments_master_out_source_payload_channel;
wire [7:0] subfragments_master_out_source_payload_user_id;
reg  subfragments_tag_queue_sink_valid = 1'd0;
wire subfragments_tag_queue_sink_ready;
reg  subfragments_tag_queue_sink_first = 1'd0;
reg  subfragments_tag_queue_sink_last = 1'd0;
reg  [2:0] subfragments_tag_queue_sink_payload_tag = 3'd0;
wire subfragments_tag_queue_source_valid;
reg  subfragments_tag_queue_source_ready = 1'd0;
wire subfragments_tag_queue_source_first;
wire subfragments_tag_queue_source_last;
wire [2:0] subfragments_tag_queue_source_payload_tag;
wire subfragments_tag_queue_re;
reg  subfragments_tag_queue_readable = 1'd0;
wire subfragments_tag_queue_syncfifo_we;
wire subfragments_tag_queue_syncfifo_writable;
wire subfragments_tag_queue_syncfifo_re;
wire subfragments_tag_queue_syncfifo_readable;
wire [4:0] subfragments_tag_queue_syncfifo_din;
wire [4:0] subfragments_tag_queue_syncfifo_dout;
reg  [3:0] subfragments_tag_queue_level0 = 4'd0;
reg  subfragments_tag_queue_replace = 1'd0;
reg  [2:0] subfragments_tag_queue_produce = 3'd0;
reg  [2:0] subfragments_tag_queue_consume = 3'd0;
reg  [2:0] subfragments_tag_queue_wrport_adr = 3'd0;
wire [4:0] subfragments_tag_queue_wrport_dat_r;
wire subfragments_tag_queue_wrport_we;
wire [4:0] subfragments_tag_queue_wrport_dat_w;
wire subfragments_tag_queue_do_read;
wire [2:0] subfragments_tag_queue_rdport_adr;
wire [4:0] subfragments_tag_queue_rdport_dat_r;
wire subfragments_tag_queue_rdport_re;
wire [3:0] subfragments_tag_queue_level1;
wire [2:0] subfragments_tag_queue_fifo_in_payload_tag;
wire subfragments_tag_queue_fifo_in_first;
wire subfragments_tag_queue_fifo_in_last;
wire [2:0] subfragments_tag_queue_fifo_out_payload_tag;
wire subfragments_tag_queue_fifo_out_first;
wire subfragments_tag_queue_fifo_out_last;
reg  subfragments_req_queue_sink_valid = 1'd0;
wire subfragments_req_queue_sink_ready;
reg  subfragments_req_queue_sink_first = 1'd0;
reg  subfragments_req_queue_sink_last = 1'd0;
reg  [2:0] subfragments_req_queue_sink_payload_tag = 3'd0;
reg  [7:0] subfragments_req_queue_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_req_queue_sink_payload_user_id = 8'd0;
wire subfragments_req_queue_source_valid;
reg  subfragments_req_queue_source_ready = 1'd0;
wire subfragments_req_queue_source_first;
wire subfragments_req_queue_source_last;
wire [2:0] subfragments_req_queue_source_payload_tag;
wire [7:0] subfragments_req_queue_source_payload_channel;
wire [7:0] subfragments_req_queue_source_payload_user_id;
wire subfragments_req_queue_re;
reg  subfragments_req_queue_readable = 1'd0;
wire subfragments_req_queue_syncfifo_we;
wire subfragments_req_queue_syncfifo_writable;
wire subfragments_req_queue_syncfifo_re;
wire subfragments_req_queue_syncfifo_readable;
wire [20:0] subfragments_req_queue_syncfifo_din;
wire [20:0] subfragments_req_queue_syncfifo_dout;
reg  [3:0] subfragments_req_queue_level0 = 4'd0;
reg  subfragments_req_queue_replace = 1'd0;
reg  [2:0] subfragments_req_queue_produce = 3'd0;
reg  [2:0] subfragments_req_queue_consume = 3'd0;
reg  [2:0] subfragments_req_queue_wrport_adr = 3'd0;
wire [20:0] subfragments_req_queue_wrport_dat_r;
wire subfragments_req_queue_wrport_we;
wire [20:0] subfragments_req_queue_wrport_dat_w;
wire subfragments_req_queue_do_read;
wire [2:0] subfragments_req_queue_rdport_adr;
wire [20:0] subfragments_req_queue_rdport_dat_r;
wire subfragments_req_queue_rdport_re;
wire [3:0] subfragments_req_queue_level1;
wire [2:0] subfragments_req_queue_fifo_in_payload_tag;
wire [7:0] subfragments_req_queue_fifo_in_payload_channel;
wire [7:0] subfragments_req_queue_fifo_in_payload_user_id;
wire subfragments_req_queue_fifo_in_first;
wire subfragments_req_queue_fifo_in_last;
wire [2:0] subfragments_req_queue_fifo_out_payload_tag;
wire [7:0] subfragments_req_queue_fifo_out_payload_channel;
wire [7:0] subfragments_req_queue_fifo_out_payload_user_id;
wire subfragments_req_queue_fifo_out_first;
wire subfragments_req_queue_fifo_out_last;
reg  subfragments_cmp_reorder_valid = 1'd0;
reg  subfragments_cmp_reorder_ready = 1'd0;
wire subfragments_cmp_reorder_first;
wire subfragments_cmp_reorder_last;
wire [31:0] subfragments_cmp_reorder_payload_adr;
wire [9:0] subfragments_cmp_reorder_payload_len;
wire subfragments_cmp_reorder_payload_end;
wire [15:0] subfragments_cmp_reorder_payload_req_id;
wire [15:0] subfragments_cmp_reorder_payload_cmp_id;
wire subfragments_cmp_reorder_payload_err;
wire [7:0] subfragments_cmp_reorder_payload_tag;
wire [127:0] subfragments_cmp_reorder_payload_dat;
wire [7:0] subfragments_cmp_reorder_payload_channel;
wire [7:0] subfragments_cmp_reorder_payload_user_id;
reg  subfragments_syncfifo0_sink_valid = 1'd0;
wire subfragments_syncfifo0_sink_ready;
reg  subfragments_syncfifo0_sink_first = 1'd0;
reg  subfragments_syncfifo0_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo0_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo0_sink_payload_len = 10'd0;
reg  subfragments_syncfifo0_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo0_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo0_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo0_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo0_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo0_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo0_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo0_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo0_source_valid;
reg  subfragments_syncfifo0_source_ready = 1'd0;
wire subfragments_syncfifo0_source_first;
wire subfragments_syncfifo0_source_last;
wire [31:0] subfragments_syncfifo0_source_payload_adr;
wire [9:0] subfragments_syncfifo0_source_payload_len;
wire subfragments_syncfifo0_source_payload_end;
wire [15:0] subfragments_syncfifo0_source_payload_req_id;
wire [15:0] subfragments_syncfifo0_source_payload_cmp_id;
wire subfragments_syncfifo0_source_payload_err;
wire [7:0] subfragments_syncfifo0_source_payload_tag;
wire [127:0] subfragments_syncfifo0_source_payload_dat;
wire [7:0] subfragments_syncfifo0_source_payload_channel;
wire [7:0] subfragments_syncfifo0_source_payload_user_id;
wire subfragments_syncfifo0_re;
reg  subfragments_syncfifo0_readable = 1'd0;
wire subfragments_syncfifo0_syncfifo0_we;
wire subfragments_syncfifo0_syncfifo0_writable;
wire subfragments_syncfifo0_syncfifo0_re;
wire subfragments_syncfifo0_syncfifo0_readable;
wire [229:0] subfragments_syncfifo0_syncfifo0_din;
wire [229:0] subfragments_syncfifo0_syncfifo0_dout;
reg  [7:0] subfragments_syncfifo0_level0 = 8'd0;
reg  subfragments_syncfifo0_replace = 1'd0;
reg  [6:0] subfragments_syncfifo0_produce = 7'd0;
reg  [6:0] subfragments_syncfifo0_consume = 7'd0;
reg  [6:0] subfragments_syncfifo0_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo0_wrport_dat_r;
wire subfragments_syncfifo0_wrport_we;
wire [229:0] subfragments_syncfifo0_wrport_dat_w;
wire subfragments_syncfifo0_do_read;
wire [6:0] subfragments_syncfifo0_rdport_adr;
wire [229:0] subfragments_syncfifo0_rdport_dat_r;
wire subfragments_syncfifo0_rdport_re;
wire [7:0] subfragments_syncfifo0_level1;
wire [31:0] subfragments_syncfifo0_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo0_fifo_in_payload_len;
wire subfragments_syncfifo0_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo0_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo0_fifo_in_payload_cmp_id;
wire subfragments_syncfifo0_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo0_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo0_fifo_in_payload_user_id;
wire subfragments_syncfifo0_fifo_in_first;
wire subfragments_syncfifo0_fifo_in_last;
wire [31:0] subfragments_syncfifo0_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo0_fifo_out_payload_len;
wire subfragments_syncfifo0_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo0_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo0_fifo_out_payload_cmp_id;
wire subfragments_syncfifo0_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo0_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo0_fifo_out_payload_user_id;
wire subfragments_syncfifo0_fifo_out_first;
wire subfragments_syncfifo0_fifo_out_last;
reg  subfragments_syncfifo1_sink_valid = 1'd0;
wire subfragments_syncfifo1_sink_ready;
reg  subfragments_syncfifo1_sink_first = 1'd0;
reg  subfragments_syncfifo1_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo1_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo1_sink_payload_len = 10'd0;
reg  subfragments_syncfifo1_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo1_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo1_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo1_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo1_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo1_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo1_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo1_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo1_source_valid;
reg  subfragments_syncfifo1_source_ready = 1'd0;
wire subfragments_syncfifo1_source_first;
wire subfragments_syncfifo1_source_last;
wire [31:0] subfragments_syncfifo1_source_payload_adr;
wire [9:0] subfragments_syncfifo1_source_payload_len;
wire subfragments_syncfifo1_source_payload_end;
wire [15:0] subfragments_syncfifo1_source_payload_req_id;
wire [15:0] subfragments_syncfifo1_source_payload_cmp_id;
wire subfragments_syncfifo1_source_payload_err;
wire [7:0] subfragments_syncfifo1_source_payload_tag;
wire [127:0] subfragments_syncfifo1_source_payload_dat;
wire [7:0] subfragments_syncfifo1_source_payload_channel;
wire [7:0] subfragments_syncfifo1_source_payload_user_id;
wire subfragments_syncfifo1_re;
reg  subfragments_syncfifo1_readable = 1'd0;
wire subfragments_syncfifo1_syncfifo1_we;
wire subfragments_syncfifo1_syncfifo1_writable;
wire subfragments_syncfifo1_syncfifo1_re;
wire subfragments_syncfifo1_syncfifo1_readable;
wire [229:0] subfragments_syncfifo1_syncfifo1_din;
wire [229:0] subfragments_syncfifo1_syncfifo1_dout;
reg  [7:0] subfragments_syncfifo1_level0 = 8'd0;
reg  subfragments_syncfifo1_replace = 1'd0;
reg  [6:0] subfragments_syncfifo1_produce = 7'd0;
reg  [6:0] subfragments_syncfifo1_consume = 7'd0;
reg  [6:0] subfragments_syncfifo1_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo1_wrport_dat_r;
wire subfragments_syncfifo1_wrport_we;
wire [229:0] subfragments_syncfifo1_wrport_dat_w;
wire subfragments_syncfifo1_do_read;
wire [6:0] subfragments_syncfifo1_rdport_adr;
wire [229:0] subfragments_syncfifo1_rdport_dat_r;
wire subfragments_syncfifo1_rdport_re;
wire [7:0] subfragments_syncfifo1_level1;
wire [31:0] subfragments_syncfifo1_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo1_fifo_in_payload_len;
wire subfragments_syncfifo1_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo1_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo1_fifo_in_payload_cmp_id;
wire subfragments_syncfifo1_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo1_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo1_fifo_in_payload_user_id;
wire subfragments_syncfifo1_fifo_in_first;
wire subfragments_syncfifo1_fifo_in_last;
wire [31:0] subfragments_syncfifo1_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo1_fifo_out_payload_len;
wire subfragments_syncfifo1_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo1_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo1_fifo_out_payload_cmp_id;
wire subfragments_syncfifo1_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo1_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo1_fifo_out_payload_user_id;
wire subfragments_syncfifo1_fifo_out_first;
wire subfragments_syncfifo1_fifo_out_last;
reg  subfragments_syncfifo2_sink_valid = 1'd0;
wire subfragments_syncfifo2_sink_ready;
reg  subfragments_syncfifo2_sink_first = 1'd0;
reg  subfragments_syncfifo2_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo2_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo2_sink_payload_len = 10'd0;
reg  subfragments_syncfifo2_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo2_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo2_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo2_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo2_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo2_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo2_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo2_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo2_source_valid;
reg  subfragments_syncfifo2_source_ready = 1'd0;
wire subfragments_syncfifo2_source_first;
wire subfragments_syncfifo2_source_last;
wire [31:0] subfragments_syncfifo2_source_payload_adr;
wire [9:0] subfragments_syncfifo2_source_payload_len;
wire subfragments_syncfifo2_source_payload_end;
wire [15:0] subfragments_syncfifo2_source_payload_req_id;
wire [15:0] subfragments_syncfifo2_source_payload_cmp_id;
wire subfragments_syncfifo2_source_payload_err;
wire [7:0] subfragments_syncfifo2_source_payload_tag;
wire [127:0] subfragments_syncfifo2_source_payload_dat;
wire [7:0] subfragments_syncfifo2_source_payload_channel;
wire [7:0] subfragments_syncfifo2_source_payload_user_id;
wire subfragments_syncfifo2_re;
reg  subfragments_syncfifo2_readable = 1'd0;
wire subfragments_syncfifo2_syncfifo2_we;
wire subfragments_syncfifo2_syncfifo2_writable;
wire subfragments_syncfifo2_syncfifo2_re;
wire subfragments_syncfifo2_syncfifo2_readable;
wire [229:0] subfragments_syncfifo2_syncfifo2_din;
wire [229:0] subfragments_syncfifo2_syncfifo2_dout;
reg  [7:0] subfragments_syncfifo2_level0 = 8'd0;
reg  subfragments_syncfifo2_replace = 1'd0;
reg  [6:0] subfragments_syncfifo2_produce = 7'd0;
reg  [6:0] subfragments_syncfifo2_consume = 7'd0;
reg  [6:0] subfragments_syncfifo2_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo2_wrport_dat_r;
wire subfragments_syncfifo2_wrport_we;
wire [229:0] subfragments_syncfifo2_wrport_dat_w;
wire subfragments_syncfifo2_do_read;
wire [6:0] subfragments_syncfifo2_rdport_adr;
wire [229:0] subfragments_syncfifo2_rdport_dat_r;
wire subfragments_syncfifo2_rdport_re;
wire [7:0] subfragments_syncfifo2_level1;
wire [31:0] subfragments_syncfifo2_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo2_fifo_in_payload_len;
wire subfragments_syncfifo2_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo2_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo2_fifo_in_payload_cmp_id;
wire subfragments_syncfifo2_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo2_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo2_fifo_in_payload_user_id;
wire subfragments_syncfifo2_fifo_in_first;
wire subfragments_syncfifo2_fifo_in_last;
wire [31:0] subfragments_syncfifo2_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo2_fifo_out_payload_len;
wire subfragments_syncfifo2_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo2_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo2_fifo_out_payload_cmp_id;
wire subfragments_syncfifo2_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo2_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo2_fifo_out_payload_user_id;
wire subfragments_syncfifo2_fifo_out_first;
wire subfragments_syncfifo2_fifo_out_last;
reg  subfragments_syncfifo3_sink_valid = 1'd0;
wire subfragments_syncfifo3_sink_ready;
reg  subfragments_syncfifo3_sink_first = 1'd0;
reg  subfragments_syncfifo3_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo3_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo3_sink_payload_len = 10'd0;
reg  subfragments_syncfifo3_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo3_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo3_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo3_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo3_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo3_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo3_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo3_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo3_source_valid;
reg  subfragments_syncfifo3_source_ready = 1'd0;
wire subfragments_syncfifo3_source_first;
wire subfragments_syncfifo3_source_last;
wire [31:0] subfragments_syncfifo3_source_payload_adr;
wire [9:0] subfragments_syncfifo3_source_payload_len;
wire subfragments_syncfifo3_source_payload_end;
wire [15:0] subfragments_syncfifo3_source_payload_req_id;
wire [15:0] subfragments_syncfifo3_source_payload_cmp_id;
wire subfragments_syncfifo3_source_payload_err;
wire [7:0] subfragments_syncfifo3_source_payload_tag;
wire [127:0] subfragments_syncfifo3_source_payload_dat;
wire [7:0] subfragments_syncfifo3_source_payload_channel;
wire [7:0] subfragments_syncfifo3_source_payload_user_id;
wire subfragments_syncfifo3_re;
reg  subfragments_syncfifo3_readable = 1'd0;
wire subfragments_syncfifo3_syncfifo3_we;
wire subfragments_syncfifo3_syncfifo3_writable;
wire subfragments_syncfifo3_syncfifo3_re;
wire subfragments_syncfifo3_syncfifo3_readable;
wire [229:0] subfragments_syncfifo3_syncfifo3_din;
wire [229:0] subfragments_syncfifo3_syncfifo3_dout;
reg  [7:0] subfragments_syncfifo3_level0 = 8'd0;
reg  subfragments_syncfifo3_replace = 1'd0;
reg  [6:0] subfragments_syncfifo3_produce = 7'd0;
reg  [6:0] subfragments_syncfifo3_consume = 7'd0;
reg  [6:0] subfragments_syncfifo3_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo3_wrport_dat_r;
wire subfragments_syncfifo3_wrport_we;
wire [229:0] subfragments_syncfifo3_wrport_dat_w;
wire subfragments_syncfifo3_do_read;
wire [6:0] subfragments_syncfifo3_rdport_adr;
wire [229:0] subfragments_syncfifo3_rdport_dat_r;
wire subfragments_syncfifo3_rdport_re;
wire [7:0] subfragments_syncfifo3_level1;
wire [31:0] subfragments_syncfifo3_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo3_fifo_in_payload_len;
wire subfragments_syncfifo3_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo3_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo3_fifo_in_payload_cmp_id;
wire subfragments_syncfifo3_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo3_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo3_fifo_in_payload_user_id;
wire subfragments_syncfifo3_fifo_in_first;
wire subfragments_syncfifo3_fifo_in_last;
wire [31:0] subfragments_syncfifo3_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo3_fifo_out_payload_len;
wire subfragments_syncfifo3_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo3_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo3_fifo_out_payload_cmp_id;
wire subfragments_syncfifo3_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo3_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo3_fifo_out_payload_user_id;
wire subfragments_syncfifo3_fifo_out_first;
wire subfragments_syncfifo3_fifo_out_last;
reg  subfragments_syncfifo4_sink_valid = 1'd0;
wire subfragments_syncfifo4_sink_ready;
reg  subfragments_syncfifo4_sink_first = 1'd0;
reg  subfragments_syncfifo4_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo4_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo4_sink_payload_len = 10'd0;
reg  subfragments_syncfifo4_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo4_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo4_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo4_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo4_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo4_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo4_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo4_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo4_source_valid;
reg  subfragments_syncfifo4_source_ready = 1'd0;
wire subfragments_syncfifo4_source_first;
wire subfragments_syncfifo4_source_last;
wire [31:0] subfragments_syncfifo4_source_payload_adr;
wire [9:0] subfragments_syncfifo4_source_payload_len;
wire subfragments_syncfifo4_source_payload_end;
wire [15:0] subfragments_syncfifo4_source_payload_req_id;
wire [15:0] subfragments_syncfifo4_source_payload_cmp_id;
wire subfragments_syncfifo4_source_payload_err;
wire [7:0] subfragments_syncfifo4_source_payload_tag;
wire [127:0] subfragments_syncfifo4_source_payload_dat;
wire [7:0] subfragments_syncfifo4_source_payload_channel;
wire [7:0] subfragments_syncfifo4_source_payload_user_id;
wire subfragments_syncfifo4_re;
reg  subfragments_syncfifo4_readable = 1'd0;
wire subfragments_syncfifo4_syncfifo4_we;
wire subfragments_syncfifo4_syncfifo4_writable;
wire subfragments_syncfifo4_syncfifo4_re;
wire subfragments_syncfifo4_syncfifo4_readable;
wire [229:0] subfragments_syncfifo4_syncfifo4_din;
wire [229:0] subfragments_syncfifo4_syncfifo4_dout;
reg  [7:0] subfragments_syncfifo4_level0 = 8'd0;
reg  subfragments_syncfifo4_replace = 1'd0;
reg  [6:0] subfragments_syncfifo4_produce = 7'd0;
reg  [6:0] subfragments_syncfifo4_consume = 7'd0;
reg  [6:0] subfragments_syncfifo4_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo4_wrport_dat_r;
wire subfragments_syncfifo4_wrport_we;
wire [229:0] subfragments_syncfifo4_wrport_dat_w;
wire subfragments_syncfifo4_do_read;
wire [6:0] subfragments_syncfifo4_rdport_adr;
wire [229:0] subfragments_syncfifo4_rdport_dat_r;
wire subfragments_syncfifo4_rdport_re;
wire [7:0] subfragments_syncfifo4_level1;
wire [31:0] subfragments_syncfifo4_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo4_fifo_in_payload_len;
wire subfragments_syncfifo4_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo4_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo4_fifo_in_payload_cmp_id;
wire subfragments_syncfifo4_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo4_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo4_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo4_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo4_fifo_in_payload_user_id;
wire subfragments_syncfifo4_fifo_in_first;
wire subfragments_syncfifo4_fifo_in_last;
wire [31:0] subfragments_syncfifo4_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo4_fifo_out_payload_len;
wire subfragments_syncfifo4_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo4_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo4_fifo_out_payload_cmp_id;
wire subfragments_syncfifo4_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo4_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo4_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo4_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo4_fifo_out_payload_user_id;
wire subfragments_syncfifo4_fifo_out_first;
wire subfragments_syncfifo4_fifo_out_last;
reg  subfragments_syncfifo5_sink_valid = 1'd0;
wire subfragments_syncfifo5_sink_ready;
reg  subfragments_syncfifo5_sink_first = 1'd0;
reg  subfragments_syncfifo5_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo5_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo5_sink_payload_len = 10'd0;
reg  subfragments_syncfifo5_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo5_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo5_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo5_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo5_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo5_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo5_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo5_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo5_source_valid;
reg  subfragments_syncfifo5_source_ready = 1'd0;
wire subfragments_syncfifo5_source_first;
wire subfragments_syncfifo5_source_last;
wire [31:0] subfragments_syncfifo5_source_payload_adr;
wire [9:0] subfragments_syncfifo5_source_payload_len;
wire subfragments_syncfifo5_source_payload_end;
wire [15:0] subfragments_syncfifo5_source_payload_req_id;
wire [15:0] subfragments_syncfifo5_source_payload_cmp_id;
wire subfragments_syncfifo5_source_payload_err;
wire [7:0] subfragments_syncfifo5_source_payload_tag;
wire [127:0] subfragments_syncfifo5_source_payload_dat;
wire [7:0] subfragments_syncfifo5_source_payload_channel;
wire [7:0] subfragments_syncfifo5_source_payload_user_id;
wire subfragments_syncfifo5_re;
reg  subfragments_syncfifo5_readable = 1'd0;
wire subfragments_syncfifo5_syncfifo5_we;
wire subfragments_syncfifo5_syncfifo5_writable;
wire subfragments_syncfifo5_syncfifo5_re;
wire subfragments_syncfifo5_syncfifo5_readable;
wire [229:0] subfragments_syncfifo5_syncfifo5_din;
wire [229:0] subfragments_syncfifo5_syncfifo5_dout;
reg  [7:0] subfragments_syncfifo5_level0 = 8'd0;
reg  subfragments_syncfifo5_replace = 1'd0;
reg  [6:0] subfragments_syncfifo5_produce = 7'd0;
reg  [6:0] subfragments_syncfifo5_consume = 7'd0;
reg  [6:0] subfragments_syncfifo5_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo5_wrport_dat_r;
wire subfragments_syncfifo5_wrport_we;
wire [229:0] subfragments_syncfifo5_wrport_dat_w;
wire subfragments_syncfifo5_do_read;
wire [6:0] subfragments_syncfifo5_rdport_adr;
wire [229:0] subfragments_syncfifo5_rdport_dat_r;
wire subfragments_syncfifo5_rdport_re;
wire [7:0] subfragments_syncfifo5_level1;
wire [31:0] subfragments_syncfifo5_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo5_fifo_in_payload_len;
wire subfragments_syncfifo5_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo5_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo5_fifo_in_payload_cmp_id;
wire subfragments_syncfifo5_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo5_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo5_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo5_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo5_fifo_in_payload_user_id;
wire subfragments_syncfifo5_fifo_in_first;
wire subfragments_syncfifo5_fifo_in_last;
wire [31:0] subfragments_syncfifo5_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo5_fifo_out_payload_len;
wire subfragments_syncfifo5_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo5_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo5_fifo_out_payload_cmp_id;
wire subfragments_syncfifo5_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo5_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo5_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo5_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo5_fifo_out_payload_user_id;
wire subfragments_syncfifo5_fifo_out_first;
wire subfragments_syncfifo5_fifo_out_last;
reg  subfragments_syncfifo6_sink_valid = 1'd0;
wire subfragments_syncfifo6_sink_ready;
reg  subfragments_syncfifo6_sink_first = 1'd0;
reg  subfragments_syncfifo6_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo6_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo6_sink_payload_len = 10'd0;
reg  subfragments_syncfifo6_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo6_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo6_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo6_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo6_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo6_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo6_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo6_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo6_source_valid;
reg  subfragments_syncfifo6_source_ready = 1'd0;
wire subfragments_syncfifo6_source_first;
wire subfragments_syncfifo6_source_last;
wire [31:0] subfragments_syncfifo6_source_payload_adr;
wire [9:0] subfragments_syncfifo6_source_payload_len;
wire subfragments_syncfifo6_source_payload_end;
wire [15:0] subfragments_syncfifo6_source_payload_req_id;
wire [15:0] subfragments_syncfifo6_source_payload_cmp_id;
wire subfragments_syncfifo6_source_payload_err;
wire [7:0] subfragments_syncfifo6_source_payload_tag;
wire [127:0] subfragments_syncfifo6_source_payload_dat;
wire [7:0] subfragments_syncfifo6_source_payload_channel;
wire [7:0] subfragments_syncfifo6_source_payload_user_id;
wire subfragments_syncfifo6_re;
reg  subfragments_syncfifo6_readable = 1'd0;
wire subfragments_syncfifo6_syncfifo6_we;
wire subfragments_syncfifo6_syncfifo6_writable;
wire subfragments_syncfifo6_syncfifo6_re;
wire subfragments_syncfifo6_syncfifo6_readable;
wire [229:0] subfragments_syncfifo6_syncfifo6_din;
wire [229:0] subfragments_syncfifo6_syncfifo6_dout;
reg  [7:0] subfragments_syncfifo6_level0 = 8'd0;
reg  subfragments_syncfifo6_replace = 1'd0;
reg  [6:0] subfragments_syncfifo6_produce = 7'd0;
reg  [6:0] subfragments_syncfifo6_consume = 7'd0;
reg  [6:0] subfragments_syncfifo6_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo6_wrport_dat_r;
wire subfragments_syncfifo6_wrport_we;
wire [229:0] subfragments_syncfifo6_wrport_dat_w;
wire subfragments_syncfifo6_do_read;
wire [6:0] subfragments_syncfifo6_rdport_adr;
wire [229:0] subfragments_syncfifo6_rdport_dat_r;
wire subfragments_syncfifo6_rdport_re;
wire [7:0] subfragments_syncfifo6_level1;
wire [31:0] subfragments_syncfifo6_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo6_fifo_in_payload_len;
wire subfragments_syncfifo6_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo6_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo6_fifo_in_payload_cmp_id;
wire subfragments_syncfifo6_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo6_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo6_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo6_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo6_fifo_in_payload_user_id;
wire subfragments_syncfifo6_fifo_in_first;
wire subfragments_syncfifo6_fifo_in_last;
wire [31:0] subfragments_syncfifo6_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo6_fifo_out_payload_len;
wire subfragments_syncfifo6_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo6_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo6_fifo_out_payload_cmp_id;
wire subfragments_syncfifo6_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo6_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo6_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo6_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo6_fifo_out_payload_user_id;
wire subfragments_syncfifo6_fifo_out_first;
wire subfragments_syncfifo6_fifo_out_last;
reg  subfragments_syncfifo7_sink_valid = 1'd0;
wire subfragments_syncfifo7_sink_ready;
reg  subfragments_syncfifo7_sink_first = 1'd0;
reg  subfragments_syncfifo7_sink_last = 1'd0;
reg  [31:0] subfragments_syncfifo7_sink_payload_adr = 32'd0;
reg  [9:0] subfragments_syncfifo7_sink_payload_len = 10'd0;
reg  subfragments_syncfifo7_sink_payload_end = 1'd0;
reg  [15:0] subfragments_syncfifo7_sink_payload_req_id = 16'd0;
reg  [15:0] subfragments_syncfifo7_sink_payload_cmp_id = 16'd0;
reg  subfragments_syncfifo7_sink_payload_err = 1'd0;
reg  [7:0] subfragments_syncfifo7_sink_payload_tag = 8'd0;
reg  [127:0] subfragments_syncfifo7_sink_payload_dat = 128'd0;
reg  [7:0] subfragments_syncfifo7_sink_payload_channel = 8'd0;
reg  [7:0] subfragments_syncfifo7_sink_payload_user_id = 8'd0;
wire subfragments_syncfifo7_source_valid;
reg  subfragments_syncfifo7_source_ready = 1'd0;
wire subfragments_syncfifo7_source_first;
wire subfragments_syncfifo7_source_last;
wire [31:0] subfragments_syncfifo7_source_payload_adr;
wire [9:0] subfragments_syncfifo7_source_payload_len;
wire subfragments_syncfifo7_source_payload_end;
wire [15:0] subfragments_syncfifo7_source_payload_req_id;
wire [15:0] subfragments_syncfifo7_source_payload_cmp_id;
wire subfragments_syncfifo7_source_payload_err;
wire [7:0] subfragments_syncfifo7_source_payload_tag;
wire [127:0] subfragments_syncfifo7_source_payload_dat;
wire [7:0] subfragments_syncfifo7_source_payload_channel;
wire [7:0] subfragments_syncfifo7_source_payload_user_id;
wire subfragments_syncfifo7_re;
reg  subfragments_syncfifo7_readable = 1'd0;
wire subfragments_syncfifo7_syncfifo7_we;
wire subfragments_syncfifo7_syncfifo7_writable;
wire subfragments_syncfifo7_syncfifo7_re;
wire subfragments_syncfifo7_syncfifo7_readable;
wire [229:0] subfragments_syncfifo7_syncfifo7_din;
wire [229:0] subfragments_syncfifo7_syncfifo7_dout;
reg  [7:0] subfragments_syncfifo7_level0 = 8'd0;
reg  subfragments_syncfifo7_replace = 1'd0;
reg  [6:0] subfragments_syncfifo7_produce = 7'd0;
reg  [6:0] subfragments_syncfifo7_consume = 7'd0;
reg  [6:0] subfragments_syncfifo7_wrport_adr = 7'd0;
wire [229:0] subfragments_syncfifo7_wrport_dat_r;
wire subfragments_syncfifo7_wrport_we;
wire [229:0] subfragments_syncfifo7_wrport_dat_w;
wire subfragments_syncfifo7_do_read;
wire [6:0] subfragments_syncfifo7_rdport_adr;
wire [229:0] subfragments_syncfifo7_rdport_dat_r;
wire subfragments_syncfifo7_rdport_re;
wire [7:0] subfragments_syncfifo7_level1;
wire [31:0] subfragments_syncfifo7_fifo_in_payload_adr;
wire [9:0] subfragments_syncfifo7_fifo_in_payload_len;
wire subfragments_syncfifo7_fifo_in_payload_end;
wire [15:0] subfragments_syncfifo7_fifo_in_payload_req_id;
wire [15:0] subfragments_syncfifo7_fifo_in_payload_cmp_id;
wire subfragments_syncfifo7_fifo_in_payload_err;
wire [7:0] subfragments_syncfifo7_fifo_in_payload_tag;
wire [127:0] subfragments_syncfifo7_fifo_in_payload_dat;
wire [7:0] subfragments_syncfifo7_fifo_in_payload_channel;
wire [7:0] subfragments_syncfifo7_fifo_in_payload_user_id;
wire subfragments_syncfifo7_fifo_in_first;
wire subfragments_syncfifo7_fifo_in_last;
wire [31:0] subfragments_syncfifo7_fifo_out_payload_adr;
wire [9:0] subfragments_syncfifo7_fifo_out_payload_len;
wire subfragments_syncfifo7_fifo_out_payload_end;
wire [15:0] subfragments_syncfifo7_fifo_out_payload_req_id;
wire [15:0] subfragments_syncfifo7_fifo_out_payload_cmp_id;
wire subfragments_syncfifo7_fifo_out_payload_err;
wire [7:0] subfragments_syncfifo7_fifo_out_payload_tag;
wire [127:0] subfragments_syncfifo7_fifo_out_payload_dat;
wire [7:0] subfragments_syncfifo7_fifo_out_payload_channel;
wire [7:0] subfragments_syncfifo7_fifo_out_payload_user_id;
wire subfragments_syncfifo7_fifo_out_first;
wire subfragments_syncfifo7_fifo_out_last;
reg  [2:0] subfragments_fill_tag = 3'd0;
wire subfragments_m_dispatcher_sel0;
wire subfragments_sink_valid;
reg  subfragments_sink_ready = 1'd0;
wire subfragments_sink_first;
wire subfragments_sink_last;
wire subfragments_sink_payload_we;
wire [31:0] subfragments_sink_payload_adr;
wire [9:0] subfragments_sink_payload_len;
wire [15:0] subfragments_sink_payload_req_id;
wire [7:0] subfragments_sink_payload_tag;
wire [127:0] subfragments_sink_payload_dat;
wire [7:0] subfragments_sink_payload_channel;
wire [7:0] subfragments_sink_payload_user_id;
reg  subfragments_source_valid = 1'd0;
wire subfragments_source_ready;
reg  subfragments_source_first = 1'd0;
reg  subfragments_source_last = 1'd0;
reg  [31:0] subfragments_source_payload_adr = 32'd0;
reg  [9:0] subfragments_source_payload_len = 10'd0;
reg  subfragments_source_payload_end = 1'd0;
reg  [15:0] subfragments_source_payload_req_id = 16'd0;
reg  [15:0] subfragments_source_payload_cmp_id = 16'd0;
reg  subfragments_source_payload_err = 1'd0;
reg  [7:0] subfragments_source_payload_tag = 8'd0;
reg  [127:0] subfragments_source_payload_dat = 128'd0;
reg  [7:0] subfragments_source_payload_channel = 8'd0;
reg  [7:0] subfragments_source_payload_user_id = 8'd0;
wire subfragments_m_dispatcher_sel1;
reg  [1:0] subfragments_request = 2'd0;
reg  subfragments_grant = 1'd0;
reg  subfragments_status0_first = 1'd1;
reg  subfragments_status0_last = 1'd0;
wire subfragments_status0_ongoing0;
reg  subfragments_status0_ongoing1 = 1'd0;
reg  subfragments_status1_first = 1'd1;
reg  subfragments_status1_last = 1'd0;
wire subfragments_status1_ongoing0;
reg  subfragments_status1_ongoing1 = 1'd0;
reg  [1:0] subfragments_fsm0_state = 2'd0;
reg  [1:0] subfragments_fsm0_next_state = 2'd0;
reg  [1:0] subfragments_fsm1_state = 2'd0;
reg  [1:0] subfragments_fsm1_next_state = 2'd0;
reg  [2:0] subfragments_fill_tag_litepciecrossbar_next_value = 3'd0;
reg  subfragments_fill_tag_litepciecrossbar_next_value_ce = 1'd0;
reg  [1:0] subfragments_litepciewishbonemaster_state = 2'd0;
reg  [1:0] subfragments_litepciewishbonemaster_next_state = 2'd0;
reg  subfragments_litepciedmawriter_bufferizeendpoints_state = 1'd0;
reg  subfragments_litepciedmawriter_bufferizeendpoints_next_state = 1'd0;
reg  [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value0 = 32'd0;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value_ce0 = 1'd0;
reg  [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value1 = 32'd0;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value_ce1 = 1'd0;
reg  [31:0] basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value2 = 32'd0;
reg  basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value_ce2 = 1'd0;
reg  subfragments_litepciedmawriter_fsm_state = 1'd0;
reg  subfragments_litepciedmawriter_fsm_next_state = 1'd0;
reg  [23:0] basesoc_writer_req_count_litepciedma_fsm_next_value = 24'd0;
reg  basesoc_writer_req_count_litepciedma_fsm_next_value_ce = 1'd0;
reg  subfragments_litepciedmareader_bufferizeendpoints_state = 1'd0;
reg  subfragments_litepciedmareader_bufferizeendpoints_next_state = 1'd0;
reg  [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value0 = 32'd0;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value_ce0 = 1'd0;
reg  [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value1 = 32'd0;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value_ce1 = 1'd0;
reg  [31:0] basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value2 = 32'd0;
reg  basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value_ce2 = 1'd0;
reg  subfragments_litepciedmareader_fsm_state = 1'd0;
reg  subfragments_litepciedmareader_fsm_next_state = 1'd0;
reg  [2:0] subfragments_resetinserter_state = 3'd0;
reg  [2:0] subfragments_resetinserter_next_state = 3'd0;
reg  [3:0] icap_count_icap_next_value0 = 4'd0;
reg  icap_count_icap_next_value_ce0 = 1'd0;
reg  [31:0] icap_read_data_icap_next_value1 = 32'd0;
reg  icap_read_data_icap_next_value_ce1 = 1'd0;
reg  subfragments_fsm_state = 1'd0;
reg  subfragments_fsm_next_state = 1'd0;
reg  [1:0] subfragments_s7spiflash_state = 2'd0;
reg  [1:0] subfragments_s7spiflash_next_state = 2'd0;
reg  [5:0] flash_count_s7spiflash_next_value = 6'd0;
reg  flash_count_s7spiflash_next_value_ce = 1'd0;
reg  [13:0] basesoc_basesoc_adr = 14'd0;
reg  basesoc_basesoc_we = 1'd0;
reg  [31:0] basesoc_basesoc_dat_w = 32'd0;
wire [31:0] basesoc_basesoc_dat_r;
wire [29:0] basesoc_basesoc_wishbone_adr;
wire [31:0] basesoc_basesoc_wishbone_dat_w;
reg  [31:0] basesoc_basesoc_wishbone_dat_r = 32'd0;
wire [3:0] basesoc_basesoc_wishbone_sel;
wire basesoc_basesoc_wishbone_cyc;
wire basesoc_basesoc_wishbone_stb;
reg  basesoc_basesoc_wishbone_ack = 1'd0;
wire basesoc_basesoc_wishbone_we;
wire [2:0] basesoc_basesoc_wishbone_cti;
wire [1:0] basesoc_basesoc_wishbone_bte;
reg  basesoc_basesoc_wishbone_err = 1'd0;
wire [29:0] basesoc_shared_adr;
wire [31:0] basesoc_shared_dat_w;
reg  [31:0] basesoc_shared_dat_r = 32'd0;
wire [3:0] basesoc_shared_sel;
wire basesoc_shared_cyc;
wire basesoc_shared_stb;
reg  basesoc_shared_ack = 1'd0;
wire basesoc_shared_we;
wire [2:0] basesoc_shared_cti;
wire [1:0] basesoc_shared_bte;
wire basesoc_shared_err;
wire [2:0] basesoc_request;
reg  [1:0] basesoc_grant = 2'd0;
reg  [3:0] basesoc_slave_sel = 4'd0;
reg  [3:0] basesoc_slave_sel_r = 4'd0;
reg  basesoc_error = 1'd0;
wire basesoc_wait;
wire basesoc_done;
reg  [19:0] basesoc_count = 20'd1000000;
wire [13:0] basesoc_csr_bankarray_interface0_bank_bus_adr;
wire basesoc_csr_bankarray_interface0_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface0_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank0_reset0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank0_reset0_r;
reg  basesoc_csr_bankarray_csrbank0_reset0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank0_reset0_w;
reg  basesoc_csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_scratch0_r;
reg  basesoc_csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_scratch0_w;
reg  basesoc_csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_bus_errors_r;
reg  basesoc_csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank0_bus_errors_w;
wire basesoc_csr_bankarray_csrbank0_sel;
wire [13:0] basesoc_csr_bankarray_interface1_bank_bus_adr;
wire basesoc_csr_bankarray_interface1_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface1_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank1_rst0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank1_rst0_r;
reg  basesoc_csr_bankarray_csrbank1_rst0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank1_rst0_w;
reg  basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_re = 1'd0;
wire [4:0] basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_r;
reg  basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_we = 1'd0;
wire [4:0] basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_w;
reg  basesoc_csr_bankarray_csrbank1_wlevel_en0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank1_wlevel_en0_r;
reg  basesoc_csr_bankarray_csrbank1_wlevel_en0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank1_wlevel_en0_w;
reg  basesoc_csr_bankarray_csrbank1_dly_sel0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank1_dly_sel0_r;
reg  basesoc_csr_bankarray_csrbank1_dly_sel0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank1_dly_sel0_w;
reg  basesoc_csr_bankarray_csrbank1_rdphase0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank1_rdphase0_r;
reg  basesoc_csr_bankarray_csrbank1_rdphase0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank1_rdphase0_w;
reg  basesoc_csr_bankarray_csrbank1_wrphase0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank1_wrphase0_r;
reg  basesoc_csr_bankarray_csrbank1_wrphase0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank1_wrphase0_w;
wire basesoc_csr_bankarray_csrbank1_sel;
wire [13:0] basesoc_csr_bankarray_interface2_bank_bus_adr;
wire basesoc_csr_bankarray_interface2_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface2_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank2_spi_control0_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank2_spi_control0_r;
reg  basesoc_csr_bankarray_csrbank2_spi_control0_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank2_spi_control0_w;
reg  basesoc_csr_bankarray_csrbank2_spi_status_re = 1'd0;
wire basesoc_csr_bankarray_csrbank2_spi_status_r;
reg  basesoc_csr_bankarray_csrbank2_spi_status_we = 1'd0;
wire basesoc_csr_bankarray_csrbank2_spi_status_w;
reg  basesoc_csr_bankarray_csrbank2_spi_mosi1_re = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_spi_mosi1_r;
reg  basesoc_csr_bankarray_csrbank2_spi_mosi1_we = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_spi_mosi1_w;
reg  basesoc_csr_bankarray_csrbank2_spi_mosi0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank2_spi_mosi0_r;
reg  basesoc_csr_bankarray_csrbank2_spi_mosi0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank2_spi_mosi0_w;
reg  basesoc_csr_bankarray_csrbank2_spi_miso1_re = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_spi_miso1_r;
reg  basesoc_csr_bankarray_csrbank2_spi_miso1_we = 1'd0;
wire [7:0] basesoc_csr_bankarray_csrbank2_spi_miso1_w;
reg  basesoc_csr_bankarray_csrbank2_spi_miso0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank2_spi_miso0_r;
reg  basesoc_csr_bankarray_csrbank2_spi_miso0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank2_spi_miso0_w;
reg  basesoc_csr_bankarray_csrbank2_spi_cs0_re = 1'd0;
wire [16:0] basesoc_csr_bankarray_csrbank2_spi_cs0_r;
reg  basesoc_csr_bankarray_csrbank2_spi_cs0_we = 1'd0;
wire [16:0] basesoc_csr_bankarray_csrbank2_spi_cs0_w;
reg  basesoc_csr_bankarray_csrbank2_spi_loopback0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank2_spi_loopback0_r;
reg  basesoc_csr_bankarray_csrbank2_spi_loopback0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank2_spi_loopback0_w;
wire basesoc_csr_bankarray_csrbank2_sel;
wire [13:0] basesoc_csr_bankarray_interface3_bank_bus_adr;
wire basesoc_csr_bankarray_interface3_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface3_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank3_out0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank3_out0_r;
reg  basesoc_csr_bankarray_csrbank3_out0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank3_out0_w;
wire basesoc_csr_bankarray_csrbank3_sel;
wire [13:0] basesoc_csr_bankarray_interface4_bank_bus_adr;
wire basesoc_csr_bankarray_interface4_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface4_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank4_addr0_re = 1'd0;
wire [4:0] basesoc_csr_bankarray_csrbank4_addr0_r;
reg  basesoc_csr_bankarray_csrbank4_addr0_we = 1'd0;
wire [4:0] basesoc_csr_bankarray_csrbank4_addr0_w;
reg  basesoc_csr_bankarray_csrbank4_data0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_data0_r;
reg  basesoc_csr_bankarray_csrbank4_data0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank4_data0_w;
reg  basesoc_csr_bankarray_csrbank4_write0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_write0_r;
reg  basesoc_csr_bankarray_csrbank4_write0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_write0_w;
reg  basesoc_csr_bankarray_csrbank4_done_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_done_r;
reg  basesoc_csr_bankarray_csrbank4_done_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_done_w;
reg  basesoc_csr_bankarray_csrbank4_read0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank4_read0_r;
reg  basesoc_csr_bankarray_csrbank4_read0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank4_read0_w;
wire basesoc_csr_bankarray_csrbank4_sel;
wire [13:0] basesoc_csr_bankarray_sram_bus_adr;
wire basesoc_csr_bankarray_sram_bus_we;
wire [31:0] basesoc_csr_bankarray_sram_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_sram_bus_dat_r = 32'd0;
wire [5:0] basesoc_csr_bankarray_adr;
wire [7:0] basesoc_csr_bankarray_dat_r;
wire basesoc_csr_bankarray_sel;
reg  basesoc_csr_bankarray_sel_r = 1'd0;
wire [13:0] basesoc_csr_bankarray_interface5_bank_bus_adr;
wire basesoc_csr_bankarray_interface5_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface5_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank5_out0_re = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank5_out0_r;
reg  basesoc_csr_bankarray_csrbank5_out0_we = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank5_out0_w;
wire basesoc_csr_bankarray_csrbank5_sel;
wire [13:0] basesoc_csr_bankarray_interface6_bank_bus_adr;
wire basesoc_csr_bankarray_interface6_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface6_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank6_writer_enable0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_enable0_r;
reg  basesoc_csr_bankarray_csrbank6_writer_enable0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_enable0_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_value1_re = 1'd0;
wire [25:0] basesoc_csr_bankarray_csrbank6_writer_table_value1_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_value1_we = 1'd0;
wire [25:0] basesoc_csr_bankarray_csrbank6_writer_table_value1_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_value0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_writer_table_value0_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_value0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_writer_table_value0_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_we0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_table_we0_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_we0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_table_we0_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_loop_status_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_writer_table_loop_status_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_loop_status_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_writer_table_loop_status_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_level_re = 1'd0;
wire [8:0] basesoc_csr_bankarray_csrbank6_writer_table_level_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_level_we = 1'd0;
wire [8:0] basesoc_csr_bankarray_csrbank6_writer_table_level_w;
reg  basesoc_csr_bankarray_csrbank6_writer_table_reset0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_table_reset0_r;
reg  basesoc_csr_bankarray_csrbank6_writer_table_reset0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_writer_table_reset0_w;
reg  basesoc_csr_bankarray_csrbank6_reader_enable0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_enable0_r;
reg  basesoc_csr_bankarray_csrbank6_reader_enable0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_enable0_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_value1_re = 1'd0;
wire [25:0] basesoc_csr_bankarray_csrbank6_reader_table_value1_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_value1_we = 1'd0;
wire [25:0] basesoc_csr_bankarray_csrbank6_reader_table_value1_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_value0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_reader_table_value0_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_value0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_reader_table_value0_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_we0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_table_we0_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_we0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_table_we0_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_loop_status_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_reader_table_loop_status_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_loop_status_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_reader_table_loop_status_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_level_re = 1'd0;
wire [8:0] basesoc_csr_bankarray_csrbank6_reader_table_level_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_level_we = 1'd0;
wire [8:0] basesoc_csr_bankarray_csrbank6_reader_table_level_w;
reg  basesoc_csr_bankarray_csrbank6_reader_table_reset0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_table_reset0_r;
reg  basesoc_csr_bankarray_csrbank6_reader_table_reset0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_reader_table_reset0_w;
reg  basesoc_csr_bankarray_csrbank6_loopback_enable0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank6_loopback_enable0_r;
reg  basesoc_csr_bankarray_csrbank6_loopback_enable0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank6_loopback_enable0_w;
reg  basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_r;
reg  basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_w;
reg  basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_re = 1'd0;
wire [10:0] basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_r;
reg  basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_we = 1'd0;
wire [10:0] basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_w;
reg  basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_r;
reg  basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_w;
reg  basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_re = 1'd0;
wire [10:0] basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_r;
reg  basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_we = 1'd0;
wire [10:0] basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_w;
wire basesoc_csr_bankarray_csrbank6_sel;
wire [13:0] basesoc_csr_bankarray_interface7_bank_bus_adr;
wire basesoc_csr_bankarray_interface7_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface7_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank7_enable0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank7_enable0_r;
reg  basesoc_csr_bankarray_csrbank7_enable0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank7_enable0_w;
reg  basesoc_csr_bankarray_csrbank7_clear0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank7_clear0_r;
reg  basesoc_csr_bankarray_csrbank7_clear0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank7_clear0_w;
reg  basesoc_csr_bankarray_csrbank7_vector_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank7_vector_r;
reg  basesoc_csr_bankarray_csrbank7_vector_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank7_vector_w;
wire basesoc_csr_bankarray_csrbank7_sel;
wire [13:0] basesoc_csr_bankarray_interface8_bank_bus_adr;
wire basesoc_csr_bankarray_interface8_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface8_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank8_link_status_re = 1'd0;
wire [9:0] basesoc_csr_bankarray_csrbank8_link_status_r;
reg  basesoc_csr_bankarray_csrbank8_link_status_we = 1'd0;
wire [9:0] basesoc_csr_bankarray_csrbank8_link_status_w;
reg  basesoc_csr_bankarray_csrbank8_msi_enable_re = 1'd0;
wire basesoc_csr_bankarray_csrbank8_msi_enable_r;
reg  basesoc_csr_bankarray_csrbank8_msi_enable_we = 1'd0;
wire basesoc_csr_bankarray_csrbank8_msi_enable_w;
reg  basesoc_csr_bankarray_csrbank8_msix_enable_re = 1'd0;
wire basesoc_csr_bankarray_csrbank8_msix_enable_r;
reg  basesoc_csr_bankarray_csrbank8_msix_enable_we = 1'd0;
wire basesoc_csr_bankarray_csrbank8_msix_enable_w;
reg  basesoc_csr_bankarray_csrbank8_bus_master_enable_re = 1'd0;
wire basesoc_csr_bankarray_csrbank8_bus_master_enable_r;
reg  basesoc_csr_bankarray_csrbank8_bus_master_enable_we = 1'd0;
wire basesoc_csr_bankarray_csrbank8_bus_master_enable_w;
reg  basesoc_csr_bankarray_csrbank8_max_request_size_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank8_max_request_size_r;
reg  basesoc_csr_bankarray_csrbank8_max_request_size_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank8_max_request_size_w;
reg  basesoc_csr_bankarray_csrbank8_max_payload_size_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank8_max_payload_size_r;
reg  basesoc_csr_bankarray_csrbank8_max_payload_size_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank8_max_payload_size_w;
wire basesoc_csr_bankarray_csrbank8_sel;
wire [13:0] basesoc_csr_bankarray_interface9_bank_bus_adr;
wire basesoc_csr_bankarray_interface9_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface9_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface9_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank9_dfii_control0_re = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank9_dfii_control0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_control0_we = 1'd0;
wire [3:0] basesoc_csr_bankarray_csrbank9_dfii_control0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_re = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_we = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_re = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_we = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_re = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_we = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_re = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_we = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_re = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_we = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_re = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_we = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_re = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_we = 1'd0;
wire [5:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_re = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_we = 1'd0;
wire [15:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_re = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_we = 1'd0;
wire [2:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_w;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_r;
reg  basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_w;
wire basesoc_csr_bankarray_csrbank9_sel;
wire [13:0] basesoc_csr_bankarray_interface10_bank_bus_adr;
wire basesoc_csr_bankarray_interface10_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface10_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface10_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank10_load0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank10_load0_r;
reg  basesoc_csr_bankarray_csrbank10_load0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank10_load0_w;
reg  basesoc_csr_bankarray_csrbank10_reload0_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank10_reload0_r;
reg  basesoc_csr_bankarray_csrbank10_reload0_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank10_reload0_w;
reg  basesoc_csr_bankarray_csrbank10_en0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank10_en0_r;
reg  basesoc_csr_bankarray_csrbank10_en0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank10_en0_w;
reg  basesoc_csr_bankarray_csrbank10_update_value0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank10_update_value0_r;
reg  basesoc_csr_bankarray_csrbank10_update_value0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank10_update_value0_w;
reg  basesoc_csr_bankarray_csrbank10_value_re = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank10_value_r;
reg  basesoc_csr_bankarray_csrbank10_value_we = 1'd0;
wire [31:0] basesoc_csr_bankarray_csrbank10_value_w;
reg  basesoc_csr_bankarray_csrbank10_ev_status_re = 1'd0;
wire basesoc_csr_bankarray_csrbank10_ev_status_r;
reg  basesoc_csr_bankarray_csrbank10_ev_status_we = 1'd0;
wire basesoc_csr_bankarray_csrbank10_ev_status_w;
reg  basesoc_csr_bankarray_csrbank10_ev_pending_re = 1'd0;
wire basesoc_csr_bankarray_csrbank10_ev_pending_r;
reg  basesoc_csr_bankarray_csrbank10_ev_pending_we = 1'd0;
wire basesoc_csr_bankarray_csrbank10_ev_pending_w;
reg  basesoc_csr_bankarray_csrbank10_ev_enable0_re = 1'd0;
wire basesoc_csr_bankarray_csrbank10_ev_enable0_r;
reg  basesoc_csr_bankarray_csrbank10_ev_enable0_we = 1'd0;
wire basesoc_csr_bankarray_csrbank10_ev_enable0_w;
wire basesoc_csr_bankarray_csrbank10_sel;
wire [13:0] basesoc_csr_bankarray_interface11_bank_bus_adr;
wire basesoc_csr_bankarray_interface11_bank_bus_we;
wire [31:0] basesoc_csr_bankarray_interface11_bank_bus_dat_w;
reg  [31:0] basesoc_csr_bankarray_interface11_bank_bus_dat_r = 32'd0;
reg  basesoc_csr_bankarray_csrbank11_txfull_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_txfull_r;
reg  basesoc_csr_bankarray_csrbank11_txfull_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_txfull_w;
reg  basesoc_csr_bankarray_csrbank11_rxempty_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_rxempty_r;
reg  basesoc_csr_bankarray_csrbank11_rxempty_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_rxempty_w;
reg  basesoc_csr_bankarray_csrbank11_ev_status_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_ev_status_r;
reg  basesoc_csr_bankarray_csrbank11_ev_status_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_ev_status_w;
reg  basesoc_csr_bankarray_csrbank11_ev_pending_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_ev_pending_r;
reg  basesoc_csr_bankarray_csrbank11_ev_pending_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_ev_pending_w;
reg  basesoc_csr_bankarray_csrbank11_ev_enable0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_ev_enable0_r;
reg  basesoc_csr_bankarray_csrbank11_ev_enable0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_ev_enable0_w;
reg  basesoc_csr_bankarray_csrbank11_txempty_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_txempty_r;
reg  basesoc_csr_bankarray_csrbank11_txempty_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_txempty_w;
reg  basesoc_csr_bankarray_csrbank11_rxfull_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_rxfull_r;
reg  basesoc_csr_bankarray_csrbank11_rxfull_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_rxfull_w;
reg  basesoc_csr_bankarray_csrbank11_xover_txfull_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_txfull_r;
reg  basesoc_csr_bankarray_csrbank11_xover_txfull_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_txfull_w;
reg  basesoc_csr_bankarray_csrbank11_xover_rxempty_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_rxempty_r;
reg  basesoc_csr_bankarray_csrbank11_xover_rxempty_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_rxempty_w;
reg  basesoc_csr_bankarray_csrbank11_xover_ev_status_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_xover_ev_status_r;
reg  basesoc_csr_bankarray_csrbank11_xover_ev_status_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_xover_ev_status_w;
reg  basesoc_csr_bankarray_csrbank11_xover_ev_pending_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_xover_ev_pending_r;
reg  basesoc_csr_bankarray_csrbank11_xover_ev_pending_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_xover_ev_pending_w;
reg  basesoc_csr_bankarray_csrbank11_xover_ev_enable0_re = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_xover_ev_enable0_r;
reg  basesoc_csr_bankarray_csrbank11_xover_ev_enable0_we = 1'd0;
wire [1:0] basesoc_csr_bankarray_csrbank11_xover_ev_enable0_w;
reg  basesoc_csr_bankarray_csrbank11_xover_txempty_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_txempty_r;
reg  basesoc_csr_bankarray_csrbank11_xover_txempty_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_txempty_w;
reg  basesoc_csr_bankarray_csrbank11_xover_rxfull_re = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_rxfull_r;
reg  basesoc_csr_bankarray_csrbank11_xover_rxfull_we = 1'd0;
wire basesoc_csr_bankarray_csrbank11_xover_rxfull_w;
wire basesoc_csr_bankarray_csrbank11_sel;
wire [13:0] basesoc_csr_interconnect_adr;
wire basesoc_csr_interconnect_we;
wire [31:0] basesoc_csr_interconnect_dat_w;
wire [31:0] basesoc_csr_interconnect_dat_r;
reg  [1:0] basesoc_state = 2'd0;
reg  [1:0] basesoc_next_state = 2'd0;
reg  [31:0] basesoc_basesoc_dat_w_next_value0 = 32'd0;
reg  basesoc_basesoc_dat_w_next_value_ce0 = 1'd0;
reg  [13:0] basesoc_basesoc_adr_next_value1 = 14'd0;
reg  basesoc_basesoc_adr_next_value_ce1 = 1'd0;
reg  basesoc_basesoc_we_next_value2 = 1'd0;
reg  basesoc_basesoc_we_next_value_ce2 = 1'd0;
wire [4:0] slice_proxy0;
wire [4:0] slice_proxy1;
wire [31:0] slice_proxy2;
wire [31:0] slice_proxy3;
wire [31:0] slice_proxy4;
wire [31:0] slice_proxy5;
wire [31:0] slice_proxy6;
wire [31:0] slice_proxy7;
wire [31:0] slice_proxy8;
wire [31:0] slice_proxy9;
wire [31:0] slice_proxy10;
wire [31:0] slice_proxy11;
wire [31:0] slice_proxy12;
wire [31:0] slice_proxy13;
wire [31:0] slice_proxy14;
wire [31:0] slice_proxy15;
wire [31:0] slice_proxy16;
wire [31:0] slice_proxy17;
wire [3:0] slice_proxy18;
wire [3:0] slice_proxy19;
wire [3:0] slice_proxy20;
wire [3:0] slice_proxy21;
wire [3:0] slice_proxy22;
wire [3:0] slice_proxy23;
wire [3:0] slice_proxy24;
wire [3:0] slice_proxy25;
wire [3:0] slice_proxy26;
wire [3:0] slice_proxy27;
wire [3:0] slice_proxy28;
wire [3:0] slice_proxy29;
wire [3:0] slice_proxy30;
wire [3:0] slice_proxy31;
wire [3:0] slice_proxy32;
wire [3:0] slice_proxy33;
wire [31:0] t_slice_proxy0;
wire [31:0] t_slice_proxy1;
wire [31:0] t_slice_proxy2;
wire [31:0] t_slice_proxy3;
wire [3:0] t_slice_proxy4;
wire [3:0] t_slice_proxy5;
wire [3:0] t_slice_proxy6;
wire [3:0] t_slice_proxy7;
wire [31:0] rhs_slice_proxy0;
wire [31:0] rhs_slice_proxy1;
wire [31:0] rhs_slice_proxy2;
wire [31:0] rhs_slice_proxy3;
wire [31:0] rhs_slice_proxy4;
wire [31:0] rhs_slice_proxy5;
wire [31:0] rhs_slice_proxy6;
wire [31:0] rhs_slice_proxy7;
wire [31:0] rhs_slice_proxy8;
wire [31:0] rhs_slice_proxy9;
wire [31:0] rhs_slice_proxy10;
wire [31:0] rhs_slice_proxy11;
wire [31:0] rhs_slice_proxy12;
wire [31:0] rhs_slice_proxy13;
wire [31:0] rhs_slice_proxy14;
wire [31:0] rhs_slice_proxy15;
wire [7:0] slice_proxy34;
wire [7:0] slice_proxy35;
wire [7:0] slice_proxy36;
wire [7:0] slice_proxy37;
wire [7:0] slice_proxy38;
wire [7:0] slice_proxy39;
wire [7:0] slice_proxy40;
wire [7:0] slice_proxy41;
wire [7:0] slice_proxy42;
wire [7:0] slice_proxy43;
wire [7:0] slice_proxy44;
wire [7:0] slice_proxy45;
wire [7:0] slice_proxy46;
wire [7:0] slice_proxy47;
wire [7:0] slice_proxy48;
wire [7:0] slice_proxy49;
wire [7:0] slice_proxy50;
wire [7:0] slice_proxy51;
wire [7:0] slice_proxy52;
wire [7:0] slice_proxy53;
wire [7:0] slice_proxy54;
wire [7:0] slice_proxy55;
wire [7:0] slice_proxy56;
wire [7:0] slice_proxy57;
wire [7:0] slice_proxy58;
wire [7:0] slice_proxy59;
wire [7:0] slice_proxy60;
wire [7:0] slice_proxy61;
wire [7:0] slice_proxy62;
wire [7:0] slice_proxy63;
wire [7:0] slice_proxy64;
wire [7:0] slice_proxy65;
wire [7:0] slice_proxy66;
wire [7:0] slice_proxy67;
wire [7:0] slice_proxy68;
wire [7:0] slice_proxy69;
wire [7:0] slice_proxy70;
wire [7:0] slice_proxy71;
wire [7:0] slice_proxy72;
wire [7:0] slice_proxy73;
wire [7:0] slice_proxy74;
wire [7:0] slice_proxy75;
wire [7:0] slice_proxy76;
wire [7:0] slice_proxy77;
wire [7:0] slice_proxy78;
wire [7:0] slice_proxy79;
wire [7:0] slice_proxy80;
wire [7:0] slice_proxy81;
wire [7:0] slice_proxy82;
wire [7:0] slice_proxy83;
wire [7:0] slice_proxy84;
wire [7:0] slice_proxy85;
wire [7:0] slice_proxy86;
wire [7:0] slice_proxy87;
wire [7:0] slice_proxy88;
wire [7:0] slice_proxy89;
wire [7:0] slice_proxy90;
wire [7:0] slice_proxy91;
wire [7:0] slice_proxy92;
wire [7:0] slice_proxy93;
wire [7:0] slice_proxy94;
wire [7:0] slice_proxy95;
wire [7:0] slice_proxy96;
wire [7:0] slice_proxy97;
reg  comb_rhs_array_muxed0 = 1'd0;
reg  [15:0] comb_rhs_array_muxed1 = 16'd0;
reg  [2:0] comb_rhs_array_muxed2 = 3'd0;
reg  comb_rhs_array_muxed3 = 1'd0;
reg  comb_rhs_array_muxed4 = 1'd0;
reg  comb_rhs_array_muxed5 = 1'd0;
reg  comb_t_array_muxed0 = 1'd0;
reg  comb_t_array_muxed1 = 1'd0;
reg  comb_t_array_muxed2 = 1'd0;
reg  comb_rhs_array_muxed6 = 1'd0;
reg  [15:0] comb_rhs_array_muxed7 = 16'd0;
reg  [2:0] comb_rhs_array_muxed8 = 3'd0;
reg  comb_rhs_array_muxed9 = 1'd0;
reg  comb_rhs_array_muxed10 = 1'd0;
reg  comb_rhs_array_muxed11 = 1'd0;
reg  comb_t_array_muxed3 = 1'd0;
reg  comb_t_array_muxed4 = 1'd0;
reg  comb_t_array_muxed5 = 1'd0;
reg  [22:0] comb_rhs_array_muxed12 = 23'd0;
reg  comb_rhs_array_muxed13 = 1'd0;
reg  comb_rhs_array_muxed14 = 1'd0;
reg  [22:0] comb_rhs_array_muxed15 = 23'd0;
reg  comb_rhs_array_muxed16 = 1'd0;
reg  comb_rhs_array_muxed17 = 1'd0;
reg  [22:0] comb_rhs_array_muxed18 = 23'd0;
reg  comb_rhs_array_muxed19 = 1'd0;
reg  comb_rhs_array_muxed20 = 1'd0;
reg  [22:0] comb_rhs_array_muxed21 = 23'd0;
reg  comb_rhs_array_muxed22 = 1'd0;
reg  comb_rhs_array_muxed23 = 1'd0;
reg  [22:0] comb_rhs_array_muxed24 = 23'd0;
reg  comb_rhs_array_muxed25 = 1'd0;
reg  comb_rhs_array_muxed26 = 1'd0;
reg  [22:0] comb_rhs_array_muxed27 = 23'd0;
reg  comb_rhs_array_muxed28 = 1'd0;
reg  comb_rhs_array_muxed29 = 1'd0;
reg  [22:0] comb_rhs_array_muxed30 = 23'd0;
reg  comb_rhs_array_muxed31 = 1'd0;
reg  comb_rhs_array_muxed32 = 1'd0;
reg  [22:0] comb_rhs_array_muxed33 = 23'd0;
reg  comb_rhs_array_muxed34 = 1'd0;
reg  comb_rhs_array_muxed35 = 1'd0;
reg  [29:0] comb_rhs_array_muxed36 = 30'd0;
reg  [31:0] comb_rhs_array_muxed37 = 32'd0;
reg  [3:0] comb_rhs_array_muxed38 = 4'd0;
reg  comb_rhs_array_muxed39 = 1'd0;
reg  comb_rhs_array_muxed40 = 1'd0;
reg  comb_rhs_array_muxed41 = 1'd0;
reg  [2:0] comb_rhs_array_muxed42 = 3'd0;
reg  [1:0] comb_rhs_array_muxed43 = 2'd0;
reg  [2:0] sync_rhs_array_muxed0 = 3'd0;
reg  [15:0] sync_rhs_array_muxed1 = 16'd0;
reg  sync_rhs_array_muxed2 = 1'd0;
reg  sync_rhs_array_muxed3 = 1'd0;
reg  sync_rhs_array_muxed4 = 1'd0;
reg  sync_rhs_array_muxed5 = 1'd0;
reg  sync_rhs_array_muxed6 = 1'd0;
reg  [2:0] sync_rhs_array_muxed7 = 3'd0;
reg  [15:0] sync_rhs_array_muxed8 = 16'd0;
reg  sync_rhs_array_muxed9 = 1'd0;
reg  sync_rhs_array_muxed10 = 1'd0;
reg  sync_rhs_array_muxed11 = 1'd0;
reg  sync_rhs_array_muxed12 = 1'd0;
reg  sync_rhs_array_muxed13 = 1'd0;
reg  [2:0] sync_rhs_array_muxed14 = 3'd0;
reg  [15:0] sync_rhs_array_muxed15 = 16'd0;
reg  sync_rhs_array_muxed16 = 1'd0;
reg  sync_rhs_array_muxed17 = 1'd0;
reg  sync_rhs_array_muxed18 = 1'd0;
reg  sync_rhs_array_muxed19 = 1'd0;
reg  sync_rhs_array_muxed20 = 1'd0;
reg  [2:0] sync_rhs_array_muxed21 = 3'd0;
reg  [15:0] sync_rhs_array_muxed22 = 16'd0;
reg  sync_rhs_array_muxed23 = 1'd0;
reg  sync_rhs_array_muxed24 = 1'd0;
reg  sync_rhs_array_muxed25 = 1'd0;
reg  sync_rhs_array_muxed26 = 1'd0;
reg  sync_rhs_array_muxed27 = 1'd0;
reg  sync_f_array_muxed = 1'd0;
wire xilinxasyncresetsynchronizerimpl0;
wire xilinxasyncresetsynchronizerimpl0_rst_meta;
wire xilinxasyncresetsynchronizerimpl1;
wire xilinxasyncresetsynchronizerimpl1_rst_meta;
wire xilinxasyncresetsynchronizerimpl1_expr;
wire xilinxasyncresetsynchronizerimpl2;
wire xilinxasyncresetsynchronizerimpl2_rst_meta;
wire xilinxasyncresetsynchronizerimpl2_expr;
wire xilinxasyncresetsynchronizerimpl3;
wire xilinxasyncresetsynchronizerimpl3_rst_meta;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl0_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl0_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl1_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl1_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl2_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl2_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl3_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl3_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl4_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl4_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl5_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [2:0] xilinxmultiregimpl5_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  xilinxmultiregimpl6_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *) reg  xilinxmultiregimpl6_regs1 = 1'd0;
wire xilinxmultiregimpl6;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [15:0] xilinxmultiregimpl7_regs0 = 16'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [15:0] xilinxmultiregimpl7_regs1 = 16'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg  [15:0] xilinxmultiregimpl8_regs0 = 16'd0;
(* async_reg = "true", dont_touch = "true" *) reg  [15:0] xilinxmultiregimpl8_regs1 = 16'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign basesoc_basesoc_reset = (basesoc_basesoc_soc_rst | basesoc_basesoc_cpu_rst);
assign s7pciephy_msi_valid = basesoc_msi_source_valid;
assign basesoc_msi_source_ready = s7pciephy_msi_ready;
assign s7pciephy_msi_first = basesoc_msi_source_first;
assign s7pciephy_msi_last = basesoc_msi_source_last;
assign s7pciephy_msi_payload_dat = basesoc_msi_source_payload_dat;
always @(*) begin
	basesoc_msi_irqs <= 32'd0;
	basesoc_msi_irqs[0] <= basesoc_reader_irq;
	basesoc_msi_irqs[1] <= basesoc_writer_irq;
end
assign crg_rst = basesoc_basesoc_soc_rst;
assign basesoc_basesoc_bus_error = basesoc_error;
always @(*) begin
	basesoc_basesoc_interrupt <= 32'd0;
	basesoc_basesoc_interrupt[1] <= basesoc_basesoc_irq;
	basesoc_basesoc_interrupt[0] <= basesoc_basesoc_uartcrossover_irq;
end
assign basesoc_basesoc_bus_errors_status = basesoc_basesoc_bus_errors;
assign basesoc_basesoc_basesoc_adr = basesoc_basesoc_basesoc_ram_bus_adr[14:0];
assign basesoc_basesoc_basesoc_ram_bus_dat_r = basesoc_basesoc_basesoc_dat_r;
always @(*) begin
	basesoc_basesoc_ram_we <= 4'd0;
	basesoc_basesoc_ram_we[0] <= (((basesoc_basesoc_ram_bus_ram_bus_cyc & basesoc_basesoc_ram_bus_ram_bus_stb) & basesoc_basesoc_ram_bus_ram_bus_we) & basesoc_basesoc_ram_bus_ram_bus_sel[0]);
	basesoc_basesoc_ram_we[1] <= (((basesoc_basesoc_ram_bus_ram_bus_cyc & basesoc_basesoc_ram_bus_ram_bus_stb) & basesoc_basesoc_ram_bus_ram_bus_we) & basesoc_basesoc_ram_bus_ram_bus_sel[1]);
	basesoc_basesoc_ram_we[2] <= (((basesoc_basesoc_ram_bus_ram_bus_cyc & basesoc_basesoc_ram_bus_ram_bus_stb) & basesoc_basesoc_ram_bus_ram_bus_we) & basesoc_basesoc_ram_bus_ram_bus_sel[2]);
	basesoc_basesoc_ram_we[3] <= (((basesoc_basesoc_ram_bus_ram_bus_cyc & basesoc_basesoc_ram_bus_ram_bus_stb) & basesoc_basesoc_ram_bus_ram_bus_we) & basesoc_basesoc_ram_bus_ram_bus_sel[3]);
end
assign basesoc_basesoc_ram_adr = basesoc_basesoc_ram_bus_ram_bus_adr[10:0];
assign basesoc_basesoc_ram_bus_ram_bus_dat_r = basesoc_basesoc_ram_dat_r;
assign basesoc_basesoc_ram_dat_w = basesoc_basesoc_ram_bus_ram_bus_dat_w;
assign basesoc_basesoc_uartcrossover_tx_fifo_sink_valid = basesoc_basesoc_uartcrossover_rxtx_re;
assign basesoc_basesoc_uartcrossover_tx_fifo_sink_payload_data = basesoc_basesoc_uartcrossover_rxtx_r;
assign basesoc_basesoc_uartcrossover_uartcrossover_source_valid = basesoc_basesoc_uartcrossover_tx_fifo_source_valid;
assign basesoc_basesoc_uartcrossover_tx_fifo_source_ready = basesoc_basesoc_uartcrossover_uartcrossover_source_ready;
assign basesoc_basesoc_uartcrossover_uartcrossover_source_first = basesoc_basesoc_uartcrossover_tx_fifo_source_first;
assign basesoc_basesoc_uartcrossover_uartcrossover_source_last = basesoc_basesoc_uartcrossover_tx_fifo_source_last;
assign basesoc_basesoc_uartcrossover_uartcrossover_source_payload_data = basesoc_basesoc_uartcrossover_tx_fifo_source_payload_data;
assign basesoc_basesoc_uartcrossover_txfull_status = (~basesoc_basesoc_uartcrossover_tx_fifo_sink_ready);
assign basesoc_basesoc_uartcrossover_txempty_status = (~basesoc_basesoc_uartcrossover_tx_fifo_source_valid);
assign basesoc_basesoc_uartcrossover_tx_trigger = basesoc_basesoc_uartcrossover_tx_fifo_sink_ready;
assign basesoc_basesoc_uartcrossover_rx_fifo_sink_valid = basesoc_basesoc_uartcrossover_uartcrossover_sink_valid;
assign basesoc_basesoc_uartcrossover_uartcrossover_sink_ready = basesoc_basesoc_uartcrossover_rx_fifo_sink_ready;
assign basesoc_basesoc_uartcrossover_rx_fifo_sink_first = basesoc_basesoc_uartcrossover_uartcrossover_sink_first;
assign basesoc_basesoc_uartcrossover_rx_fifo_sink_last = basesoc_basesoc_uartcrossover_uartcrossover_sink_last;
assign basesoc_basesoc_uartcrossover_rx_fifo_sink_payload_data = basesoc_basesoc_uartcrossover_uartcrossover_sink_payload_data;
assign basesoc_basesoc_uartcrossover_rxtx_w = basesoc_basesoc_uartcrossover_rx_fifo_source_payload_data;
assign basesoc_basesoc_uartcrossover_rx_fifo_source_ready = (basesoc_basesoc_uartcrossover_rx_clear | (1'd0 & basesoc_basesoc_uartcrossover_rxtx_we));
assign basesoc_basesoc_uartcrossover_rxempty_status = (~basesoc_basesoc_uartcrossover_rx_fifo_source_valid);
assign basesoc_basesoc_uartcrossover_rxfull_status = (~basesoc_basesoc_uartcrossover_rx_fifo_sink_ready);
assign basesoc_basesoc_uartcrossover_rx_trigger = basesoc_basesoc_uartcrossover_rx_fifo_source_valid;
assign basesoc_basesoc_xover_uart_sink_valid = basesoc_basesoc_uartcrossover_uartcrossover_source_valid;
assign basesoc_basesoc_uartcrossover_uartcrossover_source_ready = basesoc_basesoc_xover_uart_sink_ready;
assign basesoc_basesoc_xover_uart_sink_first = basesoc_basesoc_uartcrossover_uartcrossover_source_first;
assign basesoc_basesoc_xover_uart_sink_last = basesoc_basesoc_uartcrossover_uartcrossover_source_last;
assign basesoc_basesoc_xover_uart_sink_payload_data = basesoc_basesoc_uartcrossover_uartcrossover_source_payload_data;
assign basesoc_basesoc_uartcrossover_uartcrossover_sink_valid = basesoc_basesoc_xover_uart_source_valid;
assign basesoc_basesoc_xover_uart_source_ready = basesoc_basesoc_uartcrossover_uartcrossover_sink_ready;
assign basesoc_basesoc_uartcrossover_uartcrossover_sink_first = basesoc_basesoc_xover_uart_source_first;
assign basesoc_basesoc_uartcrossover_uartcrossover_sink_last = basesoc_basesoc_xover_uart_source_last;
assign basesoc_basesoc_uartcrossover_uartcrossover_sink_payload_data = basesoc_basesoc_xover_uart_source_payload_data;
assign basesoc_basesoc_uartcrossover_tx0 = basesoc_basesoc_uartcrossover_tx_status;
assign basesoc_basesoc_uartcrossover_tx1 = basesoc_basesoc_uartcrossover_tx_pending;
always @(*) begin
	basesoc_basesoc_uartcrossover_tx_clear <= 1'd0;
	if ((basesoc_basesoc_uartcrossover_pending_re & basesoc_basesoc_uartcrossover_pending_r[0])) begin
		basesoc_basesoc_uartcrossover_tx_clear <= 1'd1;
	end
end
assign basesoc_basesoc_uartcrossover_rx0 = basesoc_basesoc_uartcrossover_rx_status;
assign basesoc_basesoc_uartcrossover_rx1 = basesoc_basesoc_uartcrossover_rx_pending;
always @(*) begin
	basesoc_basesoc_uartcrossover_rx_clear <= 1'd0;
	if ((basesoc_basesoc_uartcrossover_pending_re & basesoc_basesoc_uartcrossover_pending_r[1])) begin
		basesoc_basesoc_uartcrossover_rx_clear <= 1'd1;
	end
end
assign basesoc_basesoc_uartcrossover_irq = ((basesoc_basesoc_uartcrossover_pending_status[0] & basesoc_basesoc_uartcrossover_enable_storage[0]) | (basesoc_basesoc_uartcrossover_pending_status[1] & basesoc_basesoc_uartcrossover_enable_storage[1]));
assign basesoc_basesoc_uartcrossover_tx_status = basesoc_basesoc_uartcrossover_tx_trigger;
assign basesoc_basesoc_uartcrossover_rx_status = basesoc_basesoc_uartcrossover_rx_trigger;
assign basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_din = {basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_last, basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_first, basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_payload_data};
assign {basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_last, basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_first, basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_payload_data} = basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_dout;
assign basesoc_basesoc_uartcrossover_tx_fifo_sink_ready = basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_writable;
assign basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_we = basesoc_basesoc_uartcrossover_tx_fifo_sink_valid;
assign basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_first = basesoc_basesoc_uartcrossover_tx_fifo_sink_first;
assign basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_last = basesoc_basesoc_uartcrossover_tx_fifo_sink_last;
assign basesoc_basesoc_uartcrossover_tx_fifo_fifo_in_payload_data = basesoc_basesoc_uartcrossover_tx_fifo_sink_payload_data;
assign basesoc_basesoc_uartcrossover_tx_fifo_source_valid = basesoc_basesoc_uartcrossover_tx_fifo_readable;
assign basesoc_basesoc_uartcrossover_tx_fifo_source_first = basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_first;
assign basesoc_basesoc_uartcrossover_tx_fifo_source_last = basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_last;
assign basesoc_basesoc_uartcrossover_tx_fifo_source_payload_data = basesoc_basesoc_uartcrossover_tx_fifo_fifo_out_payload_data;
assign basesoc_basesoc_uartcrossover_tx_fifo_re = basesoc_basesoc_uartcrossover_tx_fifo_source_ready;
assign basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_re = (basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_readable & ((~basesoc_basesoc_uartcrossover_tx_fifo_readable) | basesoc_basesoc_uartcrossover_tx_fifo_re));
assign basesoc_basesoc_uartcrossover_tx_fifo_level1 = (basesoc_basesoc_uartcrossover_tx_fifo_level0 + basesoc_basesoc_uartcrossover_tx_fifo_readable);
always @(*) begin
	basesoc_basesoc_uartcrossover_tx_fifo_wrport_adr <= 4'd0;
	if (basesoc_basesoc_uartcrossover_tx_fifo_replace) begin
		basesoc_basesoc_uartcrossover_tx_fifo_wrport_adr <= (basesoc_basesoc_uartcrossover_tx_fifo_produce - 1'd1);
	end else begin
		basesoc_basesoc_uartcrossover_tx_fifo_wrport_adr <= basesoc_basesoc_uartcrossover_tx_fifo_produce;
	end
end
assign basesoc_basesoc_uartcrossover_tx_fifo_wrport_dat_w = basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_din;
assign basesoc_basesoc_uartcrossover_tx_fifo_wrport_we = (basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_we & (basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_writable | basesoc_basesoc_uartcrossover_tx_fifo_replace));
assign basesoc_basesoc_uartcrossover_tx_fifo_do_read = (basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_readable & basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_re);
assign basesoc_basesoc_uartcrossover_tx_fifo_rdport_adr = basesoc_basesoc_uartcrossover_tx_fifo_consume;
assign basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_dout = basesoc_basesoc_uartcrossover_tx_fifo_rdport_dat_r;
assign basesoc_basesoc_uartcrossover_tx_fifo_rdport_re = basesoc_basesoc_uartcrossover_tx_fifo_do_read;
assign basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_writable = (basesoc_basesoc_uartcrossover_tx_fifo_level0 != 5'd16);
assign basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_readable = (basesoc_basesoc_uartcrossover_tx_fifo_level0 != 1'd0);
assign basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_din = {basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_last, basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_first, basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_payload_data};
assign {basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_last, basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_first, basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_payload_data} = basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_dout;
assign basesoc_basesoc_uartcrossover_rx_fifo_sink_ready = basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_writable;
assign basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_we = basesoc_basesoc_uartcrossover_rx_fifo_sink_valid;
assign basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_first = basesoc_basesoc_uartcrossover_rx_fifo_sink_first;
assign basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_last = basesoc_basesoc_uartcrossover_rx_fifo_sink_last;
assign basesoc_basesoc_uartcrossover_rx_fifo_fifo_in_payload_data = basesoc_basesoc_uartcrossover_rx_fifo_sink_payload_data;
assign basesoc_basesoc_uartcrossover_rx_fifo_source_valid = basesoc_basesoc_uartcrossover_rx_fifo_readable;
assign basesoc_basesoc_uartcrossover_rx_fifo_source_first = basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_first;
assign basesoc_basesoc_uartcrossover_rx_fifo_source_last = basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_last;
assign basesoc_basesoc_uartcrossover_rx_fifo_source_payload_data = basesoc_basesoc_uartcrossover_rx_fifo_fifo_out_payload_data;
assign basesoc_basesoc_uartcrossover_rx_fifo_re = basesoc_basesoc_uartcrossover_rx_fifo_source_ready;
assign basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_re = (basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_readable & ((~basesoc_basesoc_uartcrossover_rx_fifo_readable) | basesoc_basesoc_uartcrossover_rx_fifo_re));
assign basesoc_basesoc_uartcrossover_rx_fifo_level1 = (basesoc_basesoc_uartcrossover_rx_fifo_level0 + basesoc_basesoc_uartcrossover_rx_fifo_readable);
always @(*) begin
	basesoc_basesoc_uartcrossover_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_basesoc_uartcrossover_rx_fifo_replace) begin
		basesoc_basesoc_uartcrossover_rx_fifo_wrport_adr <= (basesoc_basesoc_uartcrossover_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_basesoc_uartcrossover_rx_fifo_wrport_adr <= basesoc_basesoc_uartcrossover_rx_fifo_produce;
	end
end
assign basesoc_basesoc_uartcrossover_rx_fifo_wrport_dat_w = basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_din;
assign basesoc_basesoc_uartcrossover_rx_fifo_wrport_we = (basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_we & (basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_writable | basesoc_basesoc_uartcrossover_rx_fifo_replace));
assign basesoc_basesoc_uartcrossover_rx_fifo_do_read = (basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_readable & basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_re);
assign basesoc_basesoc_uartcrossover_rx_fifo_rdport_adr = basesoc_basesoc_uartcrossover_rx_fifo_consume;
assign basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_dout = basesoc_basesoc_uartcrossover_rx_fifo_rdport_dat_r;
assign basesoc_basesoc_uartcrossover_rx_fifo_rdport_re = basesoc_basesoc_uartcrossover_rx_fifo_do_read;
assign basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_writable = (basesoc_basesoc_uartcrossover_rx_fifo_level0 != 5'd16);
assign basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_readable = (basesoc_basesoc_uartcrossover_rx_fifo_level0 != 1'd0);
assign basesoc_basesoc_xover_tx_fifo_sink_valid = basesoc_basesoc_xover_rxtx_re;
assign basesoc_basesoc_xover_tx_fifo_sink_payload_data = basesoc_basesoc_xover_rxtx_r;
assign basesoc_basesoc_xover_uart_source_valid = basesoc_basesoc_xover_tx_fifo_source_valid;
assign basesoc_basesoc_xover_tx_fifo_source_ready = basesoc_basesoc_xover_uart_source_ready;
assign basesoc_basesoc_xover_uart_source_first = basesoc_basesoc_xover_tx_fifo_source_first;
assign basesoc_basesoc_xover_uart_source_last = basesoc_basesoc_xover_tx_fifo_source_last;
assign basesoc_basesoc_xover_uart_source_payload_data = basesoc_basesoc_xover_tx_fifo_source_payload_data;
assign basesoc_basesoc_xover_txfull_status = (~basesoc_basesoc_xover_tx_fifo_sink_ready);
assign basesoc_basesoc_xover_txempty_status = (~basesoc_basesoc_xover_tx_fifo_source_valid);
assign basesoc_basesoc_xover_tx_trigger = basesoc_basesoc_xover_tx_fifo_sink_ready;
assign basesoc_basesoc_xover_rx_fifo_sink_valid = basesoc_basesoc_xover_uart_sink_valid;
assign basesoc_basesoc_xover_uart_sink_ready = basesoc_basesoc_xover_rx_fifo_sink_ready;
assign basesoc_basesoc_xover_rx_fifo_sink_first = basesoc_basesoc_xover_uart_sink_first;
assign basesoc_basesoc_xover_rx_fifo_sink_last = basesoc_basesoc_xover_uart_sink_last;
assign basesoc_basesoc_xover_rx_fifo_sink_payload_data = basesoc_basesoc_xover_uart_sink_payload_data;
assign basesoc_basesoc_xover_rxtx_w = basesoc_basesoc_xover_rx_fifo_source_payload_data;
assign basesoc_basesoc_xover_rx_fifo_source_ready = (basesoc_basesoc_xover_rx_clear | (1'd1 & basesoc_basesoc_xover_rxtx_we));
assign basesoc_basesoc_xover_rxempty_status = (~basesoc_basesoc_xover_rx_fifo_source_valid);
assign basesoc_basesoc_xover_rxfull_status = (~basesoc_basesoc_xover_rx_fifo_sink_ready);
assign basesoc_basesoc_xover_rx_trigger = basesoc_basesoc_xover_rx_fifo_source_valid;
assign basesoc_basesoc_xover_tx0 = basesoc_basesoc_xover_tx_status;
assign basesoc_basesoc_xover_tx1 = basesoc_basesoc_xover_tx_pending;
always @(*) begin
	basesoc_basesoc_xover_tx_clear <= 1'd0;
	if ((basesoc_basesoc_xover_pending_re & basesoc_basesoc_xover_pending_r[0])) begin
		basesoc_basesoc_xover_tx_clear <= 1'd1;
	end
end
assign basesoc_basesoc_xover_rx0 = basesoc_basesoc_xover_rx_status;
assign basesoc_basesoc_xover_rx1 = basesoc_basesoc_xover_rx_pending;
always @(*) begin
	basesoc_basesoc_xover_rx_clear <= 1'd0;
	if ((basesoc_basesoc_xover_pending_re & basesoc_basesoc_xover_pending_r[1])) begin
		basesoc_basesoc_xover_rx_clear <= 1'd1;
	end
end
assign basesoc_basesoc_xover_irq = ((basesoc_basesoc_xover_pending_status[0] & basesoc_basesoc_xover_enable_storage[0]) | (basesoc_basesoc_xover_pending_status[1] & basesoc_basesoc_xover_enable_storage[1]));
assign basesoc_basesoc_xover_tx_status = basesoc_basesoc_xover_tx_trigger;
assign basesoc_basesoc_xover_rx_status = basesoc_basesoc_xover_rx_trigger;
assign basesoc_basesoc_xover_tx_fifo_sink_ready = ((~basesoc_basesoc_xover_tx_fifo_source_valid) | basesoc_basesoc_xover_tx_fifo_source_ready);
assign basesoc_basesoc_xover_rx_fifo_syncfifo_din = {basesoc_basesoc_xover_rx_fifo_fifo_in_last, basesoc_basesoc_xover_rx_fifo_fifo_in_first, basesoc_basesoc_xover_rx_fifo_fifo_in_payload_data};
assign {basesoc_basesoc_xover_rx_fifo_fifo_out_last, basesoc_basesoc_xover_rx_fifo_fifo_out_first, basesoc_basesoc_xover_rx_fifo_fifo_out_payload_data} = basesoc_basesoc_xover_rx_fifo_syncfifo_dout;
assign basesoc_basesoc_xover_rx_fifo_sink_ready = basesoc_basesoc_xover_rx_fifo_syncfifo_writable;
assign basesoc_basesoc_xover_rx_fifo_syncfifo_we = basesoc_basesoc_xover_rx_fifo_sink_valid;
assign basesoc_basesoc_xover_rx_fifo_fifo_in_first = basesoc_basesoc_xover_rx_fifo_sink_first;
assign basesoc_basesoc_xover_rx_fifo_fifo_in_last = basesoc_basesoc_xover_rx_fifo_sink_last;
assign basesoc_basesoc_xover_rx_fifo_fifo_in_payload_data = basesoc_basesoc_xover_rx_fifo_sink_payload_data;
assign basesoc_basesoc_xover_rx_fifo_source_valid = basesoc_basesoc_xover_rx_fifo_readable;
assign basesoc_basesoc_xover_rx_fifo_source_first = basesoc_basesoc_xover_rx_fifo_fifo_out_first;
assign basesoc_basesoc_xover_rx_fifo_source_last = basesoc_basesoc_xover_rx_fifo_fifo_out_last;
assign basesoc_basesoc_xover_rx_fifo_source_payload_data = basesoc_basesoc_xover_rx_fifo_fifo_out_payload_data;
assign basesoc_basesoc_xover_rx_fifo_re = basesoc_basesoc_xover_rx_fifo_source_ready;
assign basesoc_basesoc_xover_rx_fifo_syncfifo_re = (basesoc_basesoc_xover_rx_fifo_syncfifo_readable & ((~basesoc_basesoc_xover_rx_fifo_readable) | basesoc_basesoc_xover_rx_fifo_re));
assign basesoc_basesoc_xover_rx_fifo_level1 = (basesoc_basesoc_xover_rx_fifo_level0 + basesoc_basesoc_xover_rx_fifo_readable);
always @(*) begin
	basesoc_basesoc_xover_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_basesoc_xover_rx_fifo_replace) begin
		basesoc_basesoc_xover_rx_fifo_wrport_adr <= (basesoc_basesoc_xover_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_basesoc_xover_rx_fifo_wrport_adr <= basesoc_basesoc_xover_rx_fifo_produce;
	end
end
assign basesoc_basesoc_xover_rx_fifo_wrport_dat_w = basesoc_basesoc_xover_rx_fifo_syncfifo_din;
assign basesoc_basesoc_xover_rx_fifo_wrport_we = (basesoc_basesoc_xover_rx_fifo_syncfifo_we & (basesoc_basesoc_xover_rx_fifo_syncfifo_writable | basesoc_basesoc_xover_rx_fifo_replace));
assign basesoc_basesoc_xover_rx_fifo_do_read = (basesoc_basesoc_xover_rx_fifo_syncfifo_readable & basesoc_basesoc_xover_rx_fifo_syncfifo_re);
assign basesoc_basesoc_xover_rx_fifo_rdport_adr = basesoc_basesoc_xover_rx_fifo_consume;
assign basesoc_basesoc_xover_rx_fifo_syncfifo_dout = basesoc_basesoc_xover_rx_fifo_rdport_dat_r;
assign basesoc_basesoc_xover_rx_fifo_rdport_re = basesoc_basesoc_xover_rx_fifo_do_read;
assign basesoc_basesoc_xover_rx_fifo_syncfifo_writable = (basesoc_basesoc_xover_rx_fifo_level0 != 5'd16);
assign basesoc_basesoc_xover_rx_fifo_syncfifo_readable = (basesoc_basesoc_xover_rx_fifo_level0 != 1'd0);
assign basesoc_basesoc_zero_trigger = (basesoc_basesoc_value == 1'd0);
assign basesoc_basesoc_zero0 = basesoc_basesoc_zero_status;
assign basesoc_basesoc_zero1 = basesoc_basesoc_zero_pending;
always @(*) begin
	basesoc_basesoc_zero_clear <= 1'd0;
	if ((basesoc_basesoc_pending_re & basesoc_basesoc_pending_r)) begin
		basesoc_basesoc_zero_clear <= 1'd1;
	end
end
assign basesoc_basesoc_irq = (basesoc_basesoc_pending_status & basesoc_basesoc_enable_storage);
assign basesoc_basesoc_zero_status = basesoc_basesoc_zero_trigger;
assign crg_reset = crg_rst;
assign sys_clk = crg_clkout_buf0;
assign sys4x_clk = crg_clkout_buf1;
assign sys4x_dqs_clk = crg_clkout_buf2;
assign idelay_clk = crg_clkout_buf3;
assign a7ddrphy_dqs_oe_delay_tappeddelayline = ((a7ddrphy_dqs_preamble | a7ddrphy_dqs_oe) | a7ddrphy_dqs_postamble);
assign a7ddrphy_dq_oe_delay_tappeddelayline = ((a7ddrphy_dqs_preamble | a7ddrphy_dq_oe) | a7ddrphy_dqs_postamble);
always @(*) begin
	a7ddrphy_dfi_p0_rddata <= 32'd0;
	a7ddrphy_dfi_p0_rddata[0] <= a7ddrphy_bitslip04[0];
	a7ddrphy_dfi_p0_rddata[16] <= a7ddrphy_bitslip04[1];
	a7ddrphy_dfi_p0_rddata[1] <= a7ddrphy_bitslip14[0];
	a7ddrphy_dfi_p0_rddata[17] <= a7ddrphy_bitslip14[1];
	a7ddrphy_dfi_p0_rddata[2] <= a7ddrphy_bitslip22[0];
	a7ddrphy_dfi_p0_rddata[18] <= a7ddrphy_bitslip22[1];
	a7ddrphy_dfi_p0_rddata[3] <= a7ddrphy_bitslip32[0];
	a7ddrphy_dfi_p0_rddata[19] <= a7ddrphy_bitslip32[1];
	a7ddrphy_dfi_p0_rddata[4] <= a7ddrphy_bitslip42[0];
	a7ddrphy_dfi_p0_rddata[20] <= a7ddrphy_bitslip42[1];
	a7ddrphy_dfi_p0_rddata[5] <= a7ddrphy_bitslip52[0];
	a7ddrphy_dfi_p0_rddata[21] <= a7ddrphy_bitslip52[1];
	a7ddrphy_dfi_p0_rddata[6] <= a7ddrphy_bitslip62[0];
	a7ddrphy_dfi_p0_rddata[22] <= a7ddrphy_bitslip62[1];
	a7ddrphy_dfi_p0_rddata[7] <= a7ddrphy_bitslip72[0];
	a7ddrphy_dfi_p0_rddata[23] <= a7ddrphy_bitslip72[1];
	a7ddrphy_dfi_p0_rddata[8] <= a7ddrphy_bitslip82[0];
	a7ddrphy_dfi_p0_rddata[24] <= a7ddrphy_bitslip82[1];
	a7ddrphy_dfi_p0_rddata[9] <= a7ddrphy_bitslip92[0];
	a7ddrphy_dfi_p0_rddata[25] <= a7ddrphy_bitslip92[1];
	a7ddrphy_dfi_p0_rddata[10] <= a7ddrphy_bitslip102[0];
	a7ddrphy_dfi_p0_rddata[26] <= a7ddrphy_bitslip102[1];
	a7ddrphy_dfi_p0_rddata[11] <= a7ddrphy_bitslip112[0];
	a7ddrphy_dfi_p0_rddata[27] <= a7ddrphy_bitslip112[1];
	a7ddrphy_dfi_p0_rddata[12] <= a7ddrphy_bitslip122[0];
	a7ddrphy_dfi_p0_rddata[28] <= a7ddrphy_bitslip122[1];
	a7ddrphy_dfi_p0_rddata[13] <= a7ddrphy_bitslip132[0];
	a7ddrphy_dfi_p0_rddata[29] <= a7ddrphy_bitslip132[1];
	a7ddrphy_dfi_p0_rddata[14] <= a7ddrphy_bitslip142[0];
	a7ddrphy_dfi_p0_rddata[30] <= a7ddrphy_bitslip142[1];
	a7ddrphy_dfi_p0_rddata[15] <= a7ddrphy_bitslip152[0];
	a7ddrphy_dfi_p0_rddata[31] <= a7ddrphy_bitslip152[1];
end
always @(*) begin
	a7ddrphy_dfi_p1_rddata <= 32'd0;
	a7ddrphy_dfi_p1_rddata[0] <= a7ddrphy_bitslip04[2];
	a7ddrphy_dfi_p1_rddata[16] <= a7ddrphy_bitslip04[3];
	a7ddrphy_dfi_p1_rddata[1] <= a7ddrphy_bitslip14[2];
	a7ddrphy_dfi_p1_rddata[17] <= a7ddrphy_bitslip14[3];
	a7ddrphy_dfi_p1_rddata[2] <= a7ddrphy_bitslip22[2];
	a7ddrphy_dfi_p1_rddata[18] <= a7ddrphy_bitslip22[3];
	a7ddrphy_dfi_p1_rddata[3] <= a7ddrphy_bitslip32[2];
	a7ddrphy_dfi_p1_rddata[19] <= a7ddrphy_bitslip32[3];
	a7ddrphy_dfi_p1_rddata[4] <= a7ddrphy_bitslip42[2];
	a7ddrphy_dfi_p1_rddata[20] <= a7ddrphy_bitslip42[3];
	a7ddrphy_dfi_p1_rddata[5] <= a7ddrphy_bitslip52[2];
	a7ddrphy_dfi_p1_rddata[21] <= a7ddrphy_bitslip52[3];
	a7ddrphy_dfi_p1_rddata[6] <= a7ddrphy_bitslip62[2];
	a7ddrphy_dfi_p1_rddata[22] <= a7ddrphy_bitslip62[3];
	a7ddrphy_dfi_p1_rddata[7] <= a7ddrphy_bitslip72[2];
	a7ddrphy_dfi_p1_rddata[23] <= a7ddrphy_bitslip72[3];
	a7ddrphy_dfi_p1_rddata[8] <= a7ddrphy_bitslip82[2];
	a7ddrphy_dfi_p1_rddata[24] <= a7ddrphy_bitslip82[3];
	a7ddrphy_dfi_p1_rddata[9] <= a7ddrphy_bitslip92[2];
	a7ddrphy_dfi_p1_rddata[25] <= a7ddrphy_bitslip92[3];
	a7ddrphy_dfi_p1_rddata[10] <= a7ddrphy_bitslip102[2];
	a7ddrphy_dfi_p1_rddata[26] <= a7ddrphy_bitslip102[3];
	a7ddrphy_dfi_p1_rddata[11] <= a7ddrphy_bitslip112[2];
	a7ddrphy_dfi_p1_rddata[27] <= a7ddrphy_bitslip112[3];
	a7ddrphy_dfi_p1_rddata[12] <= a7ddrphy_bitslip122[2];
	a7ddrphy_dfi_p1_rddata[28] <= a7ddrphy_bitslip122[3];
	a7ddrphy_dfi_p1_rddata[13] <= a7ddrphy_bitslip132[2];
	a7ddrphy_dfi_p1_rddata[29] <= a7ddrphy_bitslip132[3];
	a7ddrphy_dfi_p1_rddata[14] <= a7ddrphy_bitslip142[2];
	a7ddrphy_dfi_p1_rddata[30] <= a7ddrphy_bitslip142[3];
	a7ddrphy_dfi_p1_rddata[15] <= a7ddrphy_bitslip152[2];
	a7ddrphy_dfi_p1_rddata[31] <= a7ddrphy_bitslip152[3];
end
always @(*) begin
	a7ddrphy_dfi_p2_rddata <= 32'd0;
	a7ddrphy_dfi_p2_rddata[0] <= a7ddrphy_bitslip04[4];
	a7ddrphy_dfi_p2_rddata[16] <= a7ddrphy_bitslip04[5];
	a7ddrphy_dfi_p2_rddata[1] <= a7ddrphy_bitslip14[4];
	a7ddrphy_dfi_p2_rddata[17] <= a7ddrphy_bitslip14[5];
	a7ddrphy_dfi_p2_rddata[2] <= a7ddrphy_bitslip22[4];
	a7ddrphy_dfi_p2_rddata[18] <= a7ddrphy_bitslip22[5];
	a7ddrphy_dfi_p2_rddata[3] <= a7ddrphy_bitslip32[4];
	a7ddrphy_dfi_p2_rddata[19] <= a7ddrphy_bitslip32[5];
	a7ddrphy_dfi_p2_rddata[4] <= a7ddrphy_bitslip42[4];
	a7ddrphy_dfi_p2_rddata[20] <= a7ddrphy_bitslip42[5];
	a7ddrphy_dfi_p2_rddata[5] <= a7ddrphy_bitslip52[4];
	a7ddrphy_dfi_p2_rddata[21] <= a7ddrphy_bitslip52[5];
	a7ddrphy_dfi_p2_rddata[6] <= a7ddrphy_bitslip62[4];
	a7ddrphy_dfi_p2_rddata[22] <= a7ddrphy_bitslip62[5];
	a7ddrphy_dfi_p2_rddata[7] <= a7ddrphy_bitslip72[4];
	a7ddrphy_dfi_p2_rddata[23] <= a7ddrphy_bitslip72[5];
	a7ddrphy_dfi_p2_rddata[8] <= a7ddrphy_bitslip82[4];
	a7ddrphy_dfi_p2_rddata[24] <= a7ddrphy_bitslip82[5];
	a7ddrphy_dfi_p2_rddata[9] <= a7ddrphy_bitslip92[4];
	a7ddrphy_dfi_p2_rddata[25] <= a7ddrphy_bitslip92[5];
	a7ddrphy_dfi_p2_rddata[10] <= a7ddrphy_bitslip102[4];
	a7ddrphy_dfi_p2_rddata[26] <= a7ddrphy_bitslip102[5];
	a7ddrphy_dfi_p2_rddata[11] <= a7ddrphy_bitslip112[4];
	a7ddrphy_dfi_p2_rddata[27] <= a7ddrphy_bitslip112[5];
	a7ddrphy_dfi_p2_rddata[12] <= a7ddrphy_bitslip122[4];
	a7ddrphy_dfi_p2_rddata[28] <= a7ddrphy_bitslip122[5];
	a7ddrphy_dfi_p2_rddata[13] <= a7ddrphy_bitslip132[4];
	a7ddrphy_dfi_p2_rddata[29] <= a7ddrphy_bitslip132[5];
	a7ddrphy_dfi_p2_rddata[14] <= a7ddrphy_bitslip142[4];
	a7ddrphy_dfi_p2_rddata[30] <= a7ddrphy_bitslip142[5];
	a7ddrphy_dfi_p2_rddata[15] <= a7ddrphy_bitslip152[4];
	a7ddrphy_dfi_p2_rddata[31] <= a7ddrphy_bitslip152[5];
end
always @(*) begin
	a7ddrphy_dfi_p3_rddata <= 32'd0;
	a7ddrphy_dfi_p3_rddata[0] <= a7ddrphy_bitslip04[6];
	a7ddrphy_dfi_p3_rddata[16] <= a7ddrphy_bitslip04[7];
	a7ddrphy_dfi_p3_rddata[1] <= a7ddrphy_bitslip14[6];
	a7ddrphy_dfi_p3_rddata[17] <= a7ddrphy_bitslip14[7];
	a7ddrphy_dfi_p3_rddata[2] <= a7ddrphy_bitslip22[6];
	a7ddrphy_dfi_p3_rddata[18] <= a7ddrphy_bitslip22[7];
	a7ddrphy_dfi_p3_rddata[3] <= a7ddrphy_bitslip32[6];
	a7ddrphy_dfi_p3_rddata[19] <= a7ddrphy_bitslip32[7];
	a7ddrphy_dfi_p3_rddata[4] <= a7ddrphy_bitslip42[6];
	a7ddrphy_dfi_p3_rddata[20] <= a7ddrphy_bitslip42[7];
	a7ddrphy_dfi_p3_rddata[5] <= a7ddrphy_bitslip52[6];
	a7ddrphy_dfi_p3_rddata[21] <= a7ddrphy_bitslip52[7];
	a7ddrphy_dfi_p3_rddata[6] <= a7ddrphy_bitslip62[6];
	a7ddrphy_dfi_p3_rddata[22] <= a7ddrphy_bitslip62[7];
	a7ddrphy_dfi_p3_rddata[7] <= a7ddrphy_bitslip72[6];
	a7ddrphy_dfi_p3_rddata[23] <= a7ddrphy_bitslip72[7];
	a7ddrphy_dfi_p3_rddata[8] <= a7ddrphy_bitslip82[6];
	a7ddrphy_dfi_p3_rddata[24] <= a7ddrphy_bitslip82[7];
	a7ddrphy_dfi_p3_rddata[9] <= a7ddrphy_bitslip92[6];
	a7ddrphy_dfi_p3_rddata[25] <= a7ddrphy_bitslip92[7];
	a7ddrphy_dfi_p3_rddata[10] <= a7ddrphy_bitslip102[6];
	a7ddrphy_dfi_p3_rddata[26] <= a7ddrphy_bitslip102[7];
	a7ddrphy_dfi_p3_rddata[11] <= a7ddrphy_bitslip112[6];
	a7ddrphy_dfi_p3_rddata[27] <= a7ddrphy_bitslip112[7];
	a7ddrphy_dfi_p3_rddata[12] <= a7ddrphy_bitslip122[6];
	a7ddrphy_dfi_p3_rddata[28] <= a7ddrphy_bitslip122[7];
	a7ddrphy_dfi_p3_rddata[13] <= a7ddrphy_bitslip132[6];
	a7ddrphy_dfi_p3_rddata[29] <= a7ddrphy_bitslip132[7];
	a7ddrphy_dfi_p3_rddata[14] <= a7ddrphy_bitslip142[6];
	a7ddrphy_dfi_p3_rddata[30] <= a7ddrphy_bitslip142[7];
	a7ddrphy_dfi_p3_rddata[15] <= a7ddrphy_bitslip152[6];
	a7ddrphy_dfi_p3_rddata[31] <= a7ddrphy_bitslip152[7];
end
assign a7ddrphy_dfi_p0_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dfi_p1_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dfi_p2_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dfi_p3_rddata_valid = (a7ddrphy_rddata_en_tappeddelayline7 | a7ddrphy_wlevel_en_storage);
assign a7ddrphy_dq_oe = a7ddrphy_wrdata_en_tappeddelayline1;
always @(*) begin
	a7ddrphy_dqs_oe <= 1'd0;
	if (a7ddrphy_wlevel_en_storage) begin
		a7ddrphy_dqs_oe <= 1'd1;
	end else begin
		a7ddrphy_dqs_oe <= a7ddrphy_dq_oe;
	end
end
assign a7ddrphy_dqs_preamble = (a7ddrphy_wrdata_en_tappeddelayline0 & (~a7ddrphy_wrdata_en_tappeddelayline1));
assign a7ddrphy_dqs_postamble = (a7ddrphy_wrdata_en_tappeddelayline2 & (~a7ddrphy_wrdata_en_tappeddelayline1));
always @(*) begin
	a7ddrphy_dqspattern_o0 <= 8'd0;
	a7ddrphy_dqspattern_o0 <= 7'd85;
	if (a7ddrphy_dqspattern0) begin
		a7ddrphy_dqspattern_o0 <= 5'd21;
	end
	if (a7ddrphy_dqspattern1) begin
		a7ddrphy_dqspattern_o0 <= 7'd84;
	end
	if (a7ddrphy_wlevel_en_storage) begin
		a7ddrphy_dqspattern_o0 <= 1'd0;
		if (a7ddrphy_wlevel_strobe_re) begin
			a7ddrphy_dqspattern_o0 <= 1'd1;
		end
	end
end
always @(*) begin
	a7ddrphy_bitslip00 <= 8'd0;
	case (a7ddrphy_bitslip0_value0)
		1'd0: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip00 <= a7ddrphy_bitslip0_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip10 <= 8'd0;
	case (a7ddrphy_bitslip1_value0)
		1'd0: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip10 <= a7ddrphy_bitslip1_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip01 <= 8'd0;
	case (a7ddrphy_bitslip0_value1)
		1'd0: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip01 <= a7ddrphy_bitslip0_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip11 <= 8'd0;
	case (a7ddrphy_bitslip1_value1)
		1'd0: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip11 <= a7ddrphy_bitslip1_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip02 <= 8'd0;
	case (a7ddrphy_bitslip0_value2)
		1'd0: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip02 <= a7ddrphy_bitslip0_r2[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip04 <= 8'd0;
	case (a7ddrphy_bitslip0_value3)
		1'd0: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip04 <= a7ddrphy_bitslip0_r3[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip12 <= 8'd0;
	case (a7ddrphy_bitslip1_value2)
		1'd0: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip12 <= a7ddrphy_bitslip1_r2[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip14 <= 8'd0;
	case (a7ddrphy_bitslip1_value3)
		1'd0: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip14 <= a7ddrphy_bitslip1_r3[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip20 <= 8'd0;
	case (a7ddrphy_bitslip2_value0)
		1'd0: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip20 <= a7ddrphy_bitslip2_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip22 <= 8'd0;
	case (a7ddrphy_bitslip2_value1)
		1'd0: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip22 <= a7ddrphy_bitslip2_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip30 <= 8'd0;
	case (a7ddrphy_bitslip3_value0)
		1'd0: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip30 <= a7ddrphy_bitslip3_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip32 <= 8'd0;
	case (a7ddrphy_bitslip3_value1)
		1'd0: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip32 <= a7ddrphy_bitslip3_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip40 <= 8'd0;
	case (a7ddrphy_bitslip4_value0)
		1'd0: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip40 <= a7ddrphy_bitslip4_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip42 <= 8'd0;
	case (a7ddrphy_bitslip4_value1)
		1'd0: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip42 <= a7ddrphy_bitslip4_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip50 <= 8'd0;
	case (a7ddrphy_bitslip5_value0)
		1'd0: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip50 <= a7ddrphy_bitslip5_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip52 <= 8'd0;
	case (a7ddrphy_bitslip5_value1)
		1'd0: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip52 <= a7ddrphy_bitslip5_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip60 <= 8'd0;
	case (a7ddrphy_bitslip6_value0)
		1'd0: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip60 <= a7ddrphy_bitslip6_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip62 <= 8'd0;
	case (a7ddrphy_bitslip6_value1)
		1'd0: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip62 <= a7ddrphy_bitslip6_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip70 <= 8'd0;
	case (a7ddrphy_bitslip7_value0)
		1'd0: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip70 <= a7ddrphy_bitslip7_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip72 <= 8'd0;
	case (a7ddrphy_bitslip7_value1)
		1'd0: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip72 <= a7ddrphy_bitslip7_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip80 <= 8'd0;
	case (a7ddrphy_bitslip8_value0)
		1'd0: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip80 <= a7ddrphy_bitslip8_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip82 <= 8'd0;
	case (a7ddrphy_bitslip8_value1)
		1'd0: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip82 <= a7ddrphy_bitslip8_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip90 <= 8'd0;
	case (a7ddrphy_bitslip9_value0)
		1'd0: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip90 <= a7ddrphy_bitslip9_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip92 <= 8'd0;
	case (a7ddrphy_bitslip9_value1)
		1'd0: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip92 <= a7ddrphy_bitslip9_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip100 <= 8'd0;
	case (a7ddrphy_bitslip10_value0)
		1'd0: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip100 <= a7ddrphy_bitslip10_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip102 <= 8'd0;
	case (a7ddrphy_bitslip10_value1)
		1'd0: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip102 <= a7ddrphy_bitslip10_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip110 <= 8'd0;
	case (a7ddrphy_bitslip11_value0)
		1'd0: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip110 <= a7ddrphy_bitslip11_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip112 <= 8'd0;
	case (a7ddrphy_bitslip11_value1)
		1'd0: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip112 <= a7ddrphy_bitslip11_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip120 <= 8'd0;
	case (a7ddrphy_bitslip12_value0)
		1'd0: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip120 <= a7ddrphy_bitslip12_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip122 <= 8'd0;
	case (a7ddrphy_bitslip12_value1)
		1'd0: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip122 <= a7ddrphy_bitslip12_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip130 <= 8'd0;
	case (a7ddrphy_bitslip13_value0)
		1'd0: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip130 <= a7ddrphy_bitslip13_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip132 <= 8'd0;
	case (a7ddrphy_bitslip13_value1)
		1'd0: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip132 <= a7ddrphy_bitslip13_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip140 <= 8'd0;
	case (a7ddrphy_bitslip14_value0)
		1'd0: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip140 <= a7ddrphy_bitslip14_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip142 <= 8'd0;
	case (a7ddrphy_bitslip14_value1)
		1'd0: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip142 <= a7ddrphy_bitslip14_r1[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip150 <= 8'd0;
	case (a7ddrphy_bitslip15_value0)
		1'd0: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip150 <= a7ddrphy_bitslip15_r0[15:8];
		end
	endcase
end
always @(*) begin
	a7ddrphy_bitslip152 <= 8'd0;
	case (a7ddrphy_bitslip15_value1)
		1'd0: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[8:1];
		end
		1'd1: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[9:2];
		end
		2'd2: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[10:3];
		end
		2'd3: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[11:4];
		end
		3'd4: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[12:5];
		end
		3'd5: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[13:6];
		end
		3'd6: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[14:7];
		end
		3'd7: begin
			a7ddrphy_bitslip152 <= a7ddrphy_bitslip15_r1[15:8];
		end
	endcase
end
assign a7ddrphy_dfi_p0_address = basesoc_sdram_master_p0_address;
assign a7ddrphy_dfi_p0_bank = basesoc_sdram_master_p0_bank;
assign a7ddrphy_dfi_p0_cas_n = basesoc_sdram_master_p0_cas_n;
assign a7ddrphy_dfi_p0_cs_n = basesoc_sdram_master_p0_cs_n;
assign a7ddrphy_dfi_p0_ras_n = basesoc_sdram_master_p0_ras_n;
assign a7ddrphy_dfi_p0_we_n = basesoc_sdram_master_p0_we_n;
assign a7ddrphy_dfi_p0_cke = basesoc_sdram_master_p0_cke;
assign a7ddrphy_dfi_p0_odt = basesoc_sdram_master_p0_odt;
assign a7ddrphy_dfi_p0_reset_n = basesoc_sdram_master_p0_reset_n;
assign a7ddrphy_dfi_p0_act_n = basesoc_sdram_master_p0_act_n;
assign a7ddrphy_dfi_p0_wrdata = basesoc_sdram_master_p0_wrdata;
assign a7ddrphy_dfi_p0_wrdata_en = basesoc_sdram_master_p0_wrdata_en;
assign a7ddrphy_dfi_p0_wrdata_mask = basesoc_sdram_master_p0_wrdata_mask;
assign a7ddrphy_dfi_p0_rddata_en = basesoc_sdram_master_p0_rddata_en;
assign basesoc_sdram_master_p0_rddata = a7ddrphy_dfi_p0_rddata;
assign basesoc_sdram_master_p0_rddata_valid = a7ddrphy_dfi_p0_rddata_valid;
assign a7ddrphy_dfi_p1_address = basesoc_sdram_master_p1_address;
assign a7ddrphy_dfi_p1_bank = basesoc_sdram_master_p1_bank;
assign a7ddrphy_dfi_p1_cas_n = basesoc_sdram_master_p1_cas_n;
assign a7ddrphy_dfi_p1_cs_n = basesoc_sdram_master_p1_cs_n;
assign a7ddrphy_dfi_p1_ras_n = basesoc_sdram_master_p1_ras_n;
assign a7ddrphy_dfi_p1_we_n = basesoc_sdram_master_p1_we_n;
assign a7ddrphy_dfi_p1_cke = basesoc_sdram_master_p1_cke;
assign a7ddrphy_dfi_p1_odt = basesoc_sdram_master_p1_odt;
assign a7ddrphy_dfi_p1_reset_n = basesoc_sdram_master_p1_reset_n;
assign a7ddrphy_dfi_p1_act_n = basesoc_sdram_master_p1_act_n;
assign a7ddrphy_dfi_p1_wrdata = basesoc_sdram_master_p1_wrdata;
assign a7ddrphy_dfi_p1_wrdata_en = basesoc_sdram_master_p1_wrdata_en;
assign a7ddrphy_dfi_p1_wrdata_mask = basesoc_sdram_master_p1_wrdata_mask;
assign a7ddrphy_dfi_p1_rddata_en = basesoc_sdram_master_p1_rddata_en;
assign basesoc_sdram_master_p1_rddata = a7ddrphy_dfi_p1_rddata;
assign basesoc_sdram_master_p1_rddata_valid = a7ddrphy_dfi_p1_rddata_valid;
assign a7ddrphy_dfi_p2_address = basesoc_sdram_master_p2_address;
assign a7ddrphy_dfi_p2_bank = basesoc_sdram_master_p2_bank;
assign a7ddrphy_dfi_p2_cas_n = basesoc_sdram_master_p2_cas_n;
assign a7ddrphy_dfi_p2_cs_n = basesoc_sdram_master_p2_cs_n;
assign a7ddrphy_dfi_p2_ras_n = basesoc_sdram_master_p2_ras_n;
assign a7ddrphy_dfi_p2_we_n = basesoc_sdram_master_p2_we_n;
assign a7ddrphy_dfi_p2_cke = basesoc_sdram_master_p2_cke;
assign a7ddrphy_dfi_p2_odt = basesoc_sdram_master_p2_odt;
assign a7ddrphy_dfi_p2_reset_n = basesoc_sdram_master_p2_reset_n;
assign a7ddrphy_dfi_p2_act_n = basesoc_sdram_master_p2_act_n;
assign a7ddrphy_dfi_p2_wrdata = basesoc_sdram_master_p2_wrdata;
assign a7ddrphy_dfi_p2_wrdata_en = basesoc_sdram_master_p2_wrdata_en;
assign a7ddrphy_dfi_p2_wrdata_mask = basesoc_sdram_master_p2_wrdata_mask;
assign a7ddrphy_dfi_p2_rddata_en = basesoc_sdram_master_p2_rddata_en;
assign basesoc_sdram_master_p2_rddata = a7ddrphy_dfi_p2_rddata;
assign basesoc_sdram_master_p2_rddata_valid = a7ddrphy_dfi_p2_rddata_valid;
assign a7ddrphy_dfi_p3_address = basesoc_sdram_master_p3_address;
assign a7ddrphy_dfi_p3_bank = basesoc_sdram_master_p3_bank;
assign a7ddrphy_dfi_p3_cas_n = basesoc_sdram_master_p3_cas_n;
assign a7ddrphy_dfi_p3_cs_n = basesoc_sdram_master_p3_cs_n;
assign a7ddrphy_dfi_p3_ras_n = basesoc_sdram_master_p3_ras_n;
assign a7ddrphy_dfi_p3_we_n = basesoc_sdram_master_p3_we_n;
assign a7ddrphy_dfi_p3_cke = basesoc_sdram_master_p3_cke;
assign a7ddrphy_dfi_p3_odt = basesoc_sdram_master_p3_odt;
assign a7ddrphy_dfi_p3_reset_n = basesoc_sdram_master_p3_reset_n;
assign a7ddrphy_dfi_p3_act_n = basesoc_sdram_master_p3_act_n;
assign a7ddrphy_dfi_p3_wrdata = basesoc_sdram_master_p3_wrdata;
assign a7ddrphy_dfi_p3_wrdata_en = basesoc_sdram_master_p3_wrdata_en;
assign a7ddrphy_dfi_p3_wrdata_mask = basesoc_sdram_master_p3_wrdata_mask;
assign a7ddrphy_dfi_p3_rddata_en = basesoc_sdram_master_p3_rddata_en;
assign basesoc_sdram_master_p3_rddata = a7ddrphy_dfi_p3_rddata;
assign basesoc_sdram_master_p3_rddata_valid = a7ddrphy_dfi_p3_rddata_valid;
assign basesoc_sdram_slave_p0_address = basesoc_sdram_dfi_p0_address;
assign basesoc_sdram_slave_p0_bank = basesoc_sdram_dfi_p0_bank;
assign basesoc_sdram_slave_p0_cas_n = basesoc_sdram_dfi_p0_cas_n;
assign basesoc_sdram_slave_p0_cs_n = basesoc_sdram_dfi_p0_cs_n;
assign basesoc_sdram_slave_p0_ras_n = basesoc_sdram_dfi_p0_ras_n;
assign basesoc_sdram_slave_p0_we_n = basesoc_sdram_dfi_p0_we_n;
assign basesoc_sdram_slave_p0_cke = basesoc_sdram_dfi_p0_cke;
assign basesoc_sdram_slave_p0_odt = basesoc_sdram_dfi_p0_odt;
assign basesoc_sdram_slave_p0_reset_n = basesoc_sdram_dfi_p0_reset_n;
assign basesoc_sdram_slave_p0_act_n = basesoc_sdram_dfi_p0_act_n;
assign basesoc_sdram_slave_p0_wrdata = basesoc_sdram_dfi_p0_wrdata;
assign basesoc_sdram_slave_p0_wrdata_en = basesoc_sdram_dfi_p0_wrdata_en;
assign basesoc_sdram_slave_p0_wrdata_mask = basesoc_sdram_dfi_p0_wrdata_mask;
assign basesoc_sdram_slave_p0_rddata_en = basesoc_sdram_dfi_p0_rddata_en;
assign basesoc_sdram_dfi_p0_rddata = basesoc_sdram_slave_p0_rddata;
assign basesoc_sdram_dfi_p0_rddata_valid = basesoc_sdram_slave_p0_rddata_valid;
assign basesoc_sdram_slave_p1_address = basesoc_sdram_dfi_p1_address;
assign basesoc_sdram_slave_p1_bank = basesoc_sdram_dfi_p1_bank;
assign basesoc_sdram_slave_p1_cas_n = basesoc_sdram_dfi_p1_cas_n;
assign basesoc_sdram_slave_p1_cs_n = basesoc_sdram_dfi_p1_cs_n;
assign basesoc_sdram_slave_p1_ras_n = basesoc_sdram_dfi_p1_ras_n;
assign basesoc_sdram_slave_p1_we_n = basesoc_sdram_dfi_p1_we_n;
assign basesoc_sdram_slave_p1_cke = basesoc_sdram_dfi_p1_cke;
assign basesoc_sdram_slave_p1_odt = basesoc_sdram_dfi_p1_odt;
assign basesoc_sdram_slave_p1_reset_n = basesoc_sdram_dfi_p1_reset_n;
assign basesoc_sdram_slave_p1_act_n = basesoc_sdram_dfi_p1_act_n;
assign basesoc_sdram_slave_p1_wrdata = basesoc_sdram_dfi_p1_wrdata;
assign basesoc_sdram_slave_p1_wrdata_en = basesoc_sdram_dfi_p1_wrdata_en;
assign basesoc_sdram_slave_p1_wrdata_mask = basesoc_sdram_dfi_p1_wrdata_mask;
assign basesoc_sdram_slave_p1_rddata_en = basesoc_sdram_dfi_p1_rddata_en;
assign basesoc_sdram_dfi_p1_rddata = basesoc_sdram_slave_p1_rddata;
assign basesoc_sdram_dfi_p1_rddata_valid = basesoc_sdram_slave_p1_rddata_valid;
assign basesoc_sdram_slave_p2_address = basesoc_sdram_dfi_p2_address;
assign basesoc_sdram_slave_p2_bank = basesoc_sdram_dfi_p2_bank;
assign basesoc_sdram_slave_p2_cas_n = basesoc_sdram_dfi_p2_cas_n;
assign basesoc_sdram_slave_p2_cs_n = basesoc_sdram_dfi_p2_cs_n;
assign basesoc_sdram_slave_p2_ras_n = basesoc_sdram_dfi_p2_ras_n;
assign basesoc_sdram_slave_p2_we_n = basesoc_sdram_dfi_p2_we_n;
assign basesoc_sdram_slave_p2_cke = basesoc_sdram_dfi_p2_cke;
assign basesoc_sdram_slave_p2_odt = basesoc_sdram_dfi_p2_odt;
assign basesoc_sdram_slave_p2_reset_n = basesoc_sdram_dfi_p2_reset_n;
assign basesoc_sdram_slave_p2_act_n = basesoc_sdram_dfi_p2_act_n;
assign basesoc_sdram_slave_p2_wrdata = basesoc_sdram_dfi_p2_wrdata;
assign basesoc_sdram_slave_p2_wrdata_en = basesoc_sdram_dfi_p2_wrdata_en;
assign basesoc_sdram_slave_p2_wrdata_mask = basesoc_sdram_dfi_p2_wrdata_mask;
assign basesoc_sdram_slave_p2_rddata_en = basesoc_sdram_dfi_p2_rddata_en;
assign basesoc_sdram_dfi_p2_rddata = basesoc_sdram_slave_p2_rddata;
assign basesoc_sdram_dfi_p2_rddata_valid = basesoc_sdram_slave_p2_rddata_valid;
assign basesoc_sdram_slave_p3_address = basesoc_sdram_dfi_p3_address;
assign basesoc_sdram_slave_p3_bank = basesoc_sdram_dfi_p3_bank;
assign basesoc_sdram_slave_p3_cas_n = basesoc_sdram_dfi_p3_cas_n;
assign basesoc_sdram_slave_p3_cs_n = basesoc_sdram_dfi_p3_cs_n;
assign basesoc_sdram_slave_p3_ras_n = basesoc_sdram_dfi_p3_ras_n;
assign basesoc_sdram_slave_p3_we_n = basesoc_sdram_dfi_p3_we_n;
assign basesoc_sdram_slave_p3_cke = basesoc_sdram_dfi_p3_cke;
assign basesoc_sdram_slave_p3_odt = basesoc_sdram_dfi_p3_odt;
assign basesoc_sdram_slave_p3_reset_n = basesoc_sdram_dfi_p3_reset_n;
assign basesoc_sdram_slave_p3_act_n = basesoc_sdram_dfi_p3_act_n;
assign basesoc_sdram_slave_p3_wrdata = basesoc_sdram_dfi_p3_wrdata;
assign basesoc_sdram_slave_p3_wrdata_en = basesoc_sdram_dfi_p3_wrdata_en;
assign basesoc_sdram_slave_p3_wrdata_mask = basesoc_sdram_dfi_p3_wrdata_mask;
assign basesoc_sdram_slave_p3_rddata_en = basesoc_sdram_dfi_p3_rddata_en;
assign basesoc_sdram_dfi_p3_rddata = basesoc_sdram_slave_p3_rddata;
assign basesoc_sdram_dfi_p3_rddata_valid = basesoc_sdram_slave_p3_rddata_valid;
always @(*) begin
	basesoc_sdram_master_p1_cs_n <= 1'd1;
	basesoc_sdram_master_p1_ras_n <= 1'd1;
	basesoc_sdram_master_p1_we_n <= 1'd1;
	basesoc_sdram_master_p1_cke <= 1'd0;
	basesoc_sdram_master_p1_odt <= 1'd0;
	basesoc_sdram_master_p1_reset_n <= 1'd0;
	basesoc_sdram_master_p1_act_n <= 1'd1;
	basesoc_sdram_master_p1_wrdata <= 32'd0;
	basesoc_sdram_inti_p2_rddata <= 32'd0;
	basesoc_sdram_master_p1_wrdata_en <= 1'd0;
	basesoc_sdram_inti_p2_rddata_valid <= 1'd0;
	basesoc_sdram_master_p1_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p1_rddata_en <= 1'd0;
	basesoc_sdram_master_p2_address <= 16'd0;
	basesoc_sdram_master_p2_bank <= 3'd0;
	basesoc_sdram_master_p2_cas_n <= 1'd1;
	basesoc_sdram_master_p2_cs_n <= 1'd1;
	basesoc_sdram_master_p2_ras_n <= 1'd1;
	basesoc_sdram_master_p2_we_n <= 1'd1;
	basesoc_sdram_master_p2_cke <= 1'd0;
	basesoc_sdram_master_p2_odt <= 1'd0;
	basesoc_sdram_master_p2_reset_n <= 1'd0;
	basesoc_sdram_master_p2_act_n <= 1'd1;
	basesoc_sdram_master_p2_wrdata <= 32'd0;
	basesoc_sdram_inti_p3_rddata <= 32'd0;
	basesoc_sdram_master_p2_wrdata_en <= 1'd0;
	basesoc_sdram_inti_p3_rddata_valid <= 1'd0;
	basesoc_sdram_master_p2_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p2_rddata_en <= 1'd0;
	basesoc_sdram_master_p3_address <= 16'd0;
	basesoc_sdram_master_p3_bank <= 3'd0;
	basesoc_sdram_master_p3_cas_n <= 1'd1;
	basesoc_sdram_master_p3_cs_n <= 1'd1;
	basesoc_sdram_master_p3_ras_n <= 1'd1;
	basesoc_sdram_master_p3_we_n <= 1'd1;
	basesoc_sdram_master_p3_cke <= 1'd0;
	basesoc_sdram_master_p3_odt <= 1'd0;
	basesoc_sdram_master_p3_reset_n <= 1'd0;
	basesoc_sdram_master_p3_act_n <= 1'd1;
	basesoc_sdram_master_p3_wrdata <= 32'd0;
	basesoc_sdram_master_p3_wrdata_en <= 1'd0;
	basesoc_sdram_master_p3_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p3_rddata_en <= 1'd0;
	basesoc_sdram_slave_p0_rddata <= 32'd0;
	basesoc_sdram_slave_p0_rddata_valid <= 1'd0;
	basesoc_sdram_slave_p1_rddata <= 32'd0;
	basesoc_sdram_slave_p1_rddata_valid <= 1'd0;
	basesoc_sdram_slave_p2_rddata <= 32'd0;
	basesoc_sdram_slave_p2_rddata_valid <= 1'd0;
	basesoc_sdram_slave_p3_rddata <= 32'd0;
	basesoc_sdram_slave_p3_rddata_valid <= 1'd0;
	basesoc_sdram_inti_p0_rddata <= 32'd0;
	basesoc_sdram_inti_p0_rddata_valid <= 1'd0;
	basesoc_sdram_master_p0_address <= 16'd0;
	basesoc_sdram_master_p0_bank <= 3'd0;
	basesoc_sdram_master_p0_cas_n <= 1'd1;
	basesoc_sdram_master_p0_cs_n <= 1'd1;
	basesoc_sdram_master_p0_ras_n <= 1'd1;
	basesoc_sdram_master_p0_we_n <= 1'd1;
	basesoc_sdram_master_p0_cke <= 1'd0;
	basesoc_sdram_master_p0_odt <= 1'd0;
	basesoc_sdram_master_p0_reset_n <= 1'd0;
	basesoc_sdram_master_p0_act_n <= 1'd1;
	basesoc_sdram_master_p0_wrdata <= 32'd0;
	basesoc_sdram_inti_p1_rddata <= 32'd0;
	basesoc_sdram_master_p0_wrdata_en <= 1'd0;
	basesoc_sdram_inti_p1_rddata_valid <= 1'd0;
	basesoc_sdram_master_p0_wrdata_mask <= 4'd0;
	basesoc_sdram_master_p0_rddata_en <= 1'd0;
	basesoc_sdram_master_p1_address <= 16'd0;
	basesoc_sdram_master_p1_bank <= 3'd0;
	basesoc_sdram_master_p1_cas_n <= 1'd1;
	if (basesoc_sdram_sel) begin
		basesoc_sdram_master_p0_address <= basesoc_sdram_slave_p0_address;
		basesoc_sdram_master_p0_bank <= basesoc_sdram_slave_p0_bank;
		basesoc_sdram_master_p0_cas_n <= basesoc_sdram_slave_p0_cas_n;
		basesoc_sdram_master_p0_cs_n <= basesoc_sdram_slave_p0_cs_n;
		basesoc_sdram_master_p0_ras_n <= basesoc_sdram_slave_p0_ras_n;
		basesoc_sdram_master_p0_we_n <= basesoc_sdram_slave_p0_we_n;
		basesoc_sdram_master_p0_cke <= basesoc_sdram_slave_p0_cke;
		basesoc_sdram_master_p0_odt <= basesoc_sdram_slave_p0_odt;
		basesoc_sdram_master_p0_reset_n <= basesoc_sdram_slave_p0_reset_n;
		basesoc_sdram_master_p0_act_n <= basesoc_sdram_slave_p0_act_n;
		basesoc_sdram_master_p0_wrdata <= basesoc_sdram_slave_p0_wrdata;
		basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_slave_p0_wrdata_en;
		basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_slave_p0_wrdata_mask;
		basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_slave_p0_rddata_en;
		basesoc_sdram_slave_p0_rddata <= basesoc_sdram_master_p0_rddata;
		basesoc_sdram_slave_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
		basesoc_sdram_master_p1_address <= basesoc_sdram_slave_p1_address;
		basesoc_sdram_master_p1_bank <= basesoc_sdram_slave_p1_bank;
		basesoc_sdram_master_p1_cas_n <= basesoc_sdram_slave_p1_cas_n;
		basesoc_sdram_master_p1_cs_n <= basesoc_sdram_slave_p1_cs_n;
		basesoc_sdram_master_p1_ras_n <= basesoc_sdram_slave_p1_ras_n;
		basesoc_sdram_master_p1_we_n <= basesoc_sdram_slave_p1_we_n;
		basesoc_sdram_master_p1_cke <= basesoc_sdram_slave_p1_cke;
		basesoc_sdram_master_p1_odt <= basesoc_sdram_slave_p1_odt;
		basesoc_sdram_master_p1_reset_n <= basesoc_sdram_slave_p1_reset_n;
		basesoc_sdram_master_p1_act_n <= basesoc_sdram_slave_p1_act_n;
		basesoc_sdram_master_p1_wrdata <= basesoc_sdram_slave_p1_wrdata;
		basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_slave_p1_wrdata_en;
		basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_slave_p1_wrdata_mask;
		basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_slave_p1_rddata_en;
		basesoc_sdram_slave_p1_rddata <= basesoc_sdram_master_p1_rddata;
		basesoc_sdram_slave_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
		basesoc_sdram_master_p2_address <= basesoc_sdram_slave_p2_address;
		basesoc_sdram_master_p2_bank <= basesoc_sdram_slave_p2_bank;
		basesoc_sdram_master_p2_cas_n <= basesoc_sdram_slave_p2_cas_n;
		basesoc_sdram_master_p2_cs_n <= basesoc_sdram_slave_p2_cs_n;
		basesoc_sdram_master_p2_ras_n <= basesoc_sdram_slave_p2_ras_n;
		basesoc_sdram_master_p2_we_n <= basesoc_sdram_slave_p2_we_n;
		basesoc_sdram_master_p2_cke <= basesoc_sdram_slave_p2_cke;
		basesoc_sdram_master_p2_odt <= basesoc_sdram_slave_p2_odt;
		basesoc_sdram_master_p2_reset_n <= basesoc_sdram_slave_p2_reset_n;
		basesoc_sdram_master_p2_act_n <= basesoc_sdram_slave_p2_act_n;
		basesoc_sdram_master_p2_wrdata <= basesoc_sdram_slave_p2_wrdata;
		basesoc_sdram_master_p2_wrdata_en <= basesoc_sdram_slave_p2_wrdata_en;
		basesoc_sdram_master_p2_wrdata_mask <= basesoc_sdram_slave_p2_wrdata_mask;
		basesoc_sdram_master_p2_rddata_en <= basesoc_sdram_slave_p2_rddata_en;
		basesoc_sdram_slave_p2_rddata <= basesoc_sdram_master_p2_rddata;
		basesoc_sdram_slave_p2_rddata_valid <= basesoc_sdram_master_p2_rddata_valid;
		basesoc_sdram_master_p3_address <= basesoc_sdram_slave_p3_address;
		basesoc_sdram_master_p3_bank <= basesoc_sdram_slave_p3_bank;
		basesoc_sdram_master_p3_cas_n <= basesoc_sdram_slave_p3_cas_n;
		basesoc_sdram_master_p3_cs_n <= basesoc_sdram_slave_p3_cs_n;
		basesoc_sdram_master_p3_ras_n <= basesoc_sdram_slave_p3_ras_n;
		basesoc_sdram_master_p3_we_n <= basesoc_sdram_slave_p3_we_n;
		basesoc_sdram_master_p3_cke <= basesoc_sdram_slave_p3_cke;
		basesoc_sdram_master_p3_odt <= basesoc_sdram_slave_p3_odt;
		basesoc_sdram_master_p3_reset_n <= basesoc_sdram_slave_p3_reset_n;
		basesoc_sdram_master_p3_act_n <= basesoc_sdram_slave_p3_act_n;
		basesoc_sdram_master_p3_wrdata <= basesoc_sdram_slave_p3_wrdata;
		basesoc_sdram_master_p3_wrdata_en <= basesoc_sdram_slave_p3_wrdata_en;
		basesoc_sdram_master_p3_wrdata_mask <= basesoc_sdram_slave_p3_wrdata_mask;
		basesoc_sdram_master_p3_rddata_en <= basesoc_sdram_slave_p3_rddata_en;
		basesoc_sdram_slave_p3_rddata <= basesoc_sdram_master_p3_rddata;
		basesoc_sdram_slave_p3_rddata_valid <= basesoc_sdram_master_p3_rddata_valid;
	end else begin
		basesoc_sdram_master_p0_address <= basesoc_sdram_inti_p0_address;
		basesoc_sdram_master_p0_bank <= basesoc_sdram_inti_p0_bank;
		basesoc_sdram_master_p0_cas_n <= basesoc_sdram_inti_p0_cas_n;
		basesoc_sdram_master_p0_cs_n <= basesoc_sdram_inti_p0_cs_n;
		basesoc_sdram_master_p0_ras_n <= basesoc_sdram_inti_p0_ras_n;
		basesoc_sdram_master_p0_we_n <= basesoc_sdram_inti_p0_we_n;
		basesoc_sdram_master_p0_cke <= basesoc_sdram_inti_p0_cke;
		basesoc_sdram_master_p0_odt <= basesoc_sdram_inti_p0_odt;
		basesoc_sdram_master_p0_reset_n <= basesoc_sdram_inti_p0_reset_n;
		basesoc_sdram_master_p0_act_n <= basesoc_sdram_inti_p0_act_n;
		basesoc_sdram_master_p0_wrdata <= basesoc_sdram_inti_p0_wrdata;
		basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_inti_p0_wrdata_en;
		basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_inti_p0_wrdata_mask;
		basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_inti_p0_rddata_en;
		basesoc_sdram_inti_p0_rddata <= basesoc_sdram_master_p0_rddata;
		basesoc_sdram_inti_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
		basesoc_sdram_master_p1_address <= basesoc_sdram_inti_p1_address;
		basesoc_sdram_master_p1_bank <= basesoc_sdram_inti_p1_bank;
		basesoc_sdram_master_p1_cas_n <= basesoc_sdram_inti_p1_cas_n;
		basesoc_sdram_master_p1_cs_n <= basesoc_sdram_inti_p1_cs_n;
		basesoc_sdram_master_p1_ras_n <= basesoc_sdram_inti_p1_ras_n;
		basesoc_sdram_master_p1_we_n <= basesoc_sdram_inti_p1_we_n;
		basesoc_sdram_master_p1_cke <= basesoc_sdram_inti_p1_cke;
		basesoc_sdram_master_p1_odt <= basesoc_sdram_inti_p1_odt;
		basesoc_sdram_master_p1_reset_n <= basesoc_sdram_inti_p1_reset_n;
		basesoc_sdram_master_p1_act_n <= basesoc_sdram_inti_p1_act_n;
		basesoc_sdram_master_p1_wrdata <= basesoc_sdram_inti_p1_wrdata;
		basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_inti_p1_wrdata_en;
		basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_inti_p1_wrdata_mask;
		basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_inti_p1_rddata_en;
		basesoc_sdram_inti_p1_rddata <= basesoc_sdram_master_p1_rddata;
		basesoc_sdram_inti_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
		basesoc_sdram_master_p2_address <= basesoc_sdram_inti_p2_address;
		basesoc_sdram_master_p2_bank <= basesoc_sdram_inti_p2_bank;
		basesoc_sdram_master_p2_cas_n <= basesoc_sdram_inti_p2_cas_n;
		basesoc_sdram_master_p2_cs_n <= basesoc_sdram_inti_p2_cs_n;
		basesoc_sdram_master_p2_ras_n <= basesoc_sdram_inti_p2_ras_n;
		basesoc_sdram_master_p2_we_n <= basesoc_sdram_inti_p2_we_n;
		basesoc_sdram_master_p2_cke <= basesoc_sdram_inti_p2_cke;
		basesoc_sdram_master_p2_odt <= basesoc_sdram_inti_p2_odt;
		basesoc_sdram_master_p2_reset_n <= basesoc_sdram_inti_p2_reset_n;
		basesoc_sdram_master_p2_act_n <= basesoc_sdram_inti_p2_act_n;
		basesoc_sdram_master_p2_wrdata <= basesoc_sdram_inti_p2_wrdata;
		basesoc_sdram_master_p2_wrdata_en <= basesoc_sdram_inti_p2_wrdata_en;
		basesoc_sdram_master_p2_wrdata_mask <= basesoc_sdram_inti_p2_wrdata_mask;
		basesoc_sdram_master_p2_rddata_en <= basesoc_sdram_inti_p2_rddata_en;
		basesoc_sdram_inti_p2_rddata <= basesoc_sdram_master_p2_rddata;
		basesoc_sdram_inti_p2_rddata_valid <= basesoc_sdram_master_p2_rddata_valid;
		basesoc_sdram_master_p3_address <= basesoc_sdram_inti_p3_address;
		basesoc_sdram_master_p3_bank <= basesoc_sdram_inti_p3_bank;
		basesoc_sdram_master_p3_cas_n <= basesoc_sdram_inti_p3_cas_n;
		basesoc_sdram_master_p3_cs_n <= basesoc_sdram_inti_p3_cs_n;
		basesoc_sdram_master_p3_ras_n <= basesoc_sdram_inti_p3_ras_n;
		basesoc_sdram_master_p3_we_n <= basesoc_sdram_inti_p3_we_n;
		basesoc_sdram_master_p3_cke <= basesoc_sdram_inti_p3_cke;
		basesoc_sdram_master_p3_odt <= basesoc_sdram_inti_p3_odt;
		basesoc_sdram_master_p3_reset_n <= basesoc_sdram_inti_p3_reset_n;
		basesoc_sdram_master_p3_act_n <= basesoc_sdram_inti_p3_act_n;
		basesoc_sdram_master_p3_wrdata <= basesoc_sdram_inti_p3_wrdata;
		basesoc_sdram_master_p3_wrdata_en <= basesoc_sdram_inti_p3_wrdata_en;
		basesoc_sdram_master_p3_wrdata_mask <= basesoc_sdram_inti_p3_wrdata_mask;
		basesoc_sdram_master_p3_rddata_en <= basesoc_sdram_inti_p3_rddata_en;
		basesoc_sdram_inti_p3_rddata <= basesoc_sdram_master_p3_rddata;
		basesoc_sdram_inti_p3_rddata_valid <= basesoc_sdram_master_p3_rddata_valid;
	end
end
assign basesoc_sdram_inti_p0_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p1_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p2_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p3_cke = basesoc_sdram_cke;
assign basesoc_sdram_inti_p0_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p1_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p2_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p3_odt = basesoc_sdram_odt;
assign basesoc_sdram_inti_p0_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_inti_p1_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_inti_p2_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_inti_p3_reset_n = basesoc_sdram_reset_n;
always @(*) begin
	basesoc_sdram_inti_p0_cs_n <= 1'd1;
	basesoc_sdram_inti_p0_ras_n <= 1'd1;
	basesoc_sdram_inti_p0_we_n <= 1'd1;
	basesoc_sdram_inti_p0_cas_n <= 1'd1;
	if (basesoc_sdram_phaseinjector0_command_issue_re) begin
		basesoc_sdram_inti_p0_cs_n <= {1{(~basesoc_sdram_phaseinjector0_command_storage[0])}};
		basesoc_sdram_inti_p0_we_n <= (~basesoc_sdram_phaseinjector0_command_storage[1]);
		basesoc_sdram_inti_p0_cas_n <= (~basesoc_sdram_phaseinjector0_command_storage[2]);
		basesoc_sdram_inti_p0_ras_n <= (~basesoc_sdram_phaseinjector0_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p0_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p0_we_n <= 1'd1;
		basesoc_sdram_inti_p0_cas_n <= 1'd1;
		basesoc_sdram_inti_p0_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p0_address = basesoc_sdram_phaseinjector0_address_storage;
assign basesoc_sdram_inti_p0_bank = basesoc_sdram_phaseinjector0_baddress_storage;
assign basesoc_sdram_inti_p0_wrdata_en = (basesoc_sdram_phaseinjector0_command_issue_re & basesoc_sdram_phaseinjector0_command_storage[4]);
assign basesoc_sdram_inti_p0_rddata_en = (basesoc_sdram_phaseinjector0_command_issue_re & basesoc_sdram_phaseinjector0_command_storage[5]);
assign basesoc_sdram_inti_p0_wrdata = basesoc_sdram_phaseinjector0_wrdata_storage;
assign basesoc_sdram_inti_p0_wrdata_mask = 1'd0;
always @(*) begin
	basesoc_sdram_inti_p1_cs_n <= 1'd1;
	basesoc_sdram_inti_p1_ras_n <= 1'd1;
	basesoc_sdram_inti_p1_we_n <= 1'd1;
	basesoc_sdram_inti_p1_cas_n <= 1'd1;
	if (basesoc_sdram_phaseinjector1_command_issue_re) begin
		basesoc_sdram_inti_p1_cs_n <= {1{(~basesoc_sdram_phaseinjector1_command_storage[0])}};
		basesoc_sdram_inti_p1_we_n <= (~basesoc_sdram_phaseinjector1_command_storage[1]);
		basesoc_sdram_inti_p1_cas_n <= (~basesoc_sdram_phaseinjector1_command_storage[2]);
		basesoc_sdram_inti_p1_ras_n <= (~basesoc_sdram_phaseinjector1_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p1_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p1_we_n <= 1'd1;
		basesoc_sdram_inti_p1_cas_n <= 1'd1;
		basesoc_sdram_inti_p1_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p1_address = basesoc_sdram_phaseinjector1_address_storage;
assign basesoc_sdram_inti_p1_bank = basesoc_sdram_phaseinjector1_baddress_storage;
assign basesoc_sdram_inti_p1_wrdata_en = (basesoc_sdram_phaseinjector1_command_issue_re & basesoc_sdram_phaseinjector1_command_storage[4]);
assign basesoc_sdram_inti_p1_rddata_en = (basesoc_sdram_phaseinjector1_command_issue_re & basesoc_sdram_phaseinjector1_command_storage[5]);
assign basesoc_sdram_inti_p1_wrdata = basesoc_sdram_phaseinjector1_wrdata_storage;
assign basesoc_sdram_inti_p1_wrdata_mask = 1'd0;
always @(*) begin
	basesoc_sdram_inti_p2_cs_n <= 1'd1;
	basesoc_sdram_inti_p2_ras_n <= 1'd1;
	basesoc_sdram_inti_p2_we_n <= 1'd1;
	basesoc_sdram_inti_p2_cas_n <= 1'd1;
	if (basesoc_sdram_phaseinjector2_command_issue_re) begin
		basesoc_sdram_inti_p2_cs_n <= {1{(~basesoc_sdram_phaseinjector2_command_storage[0])}};
		basesoc_sdram_inti_p2_we_n <= (~basesoc_sdram_phaseinjector2_command_storage[1]);
		basesoc_sdram_inti_p2_cas_n <= (~basesoc_sdram_phaseinjector2_command_storage[2]);
		basesoc_sdram_inti_p2_ras_n <= (~basesoc_sdram_phaseinjector2_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p2_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p2_we_n <= 1'd1;
		basesoc_sdram_inti_p2_cas_n <= 1'd1;
		basesoc_sdram_inti_p2_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p2_address = basesoc_sdram_phaseinjector2_address_storage;
assign basesoc_sdram_inti_p2_bank = basesoc_sdram_phaseinjector2_baddress_storage;
assign basesoc_sdram_inti_p2_wrdata_en = (basesoc_sdram_phaseinjector2_command_issue_re & basesoc_sdram_phaseinjector2_command_storage[4]);
assign basesoc_sdram_inti_p2_rddata_en = (basesoc_sdram_phaseinjector2_command_issue_re & basesoc_sdram_phaseinjector2_command_storage[5]);
assign basesoc_sdram_inti_p2_wrdata = basesoc_sdram_phaseinjector2_wrdata_storage;
assign basesoc_sdram_inti_p2_wrdata_mask = 1'd0;
always @(*) begin
	basesoc_sdram_inti_p3_cs_n <= 1'd1;
	basesoc_sdram_inti_p3_ras_n <= 1'd1;
	basesoc_sdram_inti_p3_we_n <= 1'd1;
	basesoc_sdram_inti_p3_cas_n <= 1'd1;
	if (basesoc_sdram_phaseinjector3_command_issue_re) begin
		basesoc_sdram_inti_p3_cs_n <= {1{(~basesoc_sdram_phaseinjector3_command_storage[0])}};
		basesoc_sdram_inti_p3_we_n <= (~basesoc_sdram_phaseinjector3_command_storage[1]);
		basesoc_sdram_inti_p3_cas_n <= (~basesoc_sdram_phaseinjector3_command_storage[2]);
		basesoc_sdram_inti_p3_ras_n <= (~basesoc_sdram_phaseinjector3_command_storage[3]);
	end else begin
		basesoc_sdram_inti_p3_cs_n <= {1{1'd1}};
		basesoc_sdram_inti_p3_we_n <= 1'd1;
		basesoc_sdram_inti_p3_cas_n <= 1'd1;
		basesoc_sdram_inti_p3_ras_n <= 1'd1;
	end
end
assign basesoc_sdram_inti_p3_address = basesoc_sdram_phaseinjector3_address_storage;
assign basesoc_sdram_inti_p3_bank = basesoc_sdram_phaseinjector3_baddress_storage;
assign basesoc_sdram_inti_p3_wrdata_en = (basesoc_sdram_phaseinjector3_command_issue_re & basesoc_sdram_phaseinjector3_command_storage[4]);
assign basesoc_sdram_inti_p3_rddata_en = (basesoc_sdram_phaseinjector3_command_issue_re & basesoc_sdram_phaseinjector3_command_storage[5]);
assign basesoc_sdram_inti_p3_wrdata = basesoc_sdram_phaseinjector3_wrdata_storage;
assign basesoc_sdram_inti_p3_wrdata_mask = 1'd0;
assign basesoc_sdram_bankmachine0_req_valid = basesoc_sdram_interface_bank0_valid;
assign basesoc_sdram_interface_bank0_ready = basesoc_sdram_bankmachine0_req_ready;
assign basesoc_sdram_bankmachine0_req_we = basesoc_sdram_interface_bank0_we;
assign basesoc_sdram_bankmachine0_req_addr = basesoc_sdram_interface_bank0_addr;
assign basesoc_sdram_interface_bank0_lock = basesoc_sdram_bankmachine0_req_lock;
assign basesoc_sdram_interface_bank0_wdata_ready = basesoc_sdram_bankmachine0_req_wdata_ready;
assign basesoc_sdram_interface_bank0_rdata_valid = basesoc_sdram_bankmachine0_req_rdata_valid;
assign basesoc_sdram_bankmachine1_req_valid = basesoc_sdram_interface_bank1_valid;
assign basesoc_sdram_interface_bank1_ready = basesoc_sdram_bankmachine1_req_ready;
assign basesoc_sdram_bankmachine1_req_we = basesoc_sdram_interface_bank1_we;
assign basesoc_sdram_bankmachine1_req_addr = basesoc_sdram_interface_bank1_addr;
assign basesoc_sdram_interface_bank1_lock = basesoc_sdram_bankmachine1_req_lock;
assign basesoc_sdram_interface_bank1_wdata_ready = basesoc_sdram_bankmachine1_req_wdata_ready;
assign basesoc_sdram_interface_bank1_rdata_valid = basesoc_sdram_bankmachine1_req_rdata_valid;
assign basesoc_sdram_bankmachine2_req_valid = basesoc_sdram_interface_bank2_valid;
assign basesoc_sdram_interface_bank2_ready = basesoc_sdram_bankmachine2_req_ready;
assign basesoc_sdram_bankmachine2_req_we = basesoc_sdram_interface_bank2_we;
assign basesoc_sdram_bankmachine2_req_addr = basesoc_sdram_interface_bank2_addr;
assign basesoc_sdram_interface_bank2_lock = basesoc_sdram_bankmachine2_req_lock;
assign basesoc_sdram_interface_bank2_wdata_ready = basesoc_sdram_bankmachine2_req_wdata_ready;
assign basesoc_sdram_interface_bank2_rdata_valid = basesoc_sdram_bankmachine2_req_rdata_valid;
assign basesoc_sdram_bankmachine3_req_valid = basesoc_sdram_interface_bank3_valid;
assign basesoc_sdram_interface_bank3_ready = basesoc_sdram_bankmachine3_req_ready;
assign basesoc_sdram_bankmachine3_req_we = basesoc_sdram_interface_bank3_we;
assign basesoc_sdram_bankmachine3_req_addr = basesoc_sdram_interface_bank3_addr;
assign basesoc_sdram_interface_bank3_lock = basesoc_sdram_bankmachine3_req_lock;
assign basesoc_sdram_interface_bank3_wdata_ready = basesoc_sdram_bankmachine3_req_wdata_ready;
assign basesoc_sdram_interface_bank3_rdata_valid = basesoc_sdram_bankmachine3_req_rdata_valid;
assign basesoc_sdram_bankmachine4_req_valid = basesoc_sdram_interface_bank4_valid;
assign basesoc_sdram_interface_bank4_ready = basesoc_sdram_bankmachine4_req_ready;
assign basesoc_sdram_bankmachine4_req_we = basesoc_sdram_interface_bank4_we;
assign basesoc_sdram_bankmachine4_req_addr = basesoc_sdram_interface_bank4_addr;
assign basesoc_sdram_interface_bank4_lock = basesoc_sdram_bankmachine4_req_lock;
assign basesoc_sdram_interface_bank4_wdata_ready = basesoc_sdram_bankmachine4_req_wdata_ready;
assign basesoc_sdram_interface_bank4_rdata_valid = basesoc_sdram_bankmachine4_req_rdata_valid;
assign basesoc_sdram_bankmachine5_req_valid = basesoc_sdram_interface_bank5_valid;
assign basesoc_sdram_interface_bank5_ready = basesoc_sdram_bankmachine5_req_ready;
assign basesoc_sdram_bankmachine5_req_we = basesoc_sdram_interface_bank5_we;
assign basesoc_sdram_bankmachine5_req_addr = basesoc_sdram_interface_bank5_addr;
assign basesoc_sdram_interface_bank5_lock = basesoc_sdram_bankmachine5_req_lock;
assign basesoc_sdram_interface_bank5_wdata_ready = basesoc_sdram_bankmachine5_req_wdata_ready;
assign basesoc_sdram_interface_bank5_rdata_valid = basesoc_sdram_bankmachine5_req_rdata_valid;
assign basesoc_sdram_bankmachine6_req_valid = basesoc_sdram_interface_bank6_valid;
assign basesoc_sdram_interface_bank6_ready = basesoc_sdram_bankmachine6_req_ready;
assign basesoc_sdram_bankmachine6_req_we = basesoc_sdram_interface_bank6_we;
assign basesoc_sdram_bankmachine6_req_addr = basesoc_sdram_interface_bank6_addr;
assign basesoc_sdram_interface_bank6_lock = basesoc_sdram_bankmachine6_req_lock;
assign basesoc_sdram_interface_bank6_wdata_ready = basesoc_sdram_bankmachine6_req_wdata_ready;
assign basesoc_sdram_interface_bank6_rdata_valid = basesoc_sdram_bankmachine6_req_rdata_valid;
assign basesoc_sdram_bankmachine7_req_valid = basesoc_sdram_interface_bank7_valid;
assign basesoc_sdram_interface_bank7_ready = basesoc_sdram_bankmachine7_req_ready;
assign basesoc_sdram_bankmachine7_req_we = basesoc_sdram_interface_bank7_we;
assign basesoc_sdram_bankmachine7_req_addr = basesoc_sdram_interface_bank7_addr;
assign basesoc_sdram_interface_bank7_lock = basesoc_sdram_bankmachine7_req_lock;
assign basesoc_sdram_interface_bank7_wdata_ready = basesoc_sdram_bankmachine7_req_wdata_ready;
assign basesoc_sdram_interface_bank7_rdata_valid = basesoc_sdram_bankmachine7_req_rdata_valid;
assign basesoc_sdram_timer_wait = (~basesoc_sdram_timer_done0);
assign basesoc_sdram_postponer_req_i = basesoc_sdram_timer_done0;
assign basesoc_sdram_wants_refresh = basesoc_sdram_postponer_req_o;
assign basesoc_sdram_wants_zqcs = basesoc_sdram_zqcs_timer_done0;
assign basesoc_sdram_zqcs_timer_wait = (~basesoc_sdram_zqcs_executer_done);
assign basesoc_sdram_timer_done1 = (basesoc_sdram_timer_count1 == 1'd0);
assign basesoc_sdram_timer_done0 = basesoc_sdram_timer_done1;
assign basesoc_sdram_timer_count0 = basesoc_sdram_timer_count1;
assign basesoc_sdram_sequencer_start1 = (basesoc_sdram_sequencer_start0 | (basesoc_sdram_sequencer_count != 1'd0));
assign basesoc_sdram_sequencer_done0 = (basesoc_sdram_sequencer_done1 & (basesoc_sdram_sequencer_count == 1'd0));
assign basesoc_sdram_zqcs_timer_done1 = (basesoc_sdram_zqcs_timer_count1 == 1'd0);
assign basesoc_sdram_zqcs_timer_done0 = basesoc_sdram_zqcs_timer_done1;
assign basesoc_sdram_zqcs_timer_count0 = basesoc_sdram_zqcs_timer_count1;
always @(*) begin
	basesoc_sdram_zqcs_executer_start <= 1'd0;
	basesoc_sdram_cmd_last <= 1'd0;
	basesoc_sdram_sequencer_start0 <= 1'd0;
	subfragments_refresher_next_state <= 2'd0;
	basesoc_sdram_cmd_valid <= 1'd0;
	subfragments_refresher_next_state <= subfragments_refresher_state;
	case (subfragments_refresher_state)
		1'd1: begin
			basesoc_sdram_cmd_valid <= 1'd1;
			if (basesoc_sdram_cmd_ready) begin
				basesoc_sdram_sequencer_start0 <= 1'd1;
				subfragments_refresher_next_state <= 2'd2;
			end
		end
		2'd2: begin
			basesoc_sdram_cmd_valid <= 1'd1;
			if (basesoc_sdram_sequencer_done0) begin
				if (basesoc_sdram_wants_zqcs) begin
					basesoc_sdram_zqcs_executer_start <= 1'd1;
					subfragments_refresher_next_state <= 2'd3;
				end else begin
					basesoc_sdram_cmd_valid <= 1'd0;
					basesoc_sdram_cmd_last <= 1'd1;
					subfragments_refresher_next_state <= 1'd0;
				end
			end
		end
		2'd3: begin
			basesoc_sdram_cmd_valid <= 1'd1;
			if (basesoc_sdram_zqcs_executer_done) begin
				basesoc_sdram_cmd_valid <= 1'd0;
				basesoc_sdram_cmd_last <= 1'd1;
				subfragments_refresher_next_state <= 1'd0;
			end
		end
		default: begin
			if (1'd1) begin
				if (basesoc_sdram_wants_refresh) begin
					subfragments_refresher_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine0_req_valid;
assign basesoc_sdram_bankmachine0_req_ready = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine0_req_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine0_req_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_valid = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine0_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_first = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_last = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_source_ready = (basesoc_sdram_bankmachine0_req_wdata_ready | basesoc_sdram_bankmachine0_req_rdata_valid);
assign basesoc_sdram_bankmachine0_req_lock = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine0_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine0_row_hit = (basesoc_sdram_bankmachine0_row == basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine0_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine0_cmd_payload_a <= basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine0_cmd_payload_a <= ((basesoc_sdram_bankmachine0_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine0_twtpcon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_cmd_payload_is_write);
assign basesoc_sdram_bankmachine0_trccon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_row_open);
assign basesoc_sdram_bankmachine0_trascon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_row_open);
always @(*) begin
	basesoc_sdram_bankmachine0_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine0_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine0_auto_precharge <= (basesoc_sdram_bankmachine0_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din = {basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable | basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable & basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re);
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout = basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable = (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine0_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine0_cmd_buffer_source_valid) | basesoc_sdram_bankmachine0_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine0_row_open <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine0_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine0_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine0_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine0_cmd_valid <= 1'd0;
	subfragments_bankmachine0_next_state <= 4'd0;
	basesoc_sdram_bankmachine0_row_close <= 1'd0;
	subfragments_bankmachine0_next_state <= subfragments_bankmachine0_state;
	case (subfragments_bankmachine0_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine0_twtpcon_ready & basesoc_sdram_bankmachine0_trascon_ready)) begin
				basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine0_cmd_ready) begin
					subfragments_bankmachine0_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine0_twtpcon_ready & basesoc_sdram_bankmachine0_trascon_ready)) begin
				subfragments_bankmachine0_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine0_trccon_ready) begin
				basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine0_row_open <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine0_cmd_ready) begin
					subfragments_bankmachine0_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine0_twtpcon_ready) begin
				basesoc_sdram_bankmachine0_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine0_row_close <= 1'd1;
			basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine0_refresh_req)) begin
				subfragments_bankmachine0_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine0_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine0_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine0_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine0_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine0_refresh_req) begin
				subfragments_bankmachine0_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine0_row_opened) begin
						if (basesoc_sdram_bankmachine0_row_hit) begin
							basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine0_req_wdata_ready <= basesoc_sdram_bankmachine0_cmd_ready;
								basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine0_req_rdata_valid <= basesoc_sdram_bankmachine0_cmd_ready;
								basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine0_cmd_ready & basesoc_sdram_bankmachine0_auto_precharge)) begin
								subfragments_bankmachine0_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine0_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine0_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine1_req_valid;
assign basesoc_sdram_bankmachine1_req_ready = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine1_req_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine1_req_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_valid = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine1_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_first = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_last = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_source_ready = (basesoc_sdram_bankmachine1_req_wdata_ready | basesoc_sdram_bankmachine1_req_rdata_valid);
assign basesoc_sdram_bankmachine1_req_lock = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine1_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine1_row_hit = (basesoc_sdram_bankmachine1_row == basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine1_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine1_cmd_payload_a <= basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine1_cmd_payload_a <= ((basesoc_sdram_bankmachine1_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine1_twtpcon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_cmd_payload_is_write);
assign basesoc_sdram_bankmachine1_trccon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_row_open);
assign basesoc_sdram_bankmachine1_trascon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_row_open);
always @(*) begin
	basesoc_sdram_bankmachine1_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine1_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine1_auto_precharge <= (basesoc_sdram_bankmachine1_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din = {basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable | basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable & basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re);
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout = basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable = (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine1_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine1_cmd_buffer_source_valid) | basesoc_sdram_bankmachine1_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine1_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine1_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine1_row_open <= 1'd0;
	basesoc_sdram_bankmachine1_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine1_cmd_valid <= 1'd0;
	subfragments_bankmachine1_next_state <= 4'd0;
	basesoc_sdram_bankmachine1_row_close <= 1'd0;
	subfragments_bankmachine1_next_state <= subfragments_bankmachine1_state;
	case (subfragments_bankmachine1_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine1_twtpcon_ready & basesoc_sdram_bankmachine1_trascon_ready)) begin
				basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine1_cmd_ready) begin
					subfragments_bankmachine1_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine1_twtpcon_ready & basesoc_sdram_bankmachine1_trascon_ready)) begin
				subfragments_bankmachine1_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine1_trccon_ready) begin
				basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine1_row_open <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine1_cmd_ready) begin
					subfragments_bankmachine1_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine1_twtpcon_ready) begin
				basesoc_sdram_bankmachine1_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine1_row_close <= 1'd1;
			basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine1_refresh_req)) begin
				subfragments_bankmachine1_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine1_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine1_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine1_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine1_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine1_refresh_req) begin
				subfragments_bankmachine1_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine1_row_opened) begin
						if (basesoc_sdram_bankmachine1_row_hit) begin
							basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine1_req_wdata_ready <= basesoc_sdram_bankmachine1_cmd_ready;
								basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine1_req_rdata_valid <= basesoc_sdram_bankmachine1_cmd_ready;
								basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine1_cmd_ready & basesoc_sdram_bankmachine1_auto_precharge)) begin
								subfragments_bankmachine1_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine1_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine1_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine2_req_valid;
assign basesoc_sdram_bankmachine2_req_ready = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine2_req_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine2_req_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_valid = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine2_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_first = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_last = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_source_ready = (basesoc_sdram_bankmachine2_req_wdata_ready | basesoc_sdram_bankmachine2_req_rdata_valid);
assign basesoc_sdram_bankmachine2_req_lock = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine2_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine2_row_hit = (basesoc_sdram_bankmachine2_row == basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine2_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine2_cmd_payload_a <= basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine2_cmd_payload_a <= ((basesoc_sdram_bankmachine2_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine2_twtpcon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_cmd_payload_is_write);
assign basesoc_sdram_bankmachine2_trccon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_row_open);
assign basesoc_sdram_bankmachine2_trascon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_row_open);
always @(*) begin
	basesoc_sdram_bankmachine2_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine2_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine2_auto_precharge <= (basesoc_sdram_bankmachine2_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din = {basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable | basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable & basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re);
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout = basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable = (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine2_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine2_cmd_buffer_source_valid) | basesoc_sdram_bankmachine2_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine2_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine2_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine2_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine2_cmd_valid <= 1'd0;
	basesoc_sdram_bankmachine2_row_open <= 1'd0;
	subfragments_bankmachine2_next_state <= 4'd0;
	basesoc_sdram_bankmachine2_row_close <= 1'd0;
	subfragments_bankmachine2_next_state <= subfragments_bankmachine2_state;
	case (subfragments_bankmachine2_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine2_twtpcon_ready & basesoc_sdram_bankmachine2_trascon_ready)) begin
				basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine2_cmd_ready) begin
					subfragments_bankmachine2_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine2_twtpcon_ready & basesoc_sdram_bankmachine2_trascon_ready)) begin
				subfragments_bankmachine2_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine2_trccon_ready) begin
				basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine2_row_open <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine2_cmd_ready) begin
					subfragments_bankmachine2_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine2_twtpcon_ready) begin
				basesoc_sdram_bankmachine2_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine2_row_close <= 1'd1;
			basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine2_refresh_req)) begin
				subfragments_bankmachine2_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine2_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine2_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine2_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine2_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine2_refresh_req) begin
				subfragments_bankmachine2_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine2_row_opened) begin
						if (basesoc_sdram_bankmachine2_row_hit) begin
							basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine2_req_wdata_ready <= basesoc_sdram_bankmachine2_cmd_ready;
								basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine2_req_rdata_valid <= basesoc_sdram_bankmachine2_cmd_ready;
								basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine2_cmd_ready & basesoc_sdram_bankmachine2_auto_precharge)) begin
								subfragments_bankmachine2_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine2_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine2_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine3_req_valid;
assign basesoc_sdram_bankmachine3_req_ready = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine3_req_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine3_req_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_valid = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine3_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_first = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_last = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_source_ready = (basesoc_sdram_bankmachine3_req_wdata_ready | basesoc_sdram_bankmachine3_req_rdata_valid);
assign basesoc_sdram_bankmachine3_req_lock = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine3_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine3_row_hit = (basesoc_sdram_bankmachine3_row == basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine3_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine3_cmd_payload_a <= basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine3_cmd_payload_a <= ((basesoc_sdram_bankmachine3_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine3_twtpcon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_cmd_payload_is_write);
assign basesoc_sdram_bankmachine3_trccon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_row_open);
assign basesoc_sdram_bankmachine3_trascon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_row_open);
always @(*) begin
	basesoc_sdram_bankmachine3_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine3_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine3_auto_precharge <= (basesoc_sdram_bankmachine3_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din = {basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable | basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable & basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re);
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout = basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable = (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine3_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine3_cmd_buffer_source_valid) | basesoc_sdram_bankmachine3_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine3_row_open <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine3_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine3_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine3_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine3_cmd_valid <= 1'd0;
	subfragments_bankmachine3_next_state <= 4'd0;
	basesoc_sdram_bankmachine3_row_close <= 1'd0;
	subfragments_bankmachine3_next_state <= subfragments_bankmachine3_state;
	case (subfragments_bankmachine3_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine3_twtpcon_ready & basesoc_sdram_bankmachine3_trascon_ready)) begin
				basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine3_cmd_ready) begin
					subfragments_bankmachine3_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine3_twtpcon_ready & basesoc_sdram_bankmachine3_trascon_ready)) begin
				subfragments_bankmachine3_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine3_trccon_ready) begin
				basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine3_row_open <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine3_cmd_ready) begin
					subfragments_bankmachine3_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine3_twtpcon_ready) begin
				basesoc_sdram_bankmachine3_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine3_row_close <= 1'd1;
			basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine3_refresh_req)) begin
				subfragments_bankmachine3_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine3_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine3_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine3_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine3_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine3_refresh_req) begin
				subfragments_bankmachine3_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine3_row_opened) begin
						if (basesoc_sdram_bankmachine3_row_hit) begin
							basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine3_req_wdata_ready <= basesoc_sdram_bankmachine3_cmd_ready;
								basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine3_req_rdata_valid <= basesoc_sdram_bankmachine3_cmd_ready;
								basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine3_cmd_ready & basesoc_sdram_bankmachine3_auto_precharge)) begin
								subfragments_bankmachine3_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine3_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine3_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine4_req_valid;
assign basesoc_sdram_bankmachine4_req_ready = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine4_req_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine4_req_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_valid = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine4_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_first = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_last = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_source_ready = (basesoc_sdram_bankmachine4_req_wdata_ready | basesoc_sdram_bankmachine4_req_rdata_valid);
assign basesoc_sdram_bankmachine4_req_lock = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine4_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine4_row_hit = (basesoc_sdram_bankmachine4_row == basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine4_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine4_cmd_payload_a <= basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine4_cmd_payload_a <= ((basesoc_sdram_bankmachine4_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine4_twtpcon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_cmd_payload_is_write);
assign basesoc_sdram_bankmachine4_trccon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_row_open);
assign basesoc_sdram_bankmachine4_trascon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_row_open);
always @(*) begin
	basesoc_sdram_bankmachine4_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine4_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine4_auto_precharge <= (basesoc_sdram_bankmachine4_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din = {basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable | basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable & basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re);
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout = basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable = (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine4_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine4_cmd_buffer_source_valid) | basesoc_sdram_bankmachine4_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine4_row_open <= 1'd0;
	basesoc_sdram_bankmachine4_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine4_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine4_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine4_cmd_valid <= 1'd0;
	subfragments_bankmachine4_next_state <= 4'd0;
	basesoc_sdram_bankmachine4_row_close <= 1'd0;
	subfragments_bankmachine4_next_state <= subfragments_bankmachine4_state;
	case (subfragments_bankmachine4_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine4_twtpcon_ready & basesoc_sdram_bankmachine4_trascon_ready)) begin
				basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine4_cmd_ready) begin
					subfragments_bankmachine4_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine4_twtpcon_ready & basesoc_sdram_bankmachine4_trascon_ready)) begin
				subfragments_bankmachine4_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine4_trccon_ready) begin
				basesoc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine4_row_open <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine4_cmd_ready) begin
					subfragments_bankmachine4_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine4_twtpcon_ready) begin
				basesoc_sdram_bankmachine4_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine4_row_close <= 1'd1;
			basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine4_refresh_req)) begin
				subfragments_bankmachine4_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine4_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine4_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine4_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine4_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine4_refresh_req) begin
				subfragments_bankmachine4_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine4_row_opened) begin
						if (basesoc_sdram_bankmachine4_row_hit) begin
							basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine4_req_wdata_ready <= basesoc_sdram_bankmachine4_cmd_ready;
								basesoc_sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine4_req_rdata_valid <= basesoc_sdram_bankmachine4_cmd_ready;
								basesoc_sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine4_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine4_cmd_ready & basesoc_sdram_bankmachine4_auto_precharge)) begin
								subfragments_bankmachine4_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine4_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine4_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine5_req_valid;
assign basesoc_sdram_bankmachine5_req_ready = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine5_req_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine5_req_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_valid = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine5_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_first = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_last = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_source_ready = (basesoc_sdram_bankmachine5_req_wdata_ready | basesoc_sdram_bankmachine5_req_rdata_valid);
assign basesoc_sdram_bankmachine5_req_lock = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine5_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine5_row_hit = (basesoc_sdram_bankmachine5_row == basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine5_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine5_cmd_payload_a <= basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine5_cmd_payload_a <= ((basesoc_sdram_bankmachine5_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine5_twtpcon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_cmd_payload_is_write);
assign basesoc_sdram_bankmachine5_trccon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_row_open);
assign basesoc_sdram_bankmachine5_trascon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_row_open);
always @(*) begin
	basesoc_sdram_bankmachine5_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine5_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine5_auto_precharge <= (basesoc_sdram_bankmachine5_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din = {basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable | basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable & basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re);
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout = basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable = (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine5_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine5_cmd_buffer_source_valid) | basesoc_sdram_bankmachine5_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine5_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine5_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine5_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine5_row_open <= 1'd0;
	basesoc_sdram_bankmachine5_cmd_valid <= 1'd0;
	subfragments_bankmachine5_next_state <= 4'd0;
	basesoc_sdram_bankmachine5_row_close <= 1'd0;
	subfragments_bankmachine5_next_state <= subfragments_bankmachine5_state;
	case (subfragments_bankmachine5_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine5_twtpcon_ready & basesoc_sdram_bankmachine5_trascon_ready)) begin
				basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine5_cmd_ready) begin
					subfragments_bankmachine5_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine5_twtpcon_ready & basesoc_sdram_bankmachine5_trascon_ready)) begin
				subfragments_bankmachine5_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine5_trccon_ready) begin
				basesoc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine5_row_open <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine5_cmd_ready) begin
					subfragments_bankmachine5_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine5_twtpcon_ready) begin
				basesoc_sdram_bankmachine5_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine5_row_close <= 1'd1;
			basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine5_refresh_req)) begin
				subfragments_bankmachine5_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine5_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine5_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine5_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine5_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine5_refresh_req) begin
				subfragments_bankmachine5_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine5_row_opened) begin
						if (basesoc_sdram_bankmachine5_row_hit) begin
							basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine5_req_wdata_ready <= basesoc_sdram_bankmachine5_cmd_ready;
								basesoc_sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine5_req_rdata_valid <= basesoc_sdram_bankmachine5_cmd_ready;
								basesoc_sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine5_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine5_cmd_ready & basesoc_sdram_bankmachine5_auto_precharge)) begin
								subfragments_bankmachine5_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine5_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine5_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine6_req_valid;
assign basesoc_sdram_bankmachine6_req_ready = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine6_req_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine6_req_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_valid = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine6_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_first = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_last = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_source_ready = (basesoc_sdram_bankmachine6_req_wdata_ready | basesoc_sdram_bankmachine6_req_rdata_valid);
assign basesoc_sdram_bankmachine6_req_lock = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine6_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine6_row_hit = (basesoc_sdram_bankmachine6_row == basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine6_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine6_cmd_payload_a <= basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine6_cmd_payload_a <= ((basesoc_sdram_bankmachine6_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine6_twtpcon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_cmd_payload_is_write);
assign basesoc_sdram_bankmachine6_trccon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_row_open);
assign basesoc_sdram_bankmachine6_trascon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_row_open);
always @(*) begin
	basesoc_sdram_bankmachine6_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine6_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine6_auto_precharge <= (basesoc_sdram_bankmachine6_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din = {basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable | basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable & basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re);
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout = basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable = (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine6_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine6_cmd_buffer_source_valid) | basesoc_sdram_bankmachine6_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine6_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine6_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine6_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine6_cmd_valid <= 1'd0;
	subfragments_bankmachine6_next_state <= 4'd0;
	basesoc_sdram_bankmachine6_row_open <= 1'd0;
	basesoc_sdram_bankmachine6_row_close <= 1'd0;
	subfragments_bankmachine6_next_state <= subfragments_bankmachine6_state;
	case (subfragments_bankmachine6_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine6_twtpcon_ready & basesoc_sdram_bankmachine6_trascon_ready)) begin
				basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine6_cmd_ready) begin
					subfragments_bankmachine6_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine6_twtpcon_ready & basesoc_sdram_bankmachine6_trascon_ready)) begin
				subfragments_bankmachine6_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine6_trccon_ready) begin
				basesoc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine6_row_open <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine6_cmd_ready) begin
					subfragments_bankmachine6_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine6_twtpcon_ready) begin
				basesoc_sdram_bankmachine6_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine6_row_close <= 1'd1;
			basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine6_refresh_req)) begin
				subfragments_bankmachine6_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine6_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine6_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine6_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine6_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine6_refresh_req) begin
				subfragments_bankmachine6_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine6_row_opened) begin
						if (basesoc_sdram_bankmachine6_row_hit) begin
							basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine6_req_wdata_ready <= basesoc_sdram_bankmachine6_cmd_ready;
								basesoc_sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine6_req_rdata_valid <= basesoc_sdram_bankmachine6_cmd_ready;
								basesoc_sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine6_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine6_cmd_ready & basesoc_sdram_bankmachine6_auto_precharge)) begin
								subfragments_bankmachine6_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine6_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine6_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid = basesoc_sdram_bankmachine7_req_valid;
assign basesoc_sdram_bankmachine7_req_ready = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we = basesoc_sdram_bankmachine7_req_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr = basesoc_sdram_bankmachine7_req_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_valid = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready = basesoc_sdram_bankmachine7_cmd_buffer_sink_ready;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_first = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_first;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_last = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_last;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_addr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_source_ready = (basesoc_sdram_bankmachine7_req_wdata_ready | basesoc_sdram_bankmachine7_req_rdata_valid);
assign basesoc_sdram_bankmachine7_req_lock = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid | basesoc_sdram_bankmachine7_cmd_buffer_source_valid);
assign basesoc_sdram_bankmachine7_row_hit = (basesoc_sdram_bankmachine7_row == basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[22:7]);
assign basesoc_sdram_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_payload_a <= 16'd0;
	if (basesoc_sdram_bankmachine7_row_col_n_addr_sel) begin
		basesoc_sdram_bankmachine7_cmd_payload_a <= basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[22:7];
	end else begin
		basesoc_sdram_bankmachine7_cmd_payload_a <= ((basesoc_sdram_bankmachine7_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[6:0], {3{1'd0}}});
	end
end
assign basesoc_sdram_bankmachine7_twtpcon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_cmd_payload_is_write);
assign basesoc_sdram_bankmachine7_trccon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_row_open);
assign basesoc_sdram_bankmachine7_trascon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_row_open);
always @(*) begin
	basesoc_sdram_bankmachine7_auto_precharge <= 1'd0;
	if ((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid & basesoc_sdram_bankmachine7_cmd_buffer_source_valid)) begin
		if ((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr[22:7] != basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[22:7])) begin
			basesoc_sdram_bankmachine7_auto_precharge <= (basesoc_sdram_bankmachine7_row_close == 1'd0);
		end
	end
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din = {basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_first;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_last;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_first = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_last = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= 3'd0;
	if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace) begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce;
	end
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable | basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace));
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable & basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re);
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout = basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level != 4'd8);
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable = (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level != 1'd0);
assign basesoc_sdram_bankmachine7_cmd_buffer_sink_ready = ((~basesoc_sdram_bankmachine7_cmd_buffer_source_valid) | basesoc_sdram_bankmachine7_cmd_buffer_source_ready);
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_payload_cas <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd0;
	basesoc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
	basesoc_sdram_bankmachine7_row_open <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
	basesoc_sdram_bankmachine7_req_wdata_ready <= 1'd0;
	basesoc_sdram_bankmachine7_req_rdata_valid <= 1'd0;
	basesoc_sdram_bankmachine7_refresh_gnt <= 1'd0;
	basesoc_sdram_bankmachine7_cmd_valid <= 1'd0;
	subfragments_bankmachine7_next_state <= 4'd0;
	basesoc_sdram_bankmachine7_row_close <= 1'd0;
	subfragments_bankmachine7_next_state <= subfragments_bankmachine7_state;
	case (subfragments_bankmachine7_state)
		1'd1: begin
			if ((basesoc_sdram_bankmachine7_twtpcon_ready & basesoc_sdram_bankmachine7_trascon_ready)) begin
				basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
				if (basesoc_sdram_bankmachine7_cmd_ready) begin
					subfragments_bankmachine7_next_state <= 3'd5;
				end
				basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			end
			basesoc_sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd2: begin
			if ((basesoc_sdram_bankmachine7_twtpcon_ready & basesoc_sdram_bankmachine7_trascon_ready)) begin
				subfragments_bankmachine7_next_state <= 3'd5;
			end
			basesoc_sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd3: begin
			if (basesoc_sdram_bankmachine7_trccon_ready) begin
				basesoc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
				basesoc_sdram_bankmachine7_row_open <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
				basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
				if (basesoc_sdram_bankmachine7_cmd_ready) begin
					subfragments_bankmachine7_next_state <= 3'd7;
				end
				basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
			if (basesoc_sdram_bankmachine7_twtpcon_ready) begin
				basesoc_sdram_bankmachine7_refresh_gnt <= 1'd1;
			end
			basesoc_sdram_bankmachine7_row_close <= 1'd1;
			basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			if ((~basesoc_sdram_bankmachine7_refresh_req)) begin
				subfragments_bankmachine7_next_state <= 1'd0;
			end
		end
		3'd5: begin
			subfragments_bankmachine7_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_bankmachine7_next_state <= 2'd3;
		end
		3'd7: begin
			subfragments_bankmachine7_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_bankmachine7_next_state <= 1'd0;
		end
		default: begin
			if (basesoc_sdram_bankmachine7_refresh_req) begin
				subfragments_bankmachine7_next_state <= 3'd4;
			end else begin
				if (basesoc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (basesoc_sdram_bankmachine7_row_opened) begin
						if (basesoc_sdram_bankmachine7_row_hit) begin
							basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
							if (basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
								basesoc_sdram_bankmachine7_req_wdata_ready <= basesoc_sdram_bankmachine7_cmd_ready;
								basesoc_sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
								basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
							end else begin
								basesoc_sdram_bankmachine7_req_rdata_valid <= basesoc_sdram_bankmachine7_cmd_ready;
								basesoc_sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
							end
							basesoc_sdram_bankmachine7_cmd_payload_cas <= 1'd1;
							if ((basesoc_sdram_bankmachine7_cmd_ready & basesoc_sdram_bankmachine7_auto_precharge)) begin
								subfragments_bankmachine7_next_state <= 2'd2;
							end
						end else begin
							subfragments_bankmachine7_next_state <= 1'd1;
						end
					end else begin
						subfragments_bankmachine7_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign basesoc_sdram_rdcmdphase = (a7ddrphy_rdphase_storage - 1'd1);
assign basesoc_sdram_wrcmdphase = (a7ddrphy_wrphase_storage - 1'd1);
assign basesoc_sdram_trrdcon_valid = ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & ((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we)));
assign basesoc_sdram_tfawcon_valid = ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & ((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we)));
assign basesoc_sdram_ras_allowed = (basesoc_sdram_trrdcon_ready & basesoc_sdram_tfawcon_ready);
assign basesoc_sdram_tccdcon_valid = ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_cmd_payload_is_write | basesoc_sdram_choose_req_cmd_payload_is_read));
assign basesoc_sdram_cas_allowed = basesoc_sdram_tccdcon_ready;
assign basesoc_sdram_twtrcon_valid = ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
assign basesoc_sdram_read_available = ((((((((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_payload_is_read) | (basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_payload_is_read)) | (basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_payload_is_read)) | (basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_payload_is_read)) | (basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_payload_is_read)) | (basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_payload_is_read)) | (basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_payload_is_read)) | (basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_payload_is_read));
assign basesoc_sdram_write_available = ((((((((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_payload_is_write) | (basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_payload_is_write)) | (basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_payload_is_write)) | (basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_payload_is_write)) | (basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_payload_is_write)) | (basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_payload_is_write)) | (basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_payload_is_write)) | (basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_payload_is_write));
assign basesoc_sdram_max_time0 = (basesoc_sdram_time0 == 1'd0);
assign basesoc_sdram_max_time1 = (basesoc_sdram_time1 == 1'd0);
assign basesoc_sdram_bankmachine0_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine1_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine2_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine3_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine4_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine5_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine6_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine7_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_go_to_refresh = (((((((basesoc_sdram_bankmachine0_refresh_gnt & basesoc_sdram_bankmachine1_refresh_gnt) & basesoc_sdram_bankmachine2_refresh_gnt) & basesoc_sdram_bankmachine3_refresh_gnt) & basesoc_sdram_bankmachine4_refresh_gnt) & basesoc_sdram_bankmachine5_refresh_gnt) & basesoc_sdram_bankmachine6_refresh_gnt) & basesoc_sdram_bankmachine7_refresh_gnt);
assign basesoc_sdram_interface_rdata = {basesoc_sdram_dfi_p3_rddata, basesoc_sdram_dfi_p2_rddata, basesoc_sdram_dfi_p1_rddata, basesoc_sdram_dfi_p0_rddata};
assign {basesoc_sdram_dfi_p3_wrdata, basesoc_sdram_dfi_p2_wrdata, basesoc_sdram_dfi_p1_wrdata, basesoc_sdram_dfi_p0_wrdata} = basesoc_sdram_interface_wdata;
assign {basesoc_sdram_dfi_p3_wrdata_mask, basesoc_sdram_dfi_p2_wrdata_mask, basesoc_sdram_dfi_p1_wrdata_mask, basesoc_sdram_dfi_p0_wrdata_mask} = (~basesoc_sdram_interface_wdata_we);
always @(*) begin
	basesoc_sdram_choose_cmd_valids <= 8'd0;
	basesoc_sdram_choose_cmd_valids[0] <= (basesoc_sdram_bankmachine0_cmd_valid & (((basesoc_sdram_bankmachine0_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine0_cmd_payload_ras & (~basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~basesoc_sdram_bankmachine0_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine0_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine0_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[1] <= (basesoc_sdram_bankmachine1_cmd_valid & (((basesoc_sdram_bankmachine1_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine1_cmd_payload_ras & (~basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~basesoc_sdram_bankmachine1_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine1_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine1_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[2] <= (basesoc_sdram_bankmachine2_cmd_valid & (((basesoc_sdram_bankmachine2_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine2_cmd_payload_ras & (~basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~basesoc_sdram_bankmachine2_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine2_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine2_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[3] <= (basesoc_sdram_bankmachine3_cmd_valid & (((basesoc_sdram_bankmachine3_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine3_cmd_payload_ras & (~basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~basesoc_sdram_bankmachine3_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine3_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine3_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[4] <= (basesoc_sdram_bankmachine4_cmd_valid & (((basesoc_sdram_bankmachine4_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine4_cmd_payload_ras & (~basesoc_sdram_bankmachine4_cmd_payload_cas)) & (~basesoc_sdram_bankmachine4_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine4_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine4_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[5] <= (basesoc_sdram_bankmachine5_cmd_valid & (((basesoc_sdram_bankmachine5_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine5_cmd_payload_ras & (~basesoc_sdram_bankmachine5_cmd_payload_cas)) & (~basesoc_sdram_bankmachine5_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine5_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine5_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[6] <= (basesoc_sdram_bankmachine6_cmd_valid & (((basesoc_sdram_bankmachine6_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine6_cmd_payload_ras & (~basesoc_sdram_bankmachine6_cmd_payload_cas)) & (~basesoc_sdram_bankmachine6_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine6_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine6_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
	basesoc_sdram_choose_cmd_valids[7] <= (basesoc_sdram_bankmachine7_cmd_valid & (((basesoc_sdram_bankmachine7_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine7_cmd_payload_ras & (~basesoc_sdram_bankmachine7_cmd_payload_cas)) & (~basesoc_sdram_bankmachine7_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine7_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine7_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
end
assign basesoc_sdram_choose_cmd_request = basesoc_sdram_choose_cmd_valids;
assign basesoc_sdram_choose_cmd_cmd_valid = comb_rhs_array_muxed0;
assign basesoc_sdram_choose_cmd_cmd_payload_a = comb_rhs_array_muxed1;
assign basesoc_sdram_choose_cmd_cmd_payload_ba = comb_rhs_array_muxed2;
assign basesoc_sdram_choose_cmd_cmd_payload_is_read = comb_rhs_array_muxed3;
assign basesoc_sdram_choose_cmd_cmd_payload_is_write = comb_rhs_array_muxed4;
assign basesoc_sdram_choose_cmd_cmd_payload_is_cmd = comb_rhs_array_muxed5;
always @(*) begin
	basesoc_sdram_choose_cmd_cmd_payload_cas <= 1'd0;
	if (basesoc_sdram_choose_cmd_cmd_valid) begin
		basesoc_sdram_choose_cmd_cmd_payload_cas <= comb_t_array_muxed0;
	end
end
always @(*) begin
	basesoc_sdram_choose_cmd_cmd_payload_ras <= 1'd0;
	if (basesoc_sdram_choose_cmd_cmd_valid) begin
		basesoc_sdram_choose_cmd_cmd_payload_ras <= comb_t_array_muxed1;
	end
end
always @(*) begin
	basesoc_sdram_choose_cmd_cmd_payload_we <= 1'd0;
	if (basesoc_sdram_choose_cmd_cmd_valid) begin
		basesoc_sdram_choose_cmd_cmd_payload_we <= comb_t_array_muxed2;
	end
end
assign basesoc_sdram_choose_cmd_ce = (basesoc_sdram_choose_cmd_cmd_ready | (~basesoc_sdram_choose_cmd_cmd_valid));
always @(*) begin
	basesoc_sdram_choose_req_valids <= 8'd0;
	basesoc_sdram_choose_req_valids[0] <= (basesoc_sdram_bankmachine0_cmd_valid & (((basesoc_sdram_bankmachine0_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine0_cmd_payload_ras & (~basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~basesoc_sdram_bankmachine0_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine0_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine0_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[1] <= (basesoc_sdram_bankmachine1_cmd_valid & (((basesoc_sdram_bankmachine1_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine1_cmd_payload_ras & (~basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~basesoc_sdram_bankmachine1_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine1_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine1_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[2] <= (basesoc_sdram_bankmachine2_cmd_valid & (((basesoc_sdram_bankmachine2_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine2_cmd_payload_ras & (~basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~basesoc_sdram_bankmachine2_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine2_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine2_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[3] <= (basesoc_sdram_bankmachine3_cmd_valid & (((basesoc_sdram_bankmachine3_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine3_cmd_payload_ras & (~basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~basesoc_sdram_bankmachine3_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine3_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine3_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[4] <= (basesoc_sdram_bankmachine4_cmd_valid & (((basesoc_sdram_bankmachine4_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine4_cmd_payload_ras & (~basesoc_sdram_bankmachine4_cmd_payload_cas)) & (~basesoc_sdram_bankmachine4_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine4_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine4_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[5] <= (basesoc_sdram_bankmachine5_cmd_valid & (((basesoc_sdram_bankmachine5_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine5_cmd_payload_ras & (~basesoc_sdram_bankmachine5_cmd_payload_cas)) & (~basesoc_sdram_bankmachine5_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine5_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine5_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[6] <= (basesoc_sdram_bankmachine6_cmd_valid & (((basesoc_sdram_bankmachine6_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine6_cmd_payload_ras & (~basesoc_sdram_bankmachine6_cmd_payload_cas)) & (~basesoc_sdram_bankmachine6_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine6_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine6_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
	basesoc_sdram_choose_req_valids[7] <= (basesoc_sdram_bankmachine7_cmd_valid & (((basesoc_sdram_bankmachine7_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine7_cmd_payload_ras & (~basesoc_sdram_bankmachine7_cmd_payload_cas)) & (~basesoc_sdram_bankmachine7_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine7_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine7_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
end
assign basesoc_sdram_choose_req_request = basesoc_sdram_choose_req_valids;
assign basesoc_sdram_choose_req_cmd_valid = comb_rhs_array_muxed6;
assign basesoc_sdram_choose_req_cmd_payload_a = comb_rhs_array_muxed7;
assign basesoc_sdram_choose_req_cmd_payload_ba = comb_rhs_array_muxed8;
assign basesoc_sdram_choose_req_cmd_payload_is_read = comb_rhs_array_muxed9;
assign basesoc_sdram_choose_req_cmd_payload_is_write = comb_rhs_array_muxed10;
assign basesoc_sdram_choose_req_cmd_payload_is_cmd = comb_rhs_array_muxed11;
always @(*) begin
	basesoc_sdram_choose_req_cmd_payload_cas <= 1'd0;
	if (basesoc_sdram_choose_req_cmd_valid) begin
		basesoc_sdram_choose_req_cmd_payload_cas <= comb_t_array_muxed3;
	end
end
always @(*) begin
	basesoc_sdram_choose_req_cmd_payload_ras <= 1'd0;
	if (basesoc_sdram_choose_req_cmd_valid) begin
		basesoc_sdram_choose_req_cmd_payload_ras <= comb_t_array_muxed4;
	end
end
always @(*) begin
	basesoc_sdram_choose_req_cmd_payload_we <= 1'd0;
	if (basesoc_sdram_choose_req_cmd_valid) begin
		basesoc_sdram_choose_req_cmd_payload_we <= comb_t_array_muxed5;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine0_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 1'd0))) begin
		basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 1'd0))) begin
		basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine1_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 1'd1))) begin
		basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 1'd1))) begin
		basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine2_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 2'd2))) begin
		basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 2'd2))) begin
		basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine3_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 2'd3))) begin
		basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 2'd3))) begin
		basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine4_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd4))) begin
		basesoc_sdram_bankmachine4_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd4))) begin
		basesoc_sdram_bankmachine4_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine5_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd5))) begin
		basesoc_sdram_bankmachine5_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd5))) begin
		basesoc_sdram_bankmachine5_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine6_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd6))) begin
		basesoc_sdram_bankmachine6_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd6))) begin
		basesoc_sdram_bankmachine6_cmd_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_sdram_bankmachine7_cmd_ready <= 1'd0;
	if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd7))) begin
		basesoc_sdram_bankmachine7_cmd_ready <= 1'd1;
	end
	if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd7))) begin
		basesoc_sdram_bankmachine7_cmd_ready <= 1'd1;
	end
end
assign basesoc_sdram_choose_req_ce = (basesoc_sdram_choose_req_cmd_ready | (~basesoc_sdram_choose_req_cmd_valid));
assign basesoc_sdram_dfi_p0_reset_n = 1'd1;
assign basesoc_sdram_dfi_p0_cke = {1{basesoc_sdram_steerer0}};
assign basesoc_sdram_dfi_p0_odt = {1{basesoc_sdram_steerer1}};
assign basesoc_sdram_dfi_p1_reset_n = 1'd1;
assign basesoc_sdram_dfi_p1_cke = {1{basesoc_sdram_steerer2}};
assign basesoc_sdram_dfi_p1_odt = {1{basesoc_sdram_steerer3}};
assign basesoc_sdram_dfi_p2_reset_n = 1'd1;
assign basesoc_sdram_dfi_p2_cke = {1{basesoc_sdram_steerer4}};
assign basesoc_sdram_dfi_p2_odt = {1{basesoc_sdram_steerer5}};
assign basesoc_sdram_dfi_p3_reset_n = 1'd1;
assign basesoc_sdram_dfi_p3_cke = {1{basesoc_sdram_steerer6}};
assign basesoc_sdram_dfi_p3_odt = {1{basesoc_sdram_steerer7}};
assign basesoc_sdram_tfawcon_count = ((((basesoc_sdram_tfawcon_window[0] + basesoc_sdram_tfawcon_window[1]) + basesoc_sdram_tfawcon_window[2]) + basesoc_sdram_tfawcon_window[3]) + basesoc_sdram_tfawcon_window[4]);
always @(*) begin
	basesoc_sdram_choose_req_cmd_ready <= 1'd0;
	basesoc_sdram_en1 <= 1'd0;
	basesoc_sdram_steerer_sel0 <= 2'd0;
	basesoc_sdram_cmd_ready <= 1'd0;
	basesoc_sdram_steerer_sel1 <= 2'd0;
	basesoc_sdram_steerer_sel2 <= 2'd0;
	basesoc_sdram_choose_req_want_writes <= 1'd0;
	basesoc_sdram_choose_cmd_want_activates <= 1'd0;
	basesoc_sdram_steerer_sel3 <= 2'd0;
	basesoc_sdram_en0 <= 1'd0;
	basesoc_sdram_choose_cmd_cmd_ready <= 1'd0;
	basesoc_sdram_choose_req_want_reads <= 1'd0;
	subfragments_multiplexer_next_state <= 4'd0;
	subfragments_multiplexer_next_state <= subfragments_multiplexer_state;
	case (subfragments_multiplexer_state)
		1'd1: begin
			basesoc_sdram_en1 <= 1'd1;
			basesoc_sdram_choose_req_want_writes <= 1'd1;
			if (1'd0) begin
				basesoc_sdram_choose_req_cmd_ready <= (basesoc_sdram_cas_allowed & ((~((basesoc_sdram_choose_req_cmd_payload_ras & (~basesoc_sdram_choose_req_cmd_payload_cas)) & (~basesoc_sdram_choose_req_cmd_payload_we))) | basesoc_sdram_ras_allowed));
			end else begin
				basesoc_sdram_choose_cmd_want_activates <= basesoc_sdram_ras_allowed;
				basesoc_sdram_choose_cmd_cmd_ready <= ((~((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we))) | basesoc_sdram_ras_allowed);
				basesoc_sdram_choose_req_cmd_ready <= basesoc_sdram_cas_allowed;
			end
			basesoc_sdram_steerer_sel0 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 1'd1;
			end
			basesoc_sdram_steerer_sel1 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 1'd1;
			end
			basesoc_sdram_steerer_sel2 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 1'd1;
			end
			basesoc_sdram_steerer_sel3 <= 1'd0;
			if ((a7ddrphy_wrphase_storage == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 2'd2;
			end
			if ((basesoc_sdram_wrcmdphase == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 1'd1;
			end
			if (basesoc_sdram_read_available) begin
				if (((~basesoc_sdram_write_available) | basesoc_sdram_max_time1)) begin
					subfragments_multiplexer_next_state <= 2'd3;
				end
			end
			if (basesoc_sdram_go_to_refresh) begin
				subfragments_multiplexer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			basesoc_sdram_steerer_sel0 <= 2'd3;
			basesoc_sdram_cmd_ready <= 1'd1;
			if (basesoc_sdram_cmd_last) begin
				subfragments_multiplexer_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (basesoc_sdram_twtrcon_ready) begin
				subfragments_multiplexer_next_state <= 1'd0;
			end
		end
		3'd4: begin
			subfragments_multiplexer_next_state <= 3'd5;
		end
		3'd5: begin
			subfragments_multiplexer_next_state <= 3'd6;
		end
		3'd6: begin
			subfragments_multiplexer_next_state <= 3'd7;
		end
		3'd7: begin
			subfragments_multiplexer_next_state <= 4'd8;
		end
		4'd8: begin
			subfragments_multiplexer_next_state <= 4'd9;
		end
		4'd9: begin
			subfragments_multiplexer_next_state <= 4'd10;
		end
		4'd10: begin
			subfragments_multiplexer_next_state <= 1'd1;
		end
		default: begin
			basesoc_sdram_en0 <= 1'd1;
			basesoc_sdram_choose_req_want_reads <= 1'd1;
			if (1'd0) begin
				basesoc_sdram_choose_req_cmd_ready <= (basesoc_sdram_cas_allowed & ((~((basesoc_sdram_choose_req_cmd_payload_ras & (~basesoc_sdram_choose_req_cmd_payload_cas)) & (~basesoc_sdram_choose_req_cmd_payload_we))) | basesoc_sdram_ras_allowed));
			end else begin
				basesoc_sdram_choose_cmd_want_activates <= basesoc_sdram_ras_allowed;
				basesoc_sdram_choose_cmd_cmd_ready <= ((~((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we))) | basesoc_sdram_ras_allowed);
				basesoc_sdram_choose_req_cmd_ready <= basesoc_sdram_cas_allowed;
			end
			basesoc_sdram_steerer_sel0 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 1'd0)) begin
				basesoc_sdram_steerer_sel0 <= 1'd1;
			end
			basesoc_sdram_steerer_sel1 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 1'd1)) begin
				basesoc_sdram_steerer_sel1 <= 1'd1;
			end
			basesoc_sdram_steerer_sel2 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 2'd2)) begin
				basesoc_sdram_steerer_sel2 <= 1'd1;
			end
			basesoc_sdram_steerer_sel3 <= 1'd0;
			if ((a7ddrphy_rdphase_storage == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 2'd2;
			end
			if ((basesoc_sdram_rdcmdphase == 2'd3)) begin
				basesoc_sdram_steerer_sel3 <= 1'd1;
			end
			if (basesoc_sdram_write_available) begin
				if (((~basesoc_sdram_read_available) | basesoc_sdram_max_time0)) begin
					subfragments_multiplexer_next_state <= 3'd4;
				end
			end
			if (basesoc_sdram_go_to_refresh) begin
				subfragments_multiplexer_next_state <= 2'd2;
			end
		end
	endcase
end
assign subfragments_roundrobin0_request = {(((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((subfragments_locked0 | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin0_ce = ((~basesoc_sdram_interface_bank0_valid) & (~basesoc_sdram_interface_bank0_lock));
assign basesoc_sdram_interface_bank0_addr = comb_rhs_array_muxed12;
assign basesoc_sdram_interface_bank0_we = comb_rhs_array_muxed13;
assign basesoc_sdram_interface_bank0_valid = comb_rhs_array_muxed14;
assign subfragments_roundrobin1_request = {(((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((subfragments_locked1 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin1_ce = ((~basesoc_sdram_interface_bank1_valid) & (~basesoc_sdram_interface_bank1_lock));
assign basesoc_sdram_interface_bank1_addr = comb_rhs_array_muxed15;
assign basesoc_sdram_interface_bank1_we = comb_rhs_array_muxed16;
assign basesoc_sdram_interface_bank1_valid = comb_rhs_array_muxed17;
assign subfragments_roundrobin2_request = {(((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((subfragments_locked2 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin2_ce = ((~basesoc_sdram_interface_bank2_valid) & (~basesoc_sdram_interface_bank2_lock));
assign basesoc_sdram_interface_bank2_addr = comb_rhs_array_muxed18;
assign basesoc_sdram_interface_bank2_we = comb_rhs_array_muxed19;
assign basesoc_sdram_interface_bank2_valid = comb_rhs_array_muxed20;
assign subfragments_roundrobin3_request = {(((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((subfragments_locked3 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin3_ce = ((~basesoc_sdram_interface_bank3_valid) & (~basesoc_sdram_interface_bank3_lock));
assign basesoc_sdram_interface_bank3_addr = comb_rhs_array_muxed21;
assign basesoc_sdram_interface_bank3_we = comb_rhs_array_muxed22;
assign basesoc_sdram_interface_bank3_valid = comb_rhs_array_muxed23;
assign subfragments_roundrobin4_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((subfragments_locked4 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin4_ce = ((~basesoc_sdram_interface_bank4_valid) & (~basesoc_sdram_interface_bank4_lock));
assign basesoc_sdram_interface_bank4_addr = comb_rhs_array_muxed24;
assign basesoc_sdram_interface_bank4_we = comb_rhs_array_muxed25;
assign basesoc_sdram_interface_bank4_valid = comb_rhs_array_muxed26;
assign subfragments_roundrobin5_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((subfragments_locked5 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin5_ce = ((~basesoc_sdram_interface_bank5_valid) & (~basesoc_sdram_interface_bank5_lock));
assign basesoc_sdram_interface_bank5_addr = comb_rhs_array_muxed27;
assign basesoc_sdram_interface_bank5_we = comb_rhs_array_muxed28;
assign basesoc_sdram_interface_bank5_valid = comb_rhs_array_muxed29;
assign subfragments_roundrobin6_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((subfragments_locked6 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin6_ce = ((~basesoc_sdram_interface_bank6_valid) & (~basesoc_sdram_interface_bank6_lock));
assign basesoc_sdram_interface_bank6_addr = comb_rhs_array_muxed30;
assign basesoc_sdram_interface_bank6_we = comb_rhs_array_muxed31;
assign basesoc_sdram_interface_bank6_valid = comb_rhs_array_muxed32;
assign subfragments_roundrobin7_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((subfragments_locked7 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign subfragments_roundrobin7_ce = ((~basesoc_sdram_interface_bank7_valid) & (~basesoc_sdram_interface_bank7_lock));
assign basesoc_sdram_interface_bank7_addr = comb_rhs_array_muxed33;
assign basesoc_sdram_interface_bank7_we = comb_rhs_array_muxed34;
assign basesoc_sdram_interface_bank7_valid = comb_rhs_array_muxed35;
assign basesoc_port_cmd_ready = ((((((((1'd0 | (((subfragments_roundrobin0_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((subfragments_locked0 | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank0_ready)) | (((subfragments_roundrobin1_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((subfragments_locked1 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank1_ready)) | (((subfragments_roundrobin2_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((subfragments_locked2 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank2_ready)) | (((subfragments_roundrobin3_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((subfragments_locked3 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank3_ready)) | (((subfragments_roundrobin4_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((subfragments_locked4 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank4_ready)) | (((subfragments_roundrobin5_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((subfragments_locked5 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank5_ready)) | (((subfragments_roundrobin6_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((subfragments_locked6 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank6_ready)) | (((subfragments_roundrobin7_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((subfragments_locked7 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0)))))) & basesoc_sdram_interface_bank7_ready));
assign basesoc_port_wdata_ready = subfragments_new_master_wdata_ready1;
assign basesoc_port_rdata_valid = subfragments_new_master_rdata_valid8;
always @(*) begin
	basesoc_sdram_interface_wdata <= 128'd0;
	basesoc_sdram_interface_wdata_we <= 16'd0;
	case ({subfragments_new_master_wdata_ready1})
		1'd1: begin
			basesoc_sdram_interface_wdata <= basesoc_port_wdata_payload_data;
			basesoc_sdram_interface_wdata_we <= basesoc_port_wdata_payload_we;
		end
		default: begin
			basesoc_sdram_interface_wdata <= 1'd0;
			basesoc_sdram_interface_wdata_we <= 1'd0;
		end
	endcase
end
assign basesoc_port_rdata_payload_data = basesoc_sdram_interface_rdata;
assign subfragments_roundrobin0_grant = 1'd0;
assign subfragments_roundrobin1_grant = 1'd0;
assign subfragments_roundrobin2_grant = 1'd0;
assign subfragments_roundrobin3_grant = 1'd0;
assign subfragments_roundrobin4_grant = 1'd0;
assign subfragments_roundrobin5_grant = 1'd0;
assign subfragments_roundrobin6_grant = 1'd0;
assign subfragments_roundrobin7_grant = 1'd0;
assign basesoc_data_port_adr = basesoc_wb_sdram_adr[10:2];
always @(*) begin
	basesoc_data_port_we <= 16'd0;
	basesoc_data_port_dat_w <= 128'd0;
	if (basesoc_write_from_slave) begin
		basesoc_data_port_dat_w <= basesoc_interface_dat_r;
		basesoc_data_port_we <= {16{1'd1}};
	end else begin
		basesoc_data_port_dat_w <= {4{basesoc_wb_sdram_dat_w}};
		if ((((basesoc_wb_sdram_cyc & basesoc_wb_sdram_stb) & basesoc_wb_sdram_we) & basesoc_wb_sdram_ack)) begin
			basesoc_data_port_we <= {({4{(basesoc_wb_sdram_adr[1:0] == 1'd0)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 1'd1)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 2'd2)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 2'd3)}} & basesoc_wb_sdram_sel)};
		end
	end
end
assign basesoc_interface_dat_w = basesoc_data_port_dat_r;
assign basesoc_interface_sel = 16'd65535;
always @(*) begin
	basesoc_wb_sdram_dat_r <= 32'd0;
	case (basesoc_adr_offset_r)
		1'd0: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[127:96];
		end
		1'd1: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[95:64];
		end
		2'd2: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[63:32];
		end
		default: begin
			basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[31:0];
		end
	endcase
end
assign {basesoc_tag_do_dirty, basesoc_tag_do_tag} = basesoc_tag_port_dat_r;
assign basesoc_tag_port_dat_w = {basesoc_tag_di_dirty, basesoc_tag_di_tag};
assign basesoc_tag_port_adr = basesoc_wb_sdram_adr[10:2];
assign basesoc_tag_di_tag = basesoc_wb_sdram_adr[29:11];
assign basesoc_interface_adr = {basesoc_tag_do_tag, basesoc_wb_sdram_adr[10:2]};
always @(*) begin
	basesoc_interface_stb <= 1'd0;
	basesoc_tag_port_we <= 1'd0;
	basesoc_interface_we <= 1'd0;
	subfragments_fullmemorywe_next_state <= 2'd0;
	basesoc_wb_sdram_ack <= 1'd0;
	basesoc_tag_di_dirty <= 1'd0;
	basesoc_word_clr <= 1'd0;
	basesoc_word_inc <= 1'd0;
	basesoc_write_from_slave <= 1'd0;
	basesoc_interface_cyc <= 1'd0;
	subfragments_fullmemorywe_next_state <= subfragments_fullmemorywe_state;
	case (subfragments_fullmemorywe_state)
		1'd1: begin
			basesoc_word_clr <= 1'd1;
			if ((basesoc_tag_do_tag == basesoc_wb_sdram_adr[29:11])) begin
				basesoc_wb_sdram_ack <= 1'd1;
				if (basesoc_wb_sdram_we) begin
					basesoc_tag_di_dirty <= 1'd1;
					basesoc_tag_port_we <= 1'd1;
				end
				subfragments_fullmemorywe_next_state <= 1'd0;
			end else begin
				if (basesoc_tag_do_dirty) begin
					subfragments_fullmemorywe_next_state <= 2'd2;
				end else begin
					basesoc_tag_port_we <= 1'd1;
					basesoc_word_clr <= 1'd1;
					subfragments_fullmemorywe_next_state <= 2'd3;
				end
			end
		end
		2'd2: begin
			basesoc_interface_stb <= 1'd1;
			basesoc_interface_cyc <= 1'd1;
			basesoc_interface_we <= 1'd1;
			if (basesoc_interface_ack) begin
				basesoc_word_inc <= 1'd1;
				if (1'd1) begin
					basesoc_tag_port_we <= 1'd1;
					basesoc_word_clr <= 1'd1;
					subfragments_fullmemorywe_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			basesoc_interface_stb <= 1'd1;
			basesoc_interface_cyc <= 1'd1;
			basesoc_interface_we <= 1'd0;
			if (basesoc_interface_ack) begin
				basesoc_write_from_slave <= 1'd1;
				basesoc_word_inc <= 1'd1;
				if (1'd1) begin
					subfragments_fullmemorywe_next_state <= 1'd1;
				end else begin
					subfragments_fullmemorywe_next_state <= 2'd3;
				end
			end
		end
		default: begin
			if ((basesoc_wb_sdram_cyc & basesoc_wb_sdram_stb)) begin
				subfragments_fullmemorywe_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_port_cmd_payload_addr = (basesoc_interface_adr - 27'd67108864);
assign basesoc_port_cmd_payload_we = basesoc_interface_we;
assign basesoc_port_cmd_last = (~basesoc_interface_we);
assign basesoc_port_flush = (~basesoc_interface_cyc);
always @(*) begin
	basesoc_port_wdata_valid <= 1'd0;
	basesoc_port_wdata_valid <= (basesoc_interface_stb & basesoc_interface_we);
	if (1'd1) begin
		if ((~basesoc_is_ongoing)) begin
			basesoc_port_wdata_valid <= 1'd0;
		end
	end
end
assign basesoc_port_wdata_payload_data = basesoc_interface_dat_w;
assign basesoc_port_wdata_payload_we = basesoc_interface_sel;
assign basesoc_port_rdata_ready = 1'd1;
always @(*) begin
	basesoc_interface_ack <= 1'd0;
	basesoc_is_ongoing <= 1'd0;
	basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
	basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
	basesoc_interface_dat_r <= 128'd0;
	subfragments_litedramwishbone2native_next_state <= 2'd0;
	basesoc_port_cmd_valid <= 1'd0;
	subfragments_litedramwishbone2native_next_state <= subfragments_litedramwishbone2native_state;
	case (subfragments_litedramwishbone2native_state)
		1'd1: begin
			basesoc_is_ongoing <= 1'd1;
			basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_interface_cyc) | basesoc_aborted);
			basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
			if ((basesoc_port_wdata_valid & basesoc_port_wdata_ready)) begin
				basesoc_interface_ack <= (basesoc_interface_cyc & (~basesoc_aborted));
				subfragments_litedramwishbone2native_next_state <= 1'd0;
			end
		end
		2'd2: begin
			basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_interface_cyc) | basesoc_aborted);
			basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
			if (basesoc_port_rdata_valid) begin
				basesoc_interface_ack <= (basesoc_interface_cyc & (~basesoc_aborted));
				basesoc_interface_dat_r <= basesoc_port_rdata_payload_data;
				subfragments_litedramwishbone2native_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_port_cmd_valid <= (basesoc_interface_cyc & basesoc_interface_stb);
			if (((basesoc_port_cmd_valid & basesoc_port_cmd_ready) & basesoc_interface_we)) begin
				subfragments_litedramwishbone2native_next_state <= 1'd1;
			end
			if (((basesoc_port_cmd_valid & basesoc_port_cmd_ready) & (~basesoc_interface_we))) begin
				subfragments_litedramwishbone2native_next_state <= 2'd2;
			end
			basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
			basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
		end
	endcase
end
assign s7pciephy_pcie_rst_n = pcie_x4_rst_n;
assign s7pciephy_tx_datapath_sink_sink_valid = s7pciephy_sink_sink_valid;
assign s7pciephy_sink_sink_ready = s7pciephy_tx_datapath_sink_sink_ready;
assign s7pciephy_tx_datapath_sink_sink_first = s7pciephy_sink_sink_first;
assign s7pciephy_tx_datapath_sink_sink_last = s7pciephy_sink_sink_last;
assign s7pciephy_tx_datapath_sink_sink_payload_dat = s7pciephy_sink_sink_payload_dat;
assign s7pciephy_tx_datapath_sink_sink_payload_be = s7pciephy_sink_sink_payload_be;
assign s7pciephy_source_source_valid = s7pciephy_rx_datapath_source_source_valid;
assign s7pciephy_rx_datapath_source_source_ready = s7pciephy_source_source_ready;
assign s7pciephy_source_source_first = s7pciephy_rx_datapath_source_source_first;
assign s7pciephy_source_source_last = s7pciephy_rx_datapath_source_source_last;
assign s7pciephy_source_source_payload_dat = s7pciephy_rx_datapath_source_source_payload_dat;
assign s7pciephy_source_source_payload_be = s7pciephy_rx_datapath_source_source_payload_be;
assign s7pciephy_msi_cdc_sink_valid = s7pciephy_msi_valid;
assign s7pciephy_msi_ready = s7pciephy_msi_cdc_sink_ready;
assign s7pciephy_msi_cdc_sink_first = s7pciephy_msi_first;
assign s7pciephy_msi_cdc_sink_last = s7pciephy_msi_last;
assign s7pciephy_msi_cdc_sink_payload_dat = s7pciephy_msi_payload_dat;
assign s7pciephy_rx_datapath_sink_sink_first = slice_proxy0[4];
assign s7pciephy_rx_datapath_sink_sink_last = slice_proxy1[4];
always @(*) begin
	s7pciephy_rx_datapath_aligner_first_dword <= 2'd0;
	if ((s7pciephy_m_axis_rx_tuser[14:10] == 5'd24)) begin
		s7pciephy_rx_datapath_aligner_first_dword <= 2'd2;
	end
end
assign s7pciephy_tx_datapath_pipe_valid_sink_valid = s7pciephy_tx_datapath_sink_sink_valid;
assign s7pciephy_tx_datapath_sink_sink_ready = s7pciephy_tx_datapath_pipe_valid_sink_ready;
assign s7pciephy_tx_datapath_pipe_valid_sink_first = s7pciephy_tx_datapath_sink_sink_first;
assign s7pciephy_tx_datapath_pipe_valid_sink_last = s7pciephy_tx_datapath_sink_sink_last;
assign s7pciephy_tx_datapath_pipe_valid_sink_payload_dat = s7pciephy_tx_datapath_sink_sink_payload_dat;
assign s7pciephy_tx_datapath_pipe_valid_sink_payload_be = s7pciephy_tx_datapath_sink_sink_payload_be;
assign s7pciephy_tx_datapath_cdc_sink_valid = s7pciephy_tx_datapath_pipe_valid_source_valid;
assign s7pciephy_tx_datapath_pipe_valid_source_ready = s7pciephy_tx_datapath_cdc_sink_ready;
assign s7pciephy_tx_datapath_cdc_sink_first = s7pciephy_tx_datapath_pipe_valid_source_first;
assign s7pciephy_tx_datapath_cdc_sink_last = s7pciephy_tx_datapath_pipe_valid_source_last;
assign s7pciephy_tx_datapath_cdc_sink_payload_dat = s7pciephy_tx_datapath_pipe_valid_source_payload_dat;
assign s7pciephy_tx_datapath_cdc_sink_payload_be = s7pciephy_tx_datapath_pipe_valid_source_payload_be;
assign s7pciephy_tx_datapath_converter_sink_valid = s7pciephy_tx_datapath_cdc_source_valid;
assign s7pciephy_tx_datapath_cdc_source_ready = s7pciephy_tx_datapath_converter_sink_ready;
assign s7pciephy_tx_datapath_converter_sink_first = s7pciephy_tx_datapath_cdc_source_first;
assign s7pciephy_tx_datapath_converter_sink_last = s7pciephy_tx_datapath_cdc_source_last;
assign s7pciephy_tx_datapath_converter_sink_payload_dat = s7pciephy_tx_datapath_cdc_source_payload_dat;
assign s7pciephy_tx_datapath_converter_sink_payload_be = s7pciephy_tx_datapath_cdc_source_payload_be;
assign s7pciephy_tx_datapath_pipe_ready_sink_valid = s7pciephy_tx_datapath_converter_source_valid;
assign s7pciephy_tx_datapath_converter_source_ready = s7pciephy_tx_datapath_pipe_ready_sink_ready;
assign s7pciephy_tx_datapath_pipe_ready_sink_first = s7pciephy_tx_datapath_converter_source_first;
assign s7pciephy_tx_datapath_pipe_ready_sink_last = s7pciephy_tx_datapath_converter_source_last;
assign s7pciephy_tx_datapath_pipe_ready_sink_payload_dat = s7pciephy_tx_datapath_converter_source_payload_dat;
assign s7pciephy_tx_datapath_pipe_ready_sink_payload_be = s7pciephy_tx_datapath_converter_source_payload_be;
assign s7pciephy_tx_datapath_source_source_valid = s7pciephy_tx_datapath_pipe_ready_source_valid;
assign s7pciephy_tx_datapath_pipe_ready_source_ready = s7pciephy_tx_datapath_source_source_ready;
assign s7pciephy_tx_datapath_source_source_first = s7pciephy_tx_datapath_pipe_ready_source_first;
assign s7pciephy_tx_datapath_source_source_last = s7pciephy_tx_datapath_pipe_ready_source_last;
assign s7pciephy_tx_datapath_source_source_payload_dat = s7pciephy_tx_datapath_pipe_ready_source_payload_dat;
assign s7pciephy_tx_datapath_source_source_payload_be = s7pciephy_tx_datapath_pipe_ready_source_payload_be;
assign s7pciephy_tx_datapath_pipe_valid_sink_ready = ((~s7pciephy_tx_datapath_pipe_valid_source_valid) | s7pciephy_tx_datapath_pipe_valid_source_ready);
assign s7pciephy_tx_datapath_cdc_asyncfifo_din = {s7pciephy_tx_datapath_cdc_fifo_in_last, s7pciephy_tx_datapath_cdc_fifo_in_first, s7pciephy_tx_datapath_cdc_fifo_in_payload_be, s7pciephy_tx_datapath_cdc_fifo_in_payload_dat};
assign {s7pciephy_tx_datapath_cdc_fifo_out_last, s7pciephy_tx_datapath_cdc_fifo_out_first, s7pciephy_tx_datapath_cdc_fifo_out_payload_be, s7pciephy_tx_datapath_cdc_fifo_out_payload_dat} = s7pciephy_tx_datapath_cdc_asyncfifo_dout;
assign s7pciephy_tx_datapath_cdc_sink_ready = s7pciephy_tx_datapath_cdc_asyncfifo_writable;
assign s7pciephy_tx_datapath_cdc_asyncfifo_we = s7pciephy_tx_datapath_cdc_sink_valid;
assign s7pciephy_tx_datapath_cdc_fifo_in_first = s7pciephy_tx_datapath_cdc_sink_first;
assign s7pciephy_tx_datapath_cdc_fifo_in_last = s7pciephy_tx_datapath_cdc_sink_last;
assign s7pciephy_tx_datapath_cdc_fifo_in_payload_dat = s7pciephy_tx_datapath_cdc_sink_payload_dat;
assign s7pciephy_tx_datapath_cdc_fifo_in_payload_be = s7pciephy_tx_datapath_cdc_sink_payload_be;
assign s7pciephy_tx_datapath_cdc_source_valid = s7pciephy_tx_datapath_cdc_asyncfifo_readable;
assign s7pciephy_tx_datapath_cdc_source_first = s7pciephy_tx_datapath_cdc_fifo_out_first;
assign s7pciephy_tx_datapath_cdc_source_last = s7pciephy_tx_datapath_cdc_fifo_out_last;
assign s7pciephy_tx_datapath_cdc_source_payload_dat = s7pciephy_tx_datapath_cdc_fifo_out_payload_dat;
assign s7pciephy_tx_datapath_cdc_source_payload_be = s7pciephy_tx_datapath_cdc_fifo_out_payload_be;
assign s7pciephy_tx_datapath_cdc_asyncfifo_re = s7pciephy_tx_datapath_cdc_source_ready;
assign s7pciephy_tx_datapath_cdc_graycounter0_ce = (s7pciephy_tx_datapath_cdc_asyncfifo_writable & s7pciephy_tx_datapath_cdc_asyncfifo_we);
assign s7pciephy_tx_datapath_cdc_graycounter1_ce = (s7pciephy_tx_datapath_cdc_asyncfifo_readable & s7pciephy_tx_datapath_cdc_asyncfifo_re);
assign s7pciephy_tx_datapath_cdc_asyncfifo_writable = (((s7pciephy_tx_datapath_cdc_graycounter0_q[2] == s7pciephy_tx_datapath_cdc_consume_wdomain[2]) | (s7pciephy_tx_datapath_cdc_graycounter0_q[1] == s7pciephy_tx_datapath_cdc_consume_wdomain[1])) | (s7pciephy_tx_datapath_cdc_graycounter0_q[0] != s7pciephy_tx_datapath_cdc_consume_wdomain[0]));
assign s7pciephy_tx_datapath_cdc_asyncfifo_readable = (s7pciephy_tx_datapath_cdc_graycounter1_q != s7pciephy_tx_datapath_cdc_produce_rdomain);
assign s7pciephy_tx_datapath_cdc_wrport_adr = s7pciephy_tx_datapath_cdc_graycounter0_q_binary[1:0];
assign s7pciephy_tx_datapath_cdc_wrport_dat_w = s7pciephy_tx_datapath_cdc_asyncfifo_din;
assign s7pciephy_tx_datapath_cdc_wrport_we = s7pciephy_tx_datapath_cdc_graycounter0_ce;
assign s7pciephy_tx_datapath_cdc_rdport_adr = s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary[1:0];
assign s7pciephy_tx_datapath_cdc_asyncfifo_dout = s7pciephy_tx_datapath_cdc_rdport_dat_r;
always @(*) begin
	s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary <= 3'd0;
	if (s7pciephy_tx_datapath_cdc_graycounter0_ce) begin
		s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary <= (s7pciephy_tx_datapath_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary <= s7pciephy_tx_datapath_cdc_graycounter0_q_binary;
	end
end
assign s7pciephy_tx_datapath_cdc_graycounter0_q_next = (s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary ^ s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary <= 3'd0;
	if (s7pciephy_tx_datapath_cdc_graycounter1_ce) begin
		s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary <= (s7pciephy_tx_datapath_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary <= s7pciephy_tx_datapath_cdc_graycounter1_q_binary;
	end
end
assign s7pciephy_tx_datapath_cdc_graycounter1_q_next = (s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary ^ s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary[2:1]);
assign s7pciephy_tx_datapath_converter_converter_sink_valid = s7pciephy_tx_datapath_converter_sink_valid;
assign s7pciephy_tx_datapath_converter_converter_sink_first = s7pciephy_tx_datapath_converter_sink_first;
assign s7pciephy_tx_datapath_converter_converter_sink_last = s7pciephy_tx_datapath_converter_sink_last;
assign s7pciephy_tx_datapath_converter_sink_ready = s7pciephy_tx_datapath_converter_converter_sink_ready;
assign s7pciephy_tx_datapath_converter_converter_sink_payload_data = {s7pciephy_tx_datapath_converter_sink_payload_be, s7pciephy_tx_datapath_converter_sink_payload_dat};
assign s7pciephy_tx_datapath_converter_source_valid = s7pciephy_tx_datapath_converter_source_source_valid;
assign s7pciephy_tx_datapath_converter_source_first = s7pciephy_tx_datapath_converter_source_source_first;
assign s7pciephy_tx_datapath_converter_source_last = s7pciephy_tx_datapath_converter_source_source_last;
assign s7pciephy_tx_datapath_converter_source_source_ready = s7pciephy_tx_datapath_converter_source_ready;
assign {s7pciephy_tx_datapath_converter_source_payload_be, s7pciephy_tx_datapath_converter_source_payload_dat} = s7pciephy_tx_datapath_converter_source_source_payload_data;
assign s7pciephy_tx_datapath_converter_source_source_valid = s7pciephy_tx_datapath_converter_converter_source_valid;
assign s7pciephy_tx_datapath_converter_converter_source_ready = s7pciephy_tx_datapath_converter_source_source_ready;
assign s7pciephy_tx_datapath_converter_source_source_first = s7pciephy_tx_datapath_converter_converter_source_first;
assign s7pciephy_tx_datapath_converter_source_source_last = s7pciephy_tx_datapath_converter_converter_source_last;
assign s7pciephy_tx_datapath_converter_source_source_payload_data = s7pciephy_tx_datapath_converter_converter_source_payload_data;
assign s7pciephy_tx_datapath_converter_converter_source_valid = s7pciephy_tx_datapath_converter_converter_sink_valid;
assign s7pciephy_tx_datapath_converter_converter_sink_ready = s7pciephy_tx_datapath_converter_converter_source_ready;
assign s7pciephy_tx_datapath_converter_converter_source_first = s7pciephy_tx_datapath_converter_converter_sink_first;
assign s7pciephy_tx_datapath_converter_converter_source_last = s7pciephy_tx_datapath_converter_converter_sink_last;
assign s7pciephy_tx_datapath_converter_converter_source_payload_data = s7pciephy_tx_datapath_converter_converter_sink_payload_data;
assign s7pciephy_tx_datapath_converter_converter_source_payload_valid_token_count = 1'd1;
assign s7pciephy_tx_datapath_pipe_ready_sink_ready = (~s7pciephy_tx_datapath_pipe_ready_valid);
always @(*) begin
	s7pciephy_tx_datapath_pipe_ready_source_payload_be <= 16'd0;
	s7pciephy_tx_datapath_pipe_ready_source_valid <= 1'd0;
	s7pciephy_tx_datapath_pipe_ready_source_first <= 1'd0;
	s7pciephy_tx_datapath_pipe_ready_source_last <= 1'd0;
	s7pciephy_tx_datapath_pipe_ready_source_payload_dat <= 128'd0;
	if (s7pciephy_tx_datapath_pipe_ready_valid) begin
		s7pciephy_tx_datapath_pipe_ready_source_valid <= s7pciephy_tx_datapath_pipe_ready_sink_d_valid;
		s7pciephy_tx_datapath_pipe_ready_source_first <= s7pciephy_tx_datapath_pipe_ready_sink_d_first;
		s7pciephy_tx_datapath_pipe_ready_source_last <= s7pciephy_tx_datapath_pipe_ready_sink_d_last;
		s7pciephy_tx_datapath_pipe_ready_source_payload_dat <= s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat;
		s7pciephy_tx_datapath_pipe_ready_source_payload_be <= s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be;
	end else begin
		s7pciephy_tx_datapath_pipe_ready_source_valid <= s7pciephy_tx_datapath_pipe_ready_sink_valid;
		s7pciephy_tx_datapath_pipe_ready_source_first <= s7pciephy_tx_datapath_pipe_ready_sink_first;
		s7pciephy_tx_datapath_pipe_ready_source_last <= s7pciephy_tx_datapath_pipe_ready_sink_last;
		s7pciephy_tx_datapath_pipe_ready_source_payload_dat <= s7pciephy_tx_datapath_pipe_ready_sink_payload_dat;
		s7pciephy_tx_datapath_pipe_ready_source_payload_be <= s7pciephy_tx_datapath_pipe_ready_sink_payload_be;
	end
end
assign s7pciephy_rx_datapath_aligner_sink_valid = s7pciephy_rx_datapath_sink_sink_valid;
assign s7pciephy_rx_datapath_sink_sink_ready = s7pciephy_rx_datapath_aligner_sink_ready;
assign s7pciephy_rx_datapath_aligner_sink_first = s7pciephy_rx_datapath_sink_sink_first;
assign s7pciephy_rx_datapath_aligner_sink_last = s7pciephy_rx_datapath_sink_sink_last;
assign s7pciephy_rx_datapath_aligner_sink_payload_dat = s7pciephy_rx_datapath_sink_sink_payload_dat;
assign s7pciephy_rx_datapath_aligner_sink_payload_be = s7pciephy_rx_datapath_sink_sink_payload_be;
assign s7pciephy_rx_datapath_pipe_ready_sink_valid = s7pciephy_rx_datapath_aligner_source_valid;
assign s7pciephy_rx_datapath_aligner_source_ready = s7pciephy_rx_datapath_pipe_ready_sink_ready;
assign s7pciephy_rx_datapath_pipe_ready_sink_first = s7pciephy_rx_datapath_aligner_source_first;
assign s7pciephy_rx_datapath_pipe_ready_sink_last = s7pciephy_rx_datapath_aligner_source_last;
assign s7pciephy_rx_datapath_pipe_ready_sink_payload_dat = s7pciephy_rx_datapath_aligner_source_payload_dat;
assign s7pciephy_rx_datapath_pipe_ready_sink_payload_be = s7pciephy_rx_datapath_aligner_source_payload_be;
assign s7pciephy_rx_datapath_converter_sink_valid = s7pciephy_rx_datapath_pipe_ready_source_valid;
assign s7pciephy_rx_datapath_pipe_ready_source_ready = s7pciephy_rx_datapath_converter_sink_ready;
assign s7pciephy_rx_datapath_converter_sink_first = s7pciephy_rx_datapath_pipe_ready_source_first;
assign s7pciephy_rx_datapath_converter_sink_last = s7pciephy_rx_datapath_pipe_ready_source_last;
assign s7pciephy_rx_datapath_converter_sink_payload_dat = s7pciephy_rx_datapath_pipe_ready_source_payload_dat;
assign s7pciephy_rx_datapath_converter_sink_payload_be = s7pciephy_rx_datapath_pipe_ready_source_payload_be;
assign s7pciephy_rx_datapath_cdc_sink_valid = s7pciephy_rx_datapath_converter_source_valid;
assign s7pciephy_rx_datapath_converter_source_ready = s7pciephy_rx_datapath_cdc_sink_ready;
assign s7pciephy_rx_datapath_cdc_sink_first = s7pciephy_rx_datapath_converter_source_first;
assign s7pciephy_rx_datapath_cdc_sink_last = s7pciephy_rx_datapath_converter_source_last;
assign s7pciephy_rx_datapath_cdc_sink_payload_dat = s7pciephy_rx_datapath_converter_source_payload_dat;
assign s7pciephy_rx_datapath_cdc_sink_payload_be = s7pciephy_rx_datapath_converter_source_payload_be;
assign s7pciephy_rx_datapath_pipe_valid_sink_valid = s7pciephy_rx_datapath_cdc_source_valid;
assign s7pciephy_rx_datapath_cdc_source_ready = s7pciephy_rx_datapath_pipe_valid_sink_ready;
assign s7pciephy_rx_datapath_pipe_valid_sink_first = s7pciephy_rx_datapath_cdc_source_first;
assign s7pciephy_rx_datapath_pipe_valid_sink_last = s7pciephy_rx_datapath_cdc_source_last;
assign s7pciephy_rx_datapath_pipe_valid_sink_payload_dat = s7pciephy_rx_datapath_cdc_source_payload_dat;
assign s7pciephy_rx_datapath_pipe_valid_sink_payload_be = s7pciephy_rx_datapath_cdc_source_payload_be;
assign s7pciephy_rx_datapath_source_source_valid = s7pciephy_rx_datapath_pipe_valid_source_valid;
assign s7pciephy_rx_datapath_pipe_valid_source_ready = s7pciephy_rx_datapath_source_source_ready;
assign s7pciephy_rx_datapath_source_source_first = s7pciephy_rx_datapath_pipe_valid_source_first;
assign s7pciephy_rx_datapath_source_source_last = s7pciephy_rx_datapath_pipe_valid_source_last;
assign s7pciephy_rx_datapath_source_source_payload_dat = s7pciephy_rx_datapath_pipe_valid_source_payload_dat;
assign s7pciephy_rx_datapath_source_source_payload_be = s7pciephy_rx_datapath_pipe_valid_source_payload_be;
always @(*) begin
	s7pciephy_rx_datapath_aligner_source_last <= 1'd0;
	s7pciephy_rx_datapath_aligner_sink_ready <= 1'd0;
	s7pciephy_rx_datapath_aligner_source_payload_dat <= 128'd0;
	s7pciephy_rx_datapath_aligner_source_payload_be <= 16'd0;
	s7pciephy_rx_datapath_aligner_source_valid <= 1'd0;
	subfragments_s7pciephy_next_state <= 1'd0;
	subfragments_s7pciephy_next_state <= subfragments_s7pciephy_state;
	case (subfragments_s7pciephy_state)
		1'd1: begin
			s7pciephy_rx_datapath_aligner_source_valid <= s7pciephy_rx_datapath_aligner_sink_valid;
			s7pciephy_rx_datapath_aligner_sink_ready <= s7pciephy_rx_datapath_aligner_source_ready;
			s7pciephy_rx_datapath_aligner_source_last <= s7pciephy_rx_datapath_aligner_sink_last;
			s7pciephy_rx_datapath_aligner_source_payload_dat <= {s7pciephy_rx_datapath_aligner_sink_payload_dat, s7pciephy_rx_datapath_aligner_dat_last};
			s7pciephy_rx_datapath_aligner_source_payload_be <= {s7pciephy_rx_datapath_aligner_sink_payload_be, s7pciephy_rx_datapath_aligner_be_last};
			if (((s7pciephy_rx_datapath_aligner_sink_valid & s7pciephy_rx_datapath_aligner_sink_last) & (~s7pciephy_rx_datapath_aligner_sink_first))) begin
				s7pciephy_rx_datapath_aligner_source_payload_be[15:8] <= 1'd0;
				if (s7pciephy_rx_datapath_aligner_source_ready) begin
					subfragments_s7pciephy_next_state <= 1'd0;
				end
			end
		end
		default: begin
			s7pciephy_rx_datapath_aligner_source_valid <= s7pciephy_rx_datapath_aligner_sink_valid;
			s7pciephy_rx_datapath_aligner_sink_ready <= s7pciephy_rx_datapath_aligner_source_ready;
			s7pciephy_rx_datapath_aligner_source_last <= s7pciephy_rx_datapath_aligner_sink_last;
			s7pciephy_rx_datapath_aligner_source_payload_dat <= s7pciephy_rx_datapath_aligner_sink_payload_dat;
			s7pciephy_rx_datapath_aligner_source_payload_be <= s7pciephy_rx_datapath_aligner_sink_payload_be;
			if ((((s7pciephy_rx_datapath_aligner_sink_valid & s7pciephy_rx_datapath_aligner_sink_last) & s7pciephy_rx_datapath_aligner_sink_first) & (s7pciephy_rx_datapath_aligner_first_dword == 2'd2))) begin
				s7pciephy_rx_datapath_aligner_source_payload_be[15:8] <= 1'd0;
				if (s7pciephy_rx_datapath_aligner_source_ready) begin
					subfragments_s7pciephy_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign s7pciephy_rx_datapath_pipe_ready_sink_ready = (~s7pciephy_rx_datapath_pipe_ready_valid);
always @(*) begin
	s7pciephy_rx_datapath_pipe_ready_source_first <= 1'd0;
	s7pciephy_rx_datapath_pipe_ready_source_last <= 1'd0;
	s7pciephy_rx_datapath_pipe_ready_source_payload_dat <= 128'd0;
	s7pciephy_rx_datapath_pipe_ready_source_payload_be <= 16'd0;
	s7pciephy_rx_datapath_pipe_ready_source_valid <= 1'd0;
	if (s7pciephy_rx_datapath_pipe_ready_valid) begin
		s7pciephy_rx_datapath_pipe_ready_source_valid <= s7pciephy_rx_datapath_pipe_ready_sink_d_valid;
		s7pciephy_rx_datapath_pipe_ready_source_first <= s7pciephy_rx_datapath_pipe_ready_sink_d_first;
		s7pciephy_rx_datapath_pipe_ready_source_last <= s7pciephy_rx_datapath_pipe_ready_sink_d_last;
		s7pciephy_rx_datapath_pipe_ready_source_payload_dat <= s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat;
		s7pciephy_rx_datapath_pipe_ready_source_payload_be <= s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be;
	end else begin
		s7pciephy_rx_datapath_pipe_ready_source_valid <= s7pciephy_rx_datapath_pipe_ready_sink_valid;
		s7pciephy_rx_datapath_pipe_ready_source_first <= s7pciephy_rx_datapath_pipe_ready_sink_first;
		s7pciephy_rx_datapath_pipe_ready_source_last <= s7pciephy_rx_datapath_pipe_ready_sink_last;
		s7pciephy_rx_datapath_pipe_ready_source_payload_dat <= s7pciephy_rx_datapath_pipe_ready_sink_payload_dat;
		s7pciephy_rx_datapath_pipe_ready_source_payload_be <= s7pciephy_rx_datapath_pipe_ready_sink_payload_be;
	end
end
assign s7pciephy_rx_datapath_converter_converter_sink_valid = s7pciephy_rx_datapath_converter_sink_valid;
assign s7pciephy_rx_datapath_converter_converter_sink_first = s7pciephy_rx_datapath_converter_sink_first;
assign s7pciephy_rx_datapath_converter_converter_sink_last = s7pciephy_rx_datapath_converter_sink_last;
assign s7pciephy_rx_datapath_converter_sink_ready = s7pciephy_rx_datapath_converter_converter_sink_ready;
assign s7pciephy_rx_datapath_converter_converter_sink_payload_data = {s7pciephy_rx_datapath_converter_sink_payload_be, s7pciephy_rx_datapath_converter_sink_payload_dat};
assign s7pciephy_rx_datapath_converter_source_valid = s7pciephy_rx_datapath_converter_source_source_valid;
assign s7pciephy_rx_datapath_converter_source_first = s7pciephy_rx_datapath_converter_source_source_first;
assign s7pciephy_rx_datapath_converter_source_last = s7pciephy_rx_datapath_converter_source_source_last;
assign s7pciephy_rx_datapath_converter_source_source_ready = s7pciephy_rx_datapath_converter_source_ready;
assign {s7pciephy_rx_datapath_converter_source_payload_be, s7pciephy_rx_datapath_converter_source_payload_dat} = s7pciephy_rx_datapath_converter_source_source_payload_data;
assign s7pciephy_rx_datapath_converter_source_source_valid = s7pciephy_rx_datapath_converter_converter_source_valid;
assign s7pciephy_rx_datapath_converter_converter_source_ready = s7pciephy_rx_datapath_converter_source_source_ready;
assign s7pciephy_rx_datapath_converter_source_source_first = s7pciephy_rx_datapath_converter_converter_source_first;
assign s7pciephy_rx_datapath_converter_source_source_last = s7pciephy_rx_datapath_converter_converter_source_last;
assign s7pciephy_rx_datapath_converter_source_source_payload_data = s7pciephy_rx_datapath_converter_converter_source_payload_data;
assign s7pciephy_rx_datapath_converter_converter_source_valid = s7pciephy_rx_datapath_converter_converter_sink_valid;
assign s7pciephy_rx_datapath_converter_converter_sink_ready = s7pciephy_rx_datapath_converter_converter_source_ready;
assign s7pciephy_rx_datapath_converter_converter_source_first = s7pciephy_rx_datapath_converter_converter_sink_first;
assign s7pciephy_rx_datapath_converter_converter_source_last = s7pciephy_rx_datapath_converter_converter_sink_last;
assign s7pciephy_rx_datapath_converter_converter_source_payload_data = s7pciephy_rx_datapath_converter_converter_sink_payload_data;
assign s7pciephy_rx_datapath_converter_converter_source_payload_valid_token_count = 1'd1;
assign s7pciephy_rx_datapath_cdc_asyncfifo_din = {s7pciephy_rx_datapath_cdc_fifo_in_last, s7pciephy_rx_datapath_cdc_fifo_in_first, s7pciephy_rx_datapath_cdc_fifo_in_payload_be, s7pciephy_rx_datapath_cdc_fifo_in_payload_dat};
assign {s7pciephy_rx_datapath_cdc_fifo_out_last, s7pciephy_rx_datapath_cdc_fifo_out_first, s7pciephy_rx_datapath_cdc_fifo_out_payload_be, s7pciephy_rx_datapath_cdc_fifo_out_payload_dat} = s7pciephy_rx_datapath_cdc_asyncfifo_dout;
assign s7pciephy_rx_datapath_cdc_sink_ready = s7pciephy_rx_datapath_cdc_asyncfifo_writable;
assign s7pciephy_rx_datapath_cdc_asyncfifo_we = s7pciephy_rx_datapath_cdc_sink_valid;
assign s7pciephy_rx_datapath_cdc_fifo_in_first = s7pciephy_rx_datapath_cdc_sink_first;
assign s7pciephy_rx_datapath_cdc_fifo_in_last = s7pciephy_rx_datapath_cdc_sink_last;
assign s7pciephy_rx_datapath_cdc_fifo_in_payload_dat = s7pciephy_rx_datapath_cdc_sink_payload_dat;
assign s7pciephy_rx_datapath_cdc_fifo_in_payload_be = s7pciephy_rx_datapath_cdc_sink_payload_be;
assign s7pciephy_rx_datapath_cdc_source_valid = s7pciephy_rx_datapath_cdc_asyncfifo_readable;
assign s7pciephy_rx_datapath_cdc_source_first = s7pciephy_rx_datapath_cdc_fifo_out_first;
assign s7pciephy_rx_datapath_cdc_source_last = s7pciephy_rx_datapath_cdc_fifo_out_last;
assign s7pciephy_rx_datapath_cdc_source_payload_dat = s7pciephy_rx_datapath_cdc_fifo_out_payload_dat;
assign s7pciephy_rx_datapath_cdc_source_payload_be = s7pciephy_rx_datapath_cdc_fifo_out_payload_be;
assign s7pciephy_rx_datapath_cdc_asyncfifo_re = s7pciephy_rx_datapath_cdc_source_ready;
assign s7pciephy_rx_datapath_cdc_graycounter0_ce = (s7pciephy_rx_datapath_cdc_asyncfifo_writable & s7pciephy_rx_datapath_cdc_asyncfifo_we);
assign s7pciephy_rx_datapath_cdc_graycounter1_ce = (s7pciephy_rx_datapath_cdc_asyncfifo_readable & s7pciephy_rx_datapath_cdc_asyncfifo_re);
assign s7pciephy_rx_datapath_cdc_asyncfifo_writable = (((s7pciephy_rx_datapath_cdc_graycounter0_q[2] == s7pciephy_rx_datapath_cdc_consume_wdomain[2]) | (s7pciephy_rx_datapath_cdc_graycounter0_q[1] == s7pciephy_rx_datapath_cdc_consume_wdomain[1])) | (s7pciephy_rx_datapath_cdc_graycounter0_q[0] != s7pciephy_rx_datapath_cdc_consume_wdomain[0]));
assign s7pciephy_rx_datapath_cdc_asyncfifo_readable = (s7pciephy_rx_datapath_cdc_graycounter1_q != s7pciephy_rx_datapath_cdc_produce_rdomain);
assign s7pciephy_rx_datapath_cdc_wrport_adr = s7pciephy_rx_datapath_cdc_graycounter0_q_binary[1:0];
assign s7pciephy_rx_datapath_cdc_wrport_dat_w = s7pciephy_rx_datapath_cdc_asyncfifo_din;
assign s7pciephy_rx_datapath_cdc_wrport_we = s7pciephy_rx_datapath_cdc_graycounter0_ce;
assign s7pciephy_rx_datapath_cdc_rdport_adr = s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary[1:0];
assign s7pciephy_rx_datapath_cdc_asyncfifo_dout = s7pciephy_rx_datapath_cdc_rdport_dat_r;
always @(*) begin
	s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary <= 3'd0;
	if (s7pciephy_rx_datapath_cdc_graycounter0_ce) begin
		s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary <= (s7pciephy_rx_datapath_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary <= s7pciephy_rx_datapath_cdc_graycounter0_q_binary;
	end
end
assign s7pciephy_rx_datapath_cdc_graycounter0_q_next = (s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary ^ s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary <= 3'd0;
	if (s7pciephy_rx_datapath_cdc_graycounter1_ce) begin
		s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary <= (s7pciephy_rx_datapath_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary <= s7pciephy_rx_datapath_cdc_graycounter1_q_binary;
	end
end
assign s7pciephy_rx_datapath_cdc_graycounter1_q_next = (s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary ^ s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary[2:1]);
assign s7pciephy_rx_datapath_pipe_valid_sink_ready = ((~s7pciephy_rx_datapath_pipe_valid_source_valid) | s7pciephy_rx_datapath_pipe_valid_source_ready);
assign s7pciephy_msi_cdc_asyncfifo_din = {s7pciephy_msi_cdc_fifo_in_last, s7pciephy_msi_cdc_fifo_in_first, s7pciephy_msi_cdc_fifo_in_payload_dat};
assign {s7pciephy_msi_cdc_fifo_out_last, s7pciephy_msi_cdc_fifo_out_first, s7pciephy_msi_cdc_fifo_out_payload_dat} = s7pciephy_msi_cdc_asyncfifo_dout;
assign s7pciephy_msi_cdc_sink_ready = s7pciephy_msi_cdc_asyncfifo_writable;
assign s7pciephy_msi_cdc_asyncfifo_we = s7pciephy_msi_cdc_sink_valid;
assign s7pciephy_msi_cdc_fifo_in_first = s7pciephy_msi_cdc_sink_first;
assign s7pciephy_msi_cdc_fifo_in_last = s7pciephy_msi_cdc_sink_last;
assign s7pciephy_msi_cdc_fifo_in_payload_dat = s7pciephy_msi_cdc_sink_payload_dat;
assign s7pciephy_msi_cdc_source_valid = s7pciephy_msi_cdc_asyncfifo_readable;
assign s7pciephy_msi_cdc_source_first = s7pciephy_msi_cdc_fifo_out_first;
assign s7pciephy_msi_cdc_source_last = s7pciephy_msi_cdc_fifo_out_last;
assign s7pciephy_msi_cdc_source_payload_dat = s7pciephy_msi_cdc_fifo_out_payload_dat;
assign s7pciephy_msi_cdc_asyncfifo_re = s7pciephy_msi_cdc_source_ready;
assign s7pciephy_msi_cdc_graycounter0_ce = (s7pciephy_msi_cdc_asyncfifo_writable & s7pciephy_msi_cdc_asyncfifo_we);
assign s7pciephy_msi_cdc_graycounter1_ce = (s7pciephy_msi_cdc_asyncfifo_readable & s7pciephy_msi_cdc_asyncfifo_re);
assign s7pciephy_msi_cdc_asyncfifo_writable = (((s7pciephy_msi_cdc_graycounter0_q[2] == s7pciephy_msi_cdc_consume_wdomain[2]) | (s7pciephy_msi_cdc_graycounter0_q[1] == s7pciephy_msi_cdc_consume_wdomain[1])) | (s7pciephy_msi_cdc_graycounter0_q[0] != s7pciephy_msi_cdc_consume_wdomain[0]));
assign s7pciephy_msi_cdc_asyncfifo_readable = (s7pciephy_msi_cdc_graycounter1_q != s7pciephy_msi_cdc_produce_rdomain);
assign s7pciephy_msi_cdc_wrport_adr = s7pciephy_msi_cdc_graycounter0_q_binary[1:0];
assign s7pciephy_msi_cdc_wrport_dat_w = s7pciephy_msi_cdc_asyncfifo_din;
assign s7pciephy_msi_cdc_wrport_we = s7pciephy_msi_cdc_graycounter0_ce;
assign s7pciephy_msi_cdc_rdport_adr = s7pciephy_msi_cdc_graycounter1_q_next_binary[1:0];
assign s7pciephy_msi_cdc_asyncfifo_dout = s7pciephy_msi_cdc_rdport_dat_r;
always @(*) begin
	s7pciephy_msi_cdc_graycounter0_q_next_binary <= 3'd0;
	if (s7pciephy_msi_cdc_graycounter0_ce) begin
		s7pciephy_msi_cdc_graycounter0_q_next_binary <= (s7pciephy_msi_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		s7pciephy_msi_cdc_graycounter0_q_next_binary <= s7pciephy_msi_cdc_graycounter0_q_binary;
	end
end
assign s7pciephy_msi_cdc_graycounter0_q_next = (s7pciephy_msi_cdc_graycounter0_q_next_binary ^ s7pciephy_msi_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	s7pciephy_msi_cdc_graycounter1_q_next_binary <= 3'd0;
	if (s7pciephy_msi_cdc_graycounter1_ce) begin
		s7pciephy_msi_cdc_graycounter1_q_next_binary <= (s7pciephy_msi_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		s7pciephy_msi_cdc_graycounter1_q_next_binary <= s7pciephy_msi_cdc_graycounter1_q_binary;
	end
end
assign s7pciephy_msi_cdc_graycounter1_q_next = (s7pciephy_msi_cdc_graycounter1_q_next_binary ^ s7pciephy_msi_cdc_graycounter1_q_next_binary[2:1]);
assign basesoc_depacketizer_sink_sink_valid = s7pciephy_source_source_valid;
assign s7pciephy_source_source_ready = basesoc_depacketizer_sink_sink_ready;
assign basesoc_depacketizer_sink_sink_first = s7pciephy_source_source_first;
assign basesoc_depacketizer_sink_sink_last = s7pciephy_source_source_last;
assign basesoc_depacketizer_sink_sink_payload_dat = s7pciephy_source_source_payload_dat;
assign basesoc_depacketizer_sink_sink_payload_be = s7pciephy_source_source_payload_be;
assign s7pciephy_sink_sink_valid = basesoc_packetizer_source_source_valid;
assign basesoc_packetizer_source_source_ready = s7pciephy_sink_sink_ready;
assign s7pciephy_sink_sink_first = basesoc_packetizer_source_source_first;
assign s7pciephy_sink_sink_last = basesoc_packetizer_source_source_last;
assign s7pciephy_sink_sink_payload_dat = basesoc_packetizer_source_source_payload_dat;
assign s7pciephy_sink_sink_payload_be = basesoc_packetizer_source_source_payload_be;
assign basesoc_slave_source_valid = basesoc_depacketizer_req_source_valid;
assign basesoc_depacketizer_req_source_ready = basesoc_slave_source_ready;
assign basesoc_slave_source_first = basesoc_depacketizer_req_source_first;
assign basesoc_slave_source_last = basesoc_depacketizer_req_source_last;
assign basesoc_slave_source_payload_we = basesoc_depacketizer_req_source_payload_we;
assign basesoc_slave_source_payload_adr = basesoc_depacketizer_req_source_payload_adr;
assign basesoc_slave_source_payload_len = basesoc_depacketizer_req_source_payload_len;
assign basesoc_slave_source_payload_req_id = basesoc_depacketizer_req_source_payload_req_id;
assign basesoc_slave_source_payload_tag = basesoc_depacketizer_req_source_payload_tag;
assign basesoc_slave_source_payload_dat = basesoc_depacketizer_req_source_payload_dat;
assign basesoc_slave_source_payload_channel = basesoc_depacketizer_req_source_payload_channel;
assign basesoc_slave_source_payload_user_id = basesoc_depacketizer_req_source_payload_user_id;
assign basesoc_packetizer_cmp_sink_valid = basesoc_slave_sink_valid;
assign basesoc_slave_sink_ready = basesoc_packetizer_cmp_sink_ready;
assign basesoc_packetizer_cmp_sink_first = basesoc_slave_sink_first;
assign basesoc_packetizer_cmp_sink_last = basesoc_slave_sink_last;
assign basesoc_packetizer_cmp_sink_payload_adr = basesoc_slave_sink_payload_adr;
assign basesoc_packetizer_cmp_sink_payload_len = basesoc_slave_sink_payload_len;
assign basesoc_packetizer_cmp_sink_payload_end = basesoc_slave_sink_payload_end;
assign basesoc_packetizer_cmp_sink_payload_req_id = basesoc_slave_sink_payload_req_id;
assign basesoc_packetizer_cmp_sink_payload_cmp_id = basesoc_slave_sink_payload_cmp_id;
assign basesoc_packetizer_cmp_sink_payload_err = basesoc_slave_sink_payload_err;
assign basesoc_packetizer_cmp_sink_payload_tag = basesoc_slave_sink_payload_tag;
assign basesoc_packetizer_cmp_sink_payload_dat = basesoc_slave_sink_payload_dat;
assign basesoc_packetizer_cmp_sink_payload_channel = basesoc_slave_sink_payload_channel;
assign basesoc_packetizer_cmp_sink_payload_user_id = basesoc_slave_sink_payload_user_id;
assign basesoc_packetizer_req_sink_valid = basesoc_master_sink_valid;
assign basesoc_master_sink_ready = basesoc_packetizer_req_sink_ready;
assign basesoc_packetizer_req_sink_first = basesoc_master_sink_first;
assign basesoc_packetizer_req_sink_last = basesoc_master_sink_last;
assign basesoc_packetizer_req_sink_payload_we = basesoc_master_sink_payload_we;
assign basesoc_packetizer_req_sink_payload_adr = basesoc_master_sink_payload_adr;
assign basesoc_packetizer_req_sink_payload_len = basesoc_master_sink_payload_len;
assign basesoc_packetizer_req_sink_payload_req_id = basesoc_master_sink_payload_req_id;
assign basesoc_packetizer_req_sink_payload_tag = basesoc_master_sink_payload_tag;
assign basesoc_packetizer_req_sink_payload_dat = basesoc_master_sink_payload_dat;
assign basesoc_packetizer_req_sink_payload_channel = basesoc_master_sink_payload_channel;
assign basesoc_packetizer_req_sink_payload_user_id = basesoc_master_sink_payload_user_id;
assign basesoc_master_source_valid = basesoc_depacketizer_cmp_source_valid;
assign basesoc_depacketizer_cmp_source_ready = basesoc_master_source_ready;
assign basesoc_master_source_first = basesoc_depacketizer_cmp_source_first;
assign basesoc_master_source_last = basesoc_depacketizer_cmp_source_last;
assign basesoc_master_source_payload_adr = basesoc_depacketizer_cmp_source_payload_adr;
assign basesoc_master_source_payload_len = basesoc_depacketizer_cmp_source_payload_len;
assign basesoc_master_source_payload_end = basesoc_depacketizer_cmp_source_payload_end;
assign basesoc_master_source_payload_req_id = basesoc_depacketizer_cmp_source_payload_req_id;
assign basesoc_master_source_payload_cmp_id = basesoc_depacketizer_cmp_source_payload_cmp_id;
assign basesoc_master_source_payload_err = basesoc_depacketizer_cmp_source_payload_err;
assign basesoc_master_source_payload_tag = basesoc_depacketizer_cmp_source_payload_tag;
assign basesoc_master_source_payload_dat = basesoc_depacketizer_cmp_source_payload_dat;
assign basesoc_master_source_payload_channel = basesoc_depacketizer_cmp_source_payload_channel;
assign basesoc_master_source_payload_user_id = basesoc_depacketizer_cmp_source_payload_user_id;
assign basesoc_depacketizer_header_extracter_sink_valid = basesoc_depacketizer_sink_sink_valid;
assign basesoc_depacketizer_sink_sink_ready = basesoc_depacketizer_header_extracter_sink_ready;
assign basesoc_depacketizer_header_extracter_sink_first = basesoc_depacketizer_sink_sink_first;
assign basesoc_depacketizer_header_extracter_sink_last = basesoc_depacketizer_sink_sink_last;
assign basesoc_depacketizer_header_extracter_sink_payload_dat = basesoc_depacketizer_sink_sink_payload_dat;
assign basesoc_depacketizer_header_extracter_sink_payload_be = basesoc_depacketizer_sink_sink_payload_be;
assign basesoc_depacketizer_dispatch_source_valid = basesoc_depacketizer_header_extracter_source_valid;
assign basesoc_depacketizer_header_extracter_source_ready = basesoc_depacketizer_dispatch_source_ready;
assign basesoc_depacketizer_dispatch_source_first = basesoc_depacketizer_header_extracter_source_first;
assign basesoc_depacketizer_dispatch_source_last = basesoc_depacketizer_header_extracter_source_last;
assign basesoc_depacketizer_dispatch_source_payload_dat = basesoc_depacketizer_header_extracter_source_payload_dat;
assign basesoc_depacketizer_dispatch_source_payload_be = basesoc_depacketizer_header_extracter_source_payload_be;
assign basesoc_depacketizer_dispatch_source_payload_fmt = basesoc_depacketizer_header_extracter_source_payload_header[30:29];
assign basesoc_depacketizer_dispatch_source_payload_type = basesoc_depacketizer_header_extracter_source_payload_header[28:24];
always @(*) begin
	basesoc_depacketizer_dispatcher_sel0 <= 1'd0;
	if ((({basesoc_depacketizer_dispatch_source_payload_fmt, basesoc_depacketizer_dispatch_source_payload_type} == 1'd0) | ({basesoc_depacketizer_dispatch_source_payload_fmt, basesoc_depacketizer_dispatch_source_payload_type} == 7'd64))) begin
		basesoc_depacketizer_dispatcher_sel0 <= 1'd0;
	end else begin
		if ((({basesoc_depacketizer_dispatch_source_payload_fmt, basesoc_depacketizer_dispatch_source_payload_type} == 7'd74) | ({basesoc_depacketizer_dispatch_source_payload_fmt, basesoc_depacketizer_dispatch_source_payload_type} == 4'd10))) begin
			basesoc_depacketizer_dispatcher_sel0 <= 1'd1;
		end
	end
end
assign basesoc_depacketizer_tlp_req_valid = basesoc_depacketizer_endpoint0_valid;
assign basesoc_depacketizer_endpoint0_ready = basesoc_depacketizer_tlp_req_ready;
assign basesoc_depacketizer_tlp_req_first = basesoc_depacketizer_endpoint0_first;
assign basesoc_depacketizer_tlp_req_last = basesoc_depacketizer_endpoint0_last;
assign basesoc_depacketizer_tlp_req_payload_dat = basesoc_depacketizer_endpoint0_payload_dat;
assign basesoc_depacketizer_tlp_req_payload_be = basesoc_depacketizer_endpoint0_payload_be;
assign basesoc_depacketizer_tlp_req_payload_address = basesoc_depacketizer_header_extracter_source_payload_header[95:64];
assign basesoc_depacketizer_tlp_req_payload_attr = basesoc_depacketizer_header_extracter_source_payload_header[13:12];
assign basesoc_depacketizer_tlp_req_payload_ep = basesoc_depacketizer_header_extracter_source_payload_header[14];
assign basesoc_depacketizer_tlp_req_payload_first_be = basesoc_depacketizer_header_extracter_source_payload_header[35:32];
always @(*) begin
	basesoc_depacketizer_tlp_req_payload_fmt <= 2'd0;
	basesoc_depacketizer_tlp_req_payload_fmt <= basesoc_depacketizer_endpoint0_payload_fmt;
	basesoc_depacketizer_tlp_req_payload_fmt <= basesoc_depacketizer_header_extracter_source_payload_header[30:29];
end
assign basesoc_depacketizer_tlp_req_payload_last_be = basesoc_depacketizer_header_extracter_source_payload_header[39:36];
assign basesoc_depacketizer_tlp_req_payload_length = basesoc_depacketizer_header_extracter_source_payload_header[9:0];
assign basesoc_depacketizer_tlp_req_payload_requester_id = basesoc_depacketizer_header_extracter_source_payload_header[63:48];
assign basesoc_depacketizer_tlp_req_payload_tag = basesoc_depacketizer_header_extracter_source_payload_header[47:40];
assign basesoc_depacketizer_tlp_req_payload_tc = basesoc_depacketizer_header_extracter_source_payload_header[22:20];
assign basesoc_depacketizer_tlp_req_payload_td = basesoc_depacketizer_header_extracter_source_payload_header[15];
always @(*) begin
	basesoc_depacketizer_tlp_req_payload_type <= 5'd0;
	basesoc_depacketizer_tlp_req_payload_type <= basesoc_depacketizer_endpoint0_payload_type;
	basesoc_depacketizer_tlp_req_payload_type <= basesoc_depacketizer_header_extracter_source_payload_header[28:24];
end
assign basesoc_depacketizer_req_source_valid = basesoc_depacketizer_tlp_req_valid;
assign basesoc_depacketizer_req_source_payload_we = (basesoc_depacketizer_tlp_req_valid & ({basesoc_depacketizer_tlp_req_payload_fmt, basesoc_depacketizer_tlp_req_payload_type} == 7'd64));
assign basesoc_depacketizer_tlp_req_ready = basesoc_depacketizer_req_source_ready;
assign basesoc_depacketizer_req_source_first = basesoc_depacketizer_tlp_req_first;
assign basesoc_depacketizer_req_source_last = basesoc_depacketizer_tlp_req_last;
assign basesoc_depacketizer_req_source_payload_adr = ($signed({1'd0, basesoc_depacketizer_tlp_req_payload_address}) & -33'd4294836225);
assign basesoc_depacketizer_req_source_payload_len = basesoc_depacketizer_tlp_req_payload_length;
assign basesoc_depacketizer_req_source_payload_req_id = basesoc_depacketizer_tlp_req_payload_requester_id;
assign basesoc_depacketizer_req_source_payload_tag = basesoc_depacketizer_tlp_req_payload_tag;
assign basesoc_depacketizer_req_source_payload_dat = basesoc_depacketizer_tlp_req_payload_dat;
assign basesoc_depacketizer_tlp_cmp_valid = basesoc_depacketizer_endpoint1_valid;
assign basesoc_depacketizer_endpoint1_ready = basesoc_depacketizer_tlp_cmp_ready;
assign basesoc_depacketizer_tlp_cmp_first = basesoc_depacketizer_endpoint1_first;
assign basesoc_depacketizer_tlp_cmp_last = basesoc_depacketizer_endpoint1_last;
assign basesoc_depacketizer_tlp_cmp_payload_dat = basesoc_depacketizer_endpoint1_payload_dat;
assign basesoc_depacketizer_tlp_cmp_payload_be = basesoc_depacketizer_endpoint1_payload_be;
assign basesoc_depacketizer_tlp_cmp_payload_attr = basesoc_depacketizer_header_extracter_source_payload_header[13:12];
assign basesoc_depacketizer_tlp_cmp_payload_bcm = basesoc_depacketizer_header_extracter_source_payload_header[44];
assign basesoc_depacketizer_tlp_cmp_payload_byte_count = basesoc_depacketizer_header_extracter_source_payload_header[43:32];
assign basesoc_depacketizer_tlp_cmp_payload_completer_id = basesoc_depacketizer_header_extracter_source_payload_header[63:48];
assign basesoc_depacketizer_tlp_cmp_payload_ep = basesoc_depacketizer_header_extracter_source_payload_header[14];
always @(*) begin
	basesoc_depacketizer_tlp_cmp_payload_fmt <= 2'd0;
	basesoc_depacketizer_tlp_cmp_payload_fmt <= basesoc_depacketizer_endpoint1_payload_fmt;
	basesoc_depacketizer_tlp_cmp_payload_fmt <= basesoc_depacketizer_header_extracter_source_payload_header[30:29];
end
assign basesoc_depacketizer_tlp_cmp_payload_length = basesoc_depacketizer_header_extracter_source_payload_header[9:0];
assign basesoc_depacketizer_tlp_cmp_payload_lower_address = basesoc_depacketizer_header_extracter_source_payload_header[70:64];
assign basesoc_depacketizer_tlp_cmp_payload_requester_id = basesoc_depacketizer_header_extracter_source_payload_header[95:80];
assign basesoc_depacketizer_tlp_cmp_payload_status = basesoc_depacketizer_header_extracter_source_payload_header[47:45];
assign basesoc_depacketizer_tlp_cmp_payload_tag = basesoc_depacketizer_header_extracter_source_payload_header[79:72];
assign basesoc_depacketizer_tlp_cmp_payload_tc = basesoc_depacketizer_header_extracter_source_payload_header[22:20];
assign basesoc_depacketizer_tlp_cmp_payload_td = basesoc_depacketizer_header_extracter_source_payload_header[15];
always @(*) begin
	basesoc_depacketizer_tlp_cmp_payload_type <= 5'd0;
	basesoc_depacketizer_tlp_cmp_payload_type <= basesoc_depacketizer_endpoint1_payload_type;
	basesoc_depacketizer_tlp_cmp_payload_type <= basesoc_depacketizer_header_extracter_source_payload_header[28:24];
end
assign basesoc_depacketizer_cmp_source_valid = basesoc_depacketizer_tlp_cmp_valid;
assign basesoc_depacketizer_tlp_cmp_ready = basesoc_depacketizer_cmp_source_ready;
assign basesoc_depacketizer_cmp_source_first = basesoc_depacketizer_tlp_cmp_first;
assign basesoc_depacketizer_cmp_source_last = basesoc_depacketizer_tlp_cmp_last;
assign basesoc_depacketizer_cmp_source_payload_len = basesoc_depacketizer_tlp_cmp_payload_length;
assign basesoc_depacketizer_cmp_source_payload_end = (basesoc_depacketizer_tlp_cmp_payload_length == basesoc_depacketizer_tlp_cmp_payload_byte_count[11:2]);
assign basesoc_depacketizer_cmp_source_payload_adr = basesoc_depacketizer_tlp_cmp_payload_lower_address;
assign basesoc_depacketizer_cmp_source_payload_req_id = basesoc_depacketizer_tlp_cmp_payload_requester_id;
assign basesoc_depacketizer_cmp_source_payload_cmp_id = basesoc_depacketizer_tlp_cmp_payload_completer_id;
assign basesoc_depacketizer_cmp_source_payload_err = (basesoc_depacketizer_tlp_cmp_payload_status != 1'd0);
assign basesoc_depacketizer_cmp_source_payload_tag = basesoc_depacketizer_tlp_cmp_payload_tag;
assign basesoc_depacketizer_cmp_source_payload_dat = basesoc_depacketizer_tlp_cmp_payload_dat;
always @(*) begin
	basesoc_depacketizer_header_extracter_source_payload_dat <= 128'd0;
	basesoc_depacketizer_header_extracter_source_payload_dat[31:0] <= {slice_proxy5[7:0], slice_proxy4[15:8], slice_proxy3[23:16], slice_proxy2[31:24]};
	basesoc_depacketizer_header_extracter_source_payload_dat[63:32] <= {slice_proxy9[7:0], slice_proxy8[15:8], slice_proxy7[23:16], slice_proxy6[31:24]};
	basesoc_depacketizer_header_extracter_source_payload_dat[95:64] <= {slice_proxy13[7:0], slice_proxy12[15:8], slice_proxy11[23:16], slice_proxy10[31:24]};
	basesoc_depacketizer_header_extracter_source_payload_dat[127:96] <= {slice_proxy17[7:0], slice_proxy16[15:8], slice_proxy15[23:16], slice_proxy14[31:24]};
end
always @(*) begin
	basesoc_depacketizer_header_extracter_source_payload_be <= 16'd0;
	basesoc_depacketizer_header_extracter_source_payload_be[3:0] <= {slice_proxy21[0], slice_proxy20[1], slice_proxy19[2], slice_proxy18[3]};
	basesoc_depacketizer_header_extracter_source_payload_be[7:4] <= {slice_proxy25[0], slice_proxy24[1], slice_proxy23[2], slice_proxy22[3]};
	basesoc_depacketizer_header_extracter_source_payload_be[11:8] <= {slice_proxy29[0], slice_proxy28[1], slice_proxy27[2], slice_proxy26[3]};
	basesoc_depacketizer_header_extracter_source_payload_be[7:4] <= {slice_proxy33[0], slice_proxy32[1], slice_proxy31[2], slice_proxy30[3]};
end
always @(*) begin
	subfragments_litepcietlpdepacketizer_next_state <= 2'd0;
	basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
	basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
	basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
	basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value0 <= 32'd0;
	basesoc_depacketizer_header_extracter_sink_ready <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value1 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value2 <= 32'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce2 <= 1'd0;
	basesoc_depacketizer_header_extracter_source_valid <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value3 <= 32'd0;
	basesoc_depacketizer_header_extracter_source_first <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_value_ce3 <= 1'd0;
	basesoc_depacketizer_header_extracter_source_last <= 1'd0;
	subfragments_litepcietlpdepacketizer_next_state <= subfragments_litepcietlpdepacketizer_state;
	case (subfragments_litepcietlpdepacketizer_state)
		1'd1: begin
			basesoc_depacketizer_header_extracter_sink_ready <= 1'd1;
			if (basesoc_depacketizer_header_extracter_sink_valid) begin
				subfragments_litepcietlpdepacketizer_next_value0 <= basesoc_depacketizer_header_extracter_sink_payload_dat[31:0];
				subfragments_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value1 <= basesoc_depacketizer_header_extracter_sink_payload_dat[63:32];
				subfragments_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value2 <= basesoc_depacketizer_header_extracter_sink_payload_dat[95:64];
				subfragments_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
				subfragments_litepcietlpdepacketizer_next_value3 <= basesoc_depacketizer_header_extracter_sink_payload_dat[127:96];
				subfragments_litepcietlpdepacketizer_next_value_ce3 <= 1'd1;
				if (basesoc_depacketizer_header_extracter_sink_last) begin
					basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd1;
					basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
				end
				subfragments_litepcietlpdepacketizer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			basesoc_depacketizer_header_extracter_source_valid <= (basesoc_depacketizer_header_extracter_sink_valid | basesoc_depacketizer_header_extracter_last);
			basesoc_depacketizer_header_extracter_source_first <= basesoc_depacketizer_header_extracter_first;
			basesoc_depacketizer_header_extracter_source_last <= (basesoc_depacketizer_header_extracter_sink_last | basesoc_depacketizer_header_extracter_last);
			if ((basesoc_depacketizer_header_extracter_source_valid & basesoc_depacketizer_header_extracter_source_ready)) begin
				basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
				basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
				basesoc_depacketizer_header_extracter_sink_ready <= (1'd1 & (~basesoc_depacketizer_header_extracter_last));
				if (basesoc_depacketizer_header_extracter_source_last) begin
					subfragments_litepcietlpdepacketizer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd1;
			basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
			basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
			basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
			if (basesoc_depacketizer_header_extracter_sink_valid) begin
				subfragments_litepcietlpdepacketizer_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	basesoc_depacketizer_dispatcher_sel1 <= 1'd0;
	if (basesoc_depacketizer_dispatcher_first) begin
		basesoc_depacketizer_dispatcher_sel1 <= basesoc_depacketizer_dispatcher_sel0;
	end else begin
		basesoc_depacketizer_dispatcher_sel1 <= basesoc_depacketizer_dispatcher_sel_ongoing;
	end
end
always @(*) begin
	basesoc_depacketizer_endpoint0_valid <= 1'd0;
	basesoc_depacketizer_endpoint0_first <= 1'd0;
	basesoc_depacketizer_endpoint0_last <= 1'd0;
	basesoc_depacketizer_endpoint0_payload_fmt <= 2'd0;
	basesoc_depacketizer_endpoint0_payload_type <= 5'd0;
	basesoc_depacketizer_endpoint0_payload_dat <= 128'd0;
	basesoc_depacketizer_endpoint0_payload_be <= 16'd0;
	basesoc_depacketizer_endpoint1_valid <= 1'd0;
	basesoc_depacketizer_dispatch_source_ready <= 1'd0;
	basesoc_depacketizer_endpoint1_first <= 1'd0;
	basesoc_depacketizer_endpoint1_last <= 1'd0;
	basesoc_depacketizer_endpoint1_payload_fmt <= 2'd0;
	basesoc_depacketizer_endpoint1_payload_type <= 5'd0;
	basesoc_depacketizer_endpoint1_payload_dat <= 128'd0;
	basesoc_depacketizer_endpoint1_payload_be <= 16'd0;
	case (basesoc_depacketizer_dispatcher_sel1)
		1'd0: begin
			basesoc_depacketizer_endpoint0_valid <= basesoc_depacketizer_dispatch_source_valid;
			basesoc_depacketizer_dispatch_source_ready <= basesoc_depacketizer_endpoint0_ready;
			basesoc_depacketizer_endpoint0_first <= basesoc_depacketizer_dispatch_source_first;
			basesoc_depacketizer_endpoint0_last <= basesoc_depacketizer_dispatch_source_last;
			basesoc_depacketizer_endpoint0_payload_fmt <= basesoc_depacketizer_dispatch_source_payload_fmt;
			basesoc_depacketizer_endpoint0_payload_type <= basesoc_depacketizer_dispatch_source_payload_type;
			basesoc_depacketizer_endpoint0_payload_dat <= basesoc_depacketizer_dispatch_source_payload_dat;
			basesoc_depacketizer_endpoint0_payload_be <= basesoc_depacketizer_dispatch_source_payload_be;
		end
		1'd1: begin
			basesoc_depacketizer_endpoint1_valid <= basesoc_depacketizer_dispatch_source_valid;
			basesoc_depacketizer_dispatch_source_ready <= basesoc_depacketizer_endpoint1_ready;
			basesoc_depacketizer_endpoint1_first <= basesoc_depacketizer_dispatch_source_first;
			basesoc_depacketizer_endpoint1_last <= basesoc_depacketizer_dispatch_source_last;
			basesoc_depacketizer_endpoint1_payload_fmt <= basesoc_depacketizer_dispatch_source_payload_fmt;
			basesoc_depacketizer_endpoint1_payload_type <= basesoc_depacketizer_dispatch_source_payload_type;
			basesoc_depacketizer_endpoint1_payload_dat <= basesoc_depacketizer_dispatch_source_payload_dat;
			basesoc_depacketizer_endpoint1_payload_be <= basesoc_depacketizer_dispatch_source_payload_be;
		end
		default: begin
			basesoc_depacketizer_dispatch_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	basesoc_depacketizer_dispatcher_last <= 1'd0;
	if (basesoc_depacketizer_dispatch_source_valid) begin
		basesoc_depacketizer_dispatcher_last <= (basesoc_depacketizer_dispatch_source_last & basesoc_depacketizer_dispatch_source_ready);
	end
end
assign basesoc_depacketizer_dispatcher_ongoing0 = ((basesoc_depacketizer_dispatch_source_valid | basesoc_depacketizer_dispatcher_ongoing1) & (~basesoc_depacketizer_dispatcher_last));
assign basesoc_packetizer_tlp_req_valid = basesoc_packetizer_req_sink_valid;
assign basesoc_packetizer_req_sink_ready = basesoc_packetizer_tlp_req_ready;
assign basesoc_packetizer_tlp_req_first = basesoc_packetizer_req_sink_first;
assign basesoc_packetizer_tlp_req_last = basesoc_packetizer_req_sink_last;
always @(*) begin
	basesoc_packetizer_tlp_req_payload_type <= 5'd0;
	basesoc_packetizer_tlp_req_payload_fmt <= 2'd0;
	if (basesoc_packetizer_req_sink_payload_we) begin
		{basesoc_packetizer_tlp_req_payload_fmt, basesoc_packetizer_tlp_req_payload_type} <= 7'd64;
	end else begin
		{basesoc_packetizer_tlp_req_payload_fmt, basesoc_packetizer_tlp_req_payload_type} <= 1'd0;
	end
end
assign basesoc_packetizer_tlp_req_payload_tc = 1'd0;
assign basesoc_packetizer_tlp_req_payload_td = 1'd0;
assign basesoc_packetizer_tlp_req_payload_ep = 1'd0;
assign basesoc_packetizer_tlp_req_payload_attr = 1'd0;
assign basesoc_packetizer_tlp_req_payload_length = basesoc_packetizer_req_sink_payload_len;
assign basesoc_packetizer_tlp_req_payload_requester_id = basesoc_packetizer_req_sink_payload_req_id;
assign basesoc_packetizer_tlp_req_payload_tag = basesoc_packetizer_req_sink_payload_tag;
always @(*) begin
	basesoc_packetizer_tlp_req_payload_last_be <= 4'd0;
	if ((basesoc_packetizer_req_sink_payload_len > 1'd1)) begin
		basesoc_packetizer_tlp_req_payload_last_be <= 4'd15;
	end else begin
		basesoc_packetizer_tlp_req_payload_last_be <= 1'd0;
	end
end
assign basesoc_packetizer_tlp_req_payload_first_be = 4'd15;
assign basesoc_packetizer_tlp_req_payload_address = basesoc_packetizer_req_sink_payload_adr;
assign basesoc_packetizer_tlp_req_payload_dat = basesoc_packetizer_req_sink_payload_dat;
always @(*) begin
	basesoc_packetizer_tlp_req_payload_be <= 16'd0;
	if (basesoc_packetizer_req_sink_payload_we) begin
		basesoc_packetizer_tlp_req_payload_be <= 16'd65535;
	end else begin
		basesoc_packetizer_tlp_req_payload_be <= 1'd0;
	end
end
assign basesoc_packetizer_tlp_raw_req_valid = basesoc_packetizer_tlp_req_valid;
assign basesoc_packetizer_tlp_req_ready = basesoc_packetizer_tlp_raw_req_ready;
assign basesoc_packetizer_tlp_raw_req_first = basesoc_packetizer_tlp_req_first;
assign basesoc_packetizer_tlp_raw_req_last = basesoc_packetizer_tlp_req_last;
always @(*) begin
	basesoc_packetizer_tlp_raw_req_payload_header <= 128'd0;
	basesoc_packetizer_tlp_raw_req_payload_header[95:64] <= basesoc_packetizer_tlp_req_payload_address;
	basesoc_packetizer_tlp_raw_req_payload_header[13:12] <= basesoc_packetizer_tlp_req_payload_attr;
	basesoc_packetizer_tlp_raw_req_payload_header[14] <= basesoc_packetizer_tlp_req_payload_ep;
	basesoc_packetizer_tlp_raw_req_payload_header[35:32] <= basesoc_packetizer_tlp_req_payload_first_be;
	basesoc_packetizer_tlp_raw_req_payload_header[30:29] <= basesoc_packetizer_tlp_req_payload_fmt;
	basesoc_packetizer_tlp_raw_req_payload_header[39:36] <= basesoc_packetizer_tlp_req_payload_last_be;
	basesoc_packetizer_tlp_raw_req_payload_header[9:0] <= basesoc_packetizer_tlp_req_payload_length;
	basesoc_packetizer_tlp_raw_req_payload_header[63:48] <= basesoc_packetizer_tlp_req_payload_requester_id;
	basesoc_packetizer_tlp_raw_req_payload_header[47:40] <= basesoc_packetizer_tlp_req_payload_tag;
	basesoc_packetizer_tlp_raw_req_payload_header[22:20] <= basesoc_packetizer_tlp_req_payload_tc;
	basesoc_packetizer_tlp_raw_req_payload_header[15] <= basesoc_packetizer_tlp_req_payload_td;
	basesoc_packetizer_tlp_raw_req_payload_header[28:24] <= basesoc_packetizer_tlp_req_payload_type;
end
assign basesoc_packetizer_tlp_raw_req_payload_dat = basesoc_packetizer_tlp_req_payload_dat;
assign basesoc_packetizer_tlp_raw_req_payload_be = basesoc_packetizer_tlp_req_payload_be;
assign basesoc_packetizer_tlp_cmp_valid = basesoc_packetizer_cmp_sink_valid;
assign basesoc_packetizer_cmp_sink_ready = basesoc_packetizer_tlp_cmp_ready;
assign basesoc_packetizer_tlp_cmp_first = basesoc_packetizer_cmp_sink_first;
assign basesoc_packetizer_tlp_cmp_last = basesoc_packetizer_cmp_sink_last;
assign basesoc_packetizer_tlp_cmp_payload_tc = 1'd0;
assign basesoc_packetizer_tlp_cmp_payload_td = 1'd0;
assign basesoc_packetizer_tlp_cmp_payload_ep = 1'd0;
assign basesoc_packetizer_tlp_cmp_payload_attr = 1'd0;
assign basesoc_packetizer_tlp_cmp_payload_length = basesoc_packetizer_cmp_sink_payload_len;
assign basesoc_packetizer_tlp_cmp_payload_completer_id = basesoc_packetizer_cmp_sink_payload_cmp_id;
always @(*) begin
	basesoc_packetizer_tlp_cmp_payload_fmt <= 2'd0;
	basesoc_packetizer_tlp_cmp_payload_status <= 3'd0;
	basesoc_packetizer_tlp_cmp_payload_type <= 5'd0;
	if (basesoc_packetizer_cmp_sink_payload_err) begin
		{basesoc_packetizer_tlp_cmp_payload_fmt, basesoc_packetizer_tlp_cmp_payload_type} <= 4'd10;
		basesoc_packetizer_tlp_cmp_payload_status <= 1'd1;
	end else begin
		{basesoc_packetizer_tlp_cmp_payload_fmt, basesoc_packetizer_tlp_cmp_payload_type} <= 7'd74;
		basesoc_packetizer_tlp_cmp_payload_status <= 1'd0;
	end
end
assign basesoc_packetizer_tlp_cmp_payload_bcm = 1'd0;
assign basesoc_packetizer_tlp_cmp_payload_byte_count = (basesoc_packetizer_cmp_sink_payload_len * 3'd4);
assign basesoc_packetizer_tlp_cmp_payload_requester_id = basesoc_packetizer_cmp_sink_payload_req_id;
assign basesoc_packetizer_tlp_cmp_payload_tag = basesoc_packetizer_cmp_sink_payload_tag;
assign basesoc_packetizer_tlp_cmp_payload_lower_address = basesoc_packetizer_cmp_sink_payload_adr;
assign basesoc_packetizer_tlp_cmp_payload_dat = basesoc_packetizer_cmp_sink_payload_dat;
always @(*) begin
	basesoc_packetizer_tlp_cmp_payload_be <= 16'd0;
	if ((basesoc_packetizer_cmp_sink_last & basesoc_packetizer_cmp_sink_first)) begin
		basesoc_packetizer_tlp_cmp_payload_be <= 4'd15;
	end else begin
		basesoc_packetizer_tlp_cmp_payload_be <= 16'd65535;
	end
end
assign basesoc_packetizer_tlp_raw_cmp_valid = basesoc_packetizer_tlp_cmp_valid;
assign basesoc_packetizer_tlp_cmp_ready = basesoc_packetizer_tlp_raw_cmp_ready;
assign basesoc_packetizer_tlp_raw_cmp_first = basesoc_packetizer_tlp_cmp_first;
assign basesoc_packetizer_tlp_raw_cmp_last = basesoc_packetizer_tlp_cmp_last;
always @(*) begin
	basesoc_packetizer_tlp_raw_cmp_payload_header <= 128'd0;
	basesoc_packetizer_tlp_raw_cmp_payload_header[13:12] <= basesoc_packetizer_tlp_cmp_payload_attr;
	basesoc_packetizer_tlp_raw_cmp_payload_header[44] <= basesoc_packetizer_tlp_cmp_payload_bcm;
	basesoc_packetizer_tlp_raw_cmp_payload_header[43:32] <= basesoc_packetizer_tlp_cmp_payload_byte_count;
	basesoc_packetizer_tlp_raw_cmp_payload_header[63:48] <= basesoc_packetizer_tlp_cmp_payload_completer_id;
	basesoc_packetizer_tlp_raw_cmp_payload_header[14] <= basesoc_packetizer_tlp_cmp_payload_ep;
	basesoc_packetizer_tlp_raw_cmp_payload_header[30:29] <= basesoc_packetizer_tlp_cmp_payload_fmt;
	basesoc_packetizer_tlp_raw_cmp_payload_header[9:0] <= basesoc_packetizer_tlp_cmp_payload_length;
	basesoc_packetizer_tlp_raw_cmp_payload_header[70:64] <= basesoc_packetizer_tlp_cmp_payload_lower_address;
	basesoc_packetizer_tlp_raw_cmp_payload_header[95:80] <= basesoc_packetizer_tlp_cmp_payload_requester_id;
	basesoc_packetizer_tlp_raw_cmp_payload_header[47:45] <= basesoc_packetizer_tlp_cmp_payload_status;
	basesoc_packetizer_tlp_raw_cmp_payload_header[79:72] <= basesoc_packetizer_tlp_cmp_payload_tag;
	basesoc_packetizer_tlp_raw_cmp_payload_header[22:20] <= basesoc_packetizer_tlp_cmp_payload_tc;
	basesoc_packetizer_tlp_raw_cmp_payload_header[15] <= basesoc_packetizer_tlp_cmp_payload_td;
	basesoc_packetizer_tlp_raw_cmp_payload_header[28:24] <= basesoc_packetizer_tlp_cmp_payload_type;
end
assign basesoc_packetizer_tlp_raw_cmp_payload_dat = basesoc_packetizer_tlp_cmp_payload_dat;
assign basesoc_packetizer_tlp_raw_cmp_payload_be = basesoc_packetizer_tlp_cmp_payload_be;
assign basesoc_packetizer_header_inserter_sink_valid = basesoc_packetizer_tlp_raw_valid;
assign basesoc_packetizer_tlp_raw_ready = basesoc_packetizer_header_inserter_sink_ready;
assign basesoc_packetizer_header_inserter_sink_first = basesoc_packetizer_tlp_raw_first;
assign basesoc_packetizer_header_inserter_sink_last = basesoc_packetizer_tlp_raw_last;
assign basesoc_packetizer_header_inserter_sink_payload_header = basesoc_packetizer_tlp_raw_payload_header;
assign basesoc_packetizer_header_inserter_sink_payload_dat = basesoc_packetizer_tlp_raw_payload_dat;
assign basesoc_packetizer_header_inserter_sink_payload_be = basesoc_packetizer_tlp_raw_payload_be;
assign basesoc_packetizer_source_source_valid = basesoc_packetizer_header_inserter_source_valid;
assign basesoc_packetizer_header_inserter_source_ready = basesoc_packetizer_source_source_ready;
assign basesoc_packetizer_source_source_first = basesoc_packetizer_header_inserter_source_first;
assign basesoc_packetizer_source_source_last = basesoc_packetizer_header_inserter_source_last;
assign basesoc_packetizer_source_source_payload_dat = basesoc_packetizer_header_inserter_source_payload_dat;
assign basesoc_packetizer_source_source_payload_be = basesoc_packetizer_header_inserter_source_payload_be;
always @(*) begin
	basesoc_packetizer_request <= 2'd0;
	basesoc_packetizer_request[0] <= basesoc_packetizer_status0_ongoing0;
	basesoc_packetizer_request[1] <= basesoc_packetizer_status1_ongoing0;
end
always @(*) begin
	basesoc_packetizer_tlp_raw_first <= 1'd0;
	basesoc_packetizer_tlp_raw_last <= 1'd0;
	basesoc_packetizer_tlp_raw_cmp_ready <= 1'd0;
	basesoc_packetizer_tlp_raw_payload_header <= 128'd0;
	basesoc_packetizer_tlp_raw_payload_dat <= 128'd0;
	basesoc_packetizer_tlp_raw_payload_be <= 16'd0;
	basesoc_packetizer_tlp_raw_req_ready <= 1'd0;
	basesoc_packetizer_tlp_raw_valid <= 1'd0;
	case (basesoc_packetizer_grant)
		1'd0: begin
			basesoc_packetizer_tlp_raw_valid <= basesoc_packetizer_tlp_raw_req_valid;
			basesoc_packetizer_tlp_raw_req_ready <= basesoc_packetizer_tlp_raw_ready;
			basesoc_packetizer_tlp_raw_first <= basesoc_packetizer_tlp_raw_req_first;
			basesoc_packetizer_tlp_raw_last <= basesoc_packetizer_tlp_raw_req_last;
			basesoc_packetizer_tlp_raw_payload_header <= basesoc_packetizer_tlp_raw_req_payload_header;
			basesoc_packetizer_tlp_raw_payload_dat <= basesoc_packetizer_tlp_raw_req_payload_dat;
			basesoc_packetizer_tlp_raw_payload_be <= basesoc_packetizer_tlp_raw_req_payload_be;
		end
		1'd1: begin
			basesoc_packetizer_tlp_raw_valid <= basesoc_packetizer_tlp_raw_cmp_valid;
			basesoc_packetizer_tlp_raw_cmp_ready <= basesoc_packetizer_tlp_raw_ready;
			basesoc_packetizer_tlp_raw_first <= basesoc_packetizer_tlp_raw_cmp_first;
			basesoc_packetizer_tlp_raw_last <= basesoc_packetizer_tlp_raw_cmp_last;
			basesoc_packetizer_tlp_raw_payload_header <= basesoc_packetizer_tlp_raw_cmp_payload_header;
			basesoc_packetizer_tlp_raw_payload_dat <= basesoc_packetizer_tlp_raw_cmp_payload_dat;
			basesoc_packetizer_tlp_raw_payload_be <= basesoc_packetizer_tlp_raw_cmp_payload_be;
		end
	endcase
end
always @(*) begin
	basesoc_packetizer_status0_last <= 1'd0;
	if (basesoc_packetizer_tlp_raw_req_valid) begin
		basesoc_packetizer_status0_last <= (basesoc_packetizer_tlp_raw_req_last & basesoc_packetizer_tlp_raw_req_ready);
	end
end
assign basesoc_packetizer_status0_ongoing0 = ((basesoc_packetizer_tlp_raw_req_valid | basesoc_packetizer_status0_ongoing1) & (~basesoc_packetizer_status0_last));
always @(*) begin
	basesoc_packetizer_status1_last <= 1'd0;
	if (basesoc_packetizer_tlp_raw_cmp_valid) begin
		basesoc_packetizer_status1_last <= (basesoc_packetizer_tlp_raw_cmp_last & basesoc_packetizer_tlp_raw_cmp_ready);
	end
end
assign basesoc_packetizer_status1_ongoing0 = ((basesoc_packetizer_tlp_raw_cmp_valid | basesoc_packetizer_status1_ongoing1) & (~basesoc_packetizer_status1_last));
always @(*) begin
	basesoc_packetizer_header_inserter_sink_ready <= 1'd0;
	basesoc_packetizer_header_inserter_source_first <= 1'd0;
	basesoc_packetizer_header_inserter_source_last <= 1'd0;
	basesoc_packetizer_header_inserter_source_payload_dat <= 128'd0;
	subfragments_litepcietlppacketizer_next_state <= 1'd0;
	basesoc_packetizer_header_inserter_source_payload_be <= 16'd0;
	basesoc_packetizer_header_inserter_source_valid <= 1'd0;
	subfragments_litepcietlppacketizer_next_state <= subfragments_litepcietlppacketizer_state;
	case (subfragments_litepcietlppacketizer_state)
		1'd1: begin
			basesoc_packetizer_header_inserter_source_valid <= (basesoc_packetizer_header_inserter_sink_valid | basesoc_packetizer_header_inserter_last);
			basesoc_packetizer_header_inserter_source_last <= basesoc_packetizer_header_inserter_last;
			basesoc_packetizer_header_inserter_source_payload_dat[31:0] <= {rhs_slice_proxy3[7:0], rhs_slice_proxy2[15:8], rhs_slice_proxy1[23:16], rhs_slice_proxy0[31:24]};
			basesoc_packetizer_header_inserter_source_payload_be[3:0] <= 4'd15;
			basesoc_packetizer_header_inserter_source_payload_dat[63:32] <= {rhs_slice_proxy7[7:0], rhs_slice_proxy6[15:8], rhs_slice_proxy5[23:16], rhs_slice_proxy4[31:24]};
			basesoc_packetizer_header_inserter_source_payload_be[7:4] <= 4'd15;
			basesoc_packetizer_header_inserter_source_payload_dat[95:64] <= {rhs_slice_proxy11[7:0], rhs_slice_proxy10[15:8], rhs_slice_proxy9[23:16], rhs_slice_proxy8[31:24]};
			basesoc_packetizer_header_inserter_source_payload_be[11:8] <= 4'd15;
			basesoc_packetizer_header_inserter_source_payload_dat[127:96] <= {rhs_slice_proxy15[7:0], rhs_slice_proxy14[15:8], rhs_slice_proxy13[23:16], rhs_slice_proxy12[31:24]};
			if (basesoc_packetizer_header_inserter_last) begin
				basesoc_packetizer_header_inserter_source_payload_be[15:12] <= 1'd0;
			end else begin
				basesoc_packetizer_header_inserter_source_payload_be[15:12] <= 4'd15;
			end
			if ((basesoc_packetizer_header_inserter_source_valid & basesoc_packetizer_header_inserter_source_ready)) begin
				basesoc_packetizer_header_inserter_sink_ready <= (~basesoc_packetizer_header_inserter_last);
				if (basesoc_packetizer_header_inserter_source_last) begin
					subfragments_litepcietlppacketizer_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_packetizer_header_inserter_sink_ready <= 1'd1;
			if ((basesoc_packetizer_header_inserter_sink_valid & basesoc_packetizer_header_inserter_sink_first)) begin
				basesoc_packetizer_header_inserter_sink_ready <= 1'd0;
				basesoc_packetizer_header_inserter_source_valid <= 1'd1;
				basesoc_packetizer_header_inserter_source_first <= 1'd1;
				basesoc_packetizer_header_inserter_source_last <= basesoc_packetizer_header_inserter_sink_last;
				basesoc_packetizer_header_inserter_source_payload_dat[31:0] <= basesoc_packetizer_header_inserter_sink_payload_header[31:0];
				basesoc_packetizer_header_inserter_source_payload_be[3:0] <= 4'd15;
				basesoc_packetizer_header_inserter_source_payload_dat[63:32] <= basesoc_packetizer_header_inserter_sink_payload_header[63:32];
				basesoc_packetizer_header_inserter_source_payload_be[7:4] <= 4'd15;
				basesoc_packetizer_header_inserter_source_payload_dat[95:64] <= basesoc_packetizer_header_inserter_sink_payload_header[95:64];
				basesoc_packetizer_header_inserter_source_payload_be[11:8] <= 4'd15;
				basesoc_packetizer_header_inserter_source_payload_dat[127:96] <= {t_slice_proxy3[7:0], t_slice_proxy2[15:8], t_slice_proxy1[23:16], t_slice_proxy0[31:24]};
				basesoc_packetizer_header_inserter_source_payload_be[15:12] <= {t_slice_proxy7[0], t_slice_proxy6[1], t_slice_proxy5[2], t_slice_proxy4[3]};
				if ((basesoc_packetizer_header_inserter_source_valid & basesoc_packetizer_header_inserter_source_ready)) begin
					basesoc_packetizer_header_inserter_sink_ready <= 1'd1;
					if ((~basesoc_packetizer_header_inserter_source_last)) begin
						subfragments_litepcietlppacketizer_next_state <= 1'd1;
					end
				end
			end
		end
	endcase
end
assign subfragments_s_dispatcher_sel = 1'd1;
assign subfragments_m_dispatcher_sel0 = (subfragments_master_in_source_payload_channel == 1'd1);
assign subfragments_m_dispatcher_sel1 = (subfragments_source_payload_channel == 1'd0);
assign subfragments_master_out_source_valid = basesoc_master_source_valid;
assign basesoc_master_source_ready = subfragments_master_out_source_ready;
assign subfragments_master_out_source_first = basesoc_master_source_first;
assign subfragments_master_out_source_last = basesoc_master_source_last;
assign subfragments_master_out_source_payload_adr = basesoc_master_source_payload_adr;
assign subfragments_master_out_source_payload_len = basesoc_master_source_payload_len;
assign subfragments_master_out_source_payload_end = basesoc_master_source_payload_end;
assign subfragments_master_out_source_payload_req_id = basesoc_master_source_payload_req_id;
assign subfragments_master_out_source_payload_cmp_id = basesoc_master_source_payload_cmp_id;
assign subfragments_master_out_source_payload_err = basesoc_master_source_payload_err;
assign subfragments_master_out_source_payload_tag = basesoc_master_source_payload_tag;
assign subfragments_master_out_source_payload_dat = basesoc_master_source_payload_dat;
assign subfragments_master_out_source_payload_channel = basesoc_master_source_payload_channel;
assign subfragments_master_out_source_payload_user_id = basesoc_master_source_payload_user_id;
assign basesoc_mmap_source_valid = basesoc_slave_source_valid;
assign basesoc_slave_source_ready = basesoc_mmap_source_ready;
assign basesoc_mmap_source_first = basesoc_slave_source_first;
assign basesoc_mmap_source_last = basesoc_slave_source_last;
assign basesoc_mmap_source_payload_we = basesoc_slave_source_payload_we;
assign basesoc_mmap_source_payload_adr = basesoc_slave_source_payload_adr;
assign basesoc_mmap_source_payload_len = basesoc_slave_source_payload_len;
assign basesoc_mmap_source_payload_req_id = basesoc_slave_source_payload_req_id;
assign basesoc_mmap_source_payload_tag = basesoc_slave_source_payload_tag;
assign basesoc_mmap_source_payload_dat = basesoc_slave_source_payload_dat;
assign basesoc_mmap_source_payload_channel = basesoc_slave_source_payload_channel;
assign basesoc_mmap_source_payload_user_id = basesoc_slave_source_payload_user_id;
assign basesoc_slave_sink_valid = basesoc_mmap_sink_valid;
assign basesoc_mmap_sink_ready = basesoc_slave_sink_ready;
assign basesoc_slave_sink_first = basesoc_mmap_sink_first;
assign basesoc_slave_sink_last = basesoc_mmap_sink_last;
assign basesoc_slave_sink_payload_adr = basesoc_mmap_sink_payload_adr;
assign basesoc_slave_sink_payload_len = basesoc_mmap_sink_payload_len;
assign basesoc_slave_sink_payload_end = basesoc_mmap_sink_payload_end;
assign basesoc_slave_sink_payload_req_id = basesoc_mmap_sink_payload_req_id;
assign basesoc_slave_sink_payload_cmp_id = basesoc_mmap_sink_payload_cmp_id;
assign basesoc_slave_sink_payload_err = basesoc_mmap_sink_payload_err;
assign basesoc_slave_sink_payload_tag = basesoc_mmap_sink_payload_tag;
assign basesoc_slave_sink_payload_dat = basesoc_mmap_sink_payload_dat;
assign basesoc_slave_sink_payload_channel = basesoc_mmap_sink_payload_channel;
assign basesoc_slave_sink_payload_user_id = basesoc_mmap_sink_payload_user_id;
assign subfragments_master_out_sink_first = subfragments_master_in_sink_first;
assign subfragments_master_out_sink_last = subfragments_master_in_sink_last;
assign subfragments_master_out_sink_payload_we = subfragments_master_in_sink_payload_we;
assign subfragments_master_out_sink_payload_adr = subfragments_master_in_sink_payload_adr;
assign subfragments_master_out_sink_payload_len = subfragments_master_in_sink_payload_len;
assign subfragments_master_out_sink_payload_req_id = subfragments_master_in_sink_payload_req_id;
assign subfragments_master_out_sink_payload_dat = subfragments_master_in_sink_payload_dat;
assign subfragments_master_out_sink_payload_channel = subfragments_master_in_sink_payload_channel;
assign subfragments_master_out_sink_payload_user_id = subfragments_master_in_sink_payload_user_id;
always @(*) begin
	subfragments_syncfifo5_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo1_sink_payload_dat <= 128'd0;
	subfragments_syncfifo1_sink_payload_channel <= 8'd0;
	subfragments_syncfifo1_sink_payload_user_id <= 8'd0;
	subfragments_cmp_reorder_ready <= 1'd0;
	subfragments_syncfifo4_sink_valid <= 1'd0;
	subfragments_syncfifo0_sink_valid <= 1'd0;
	subfragments_syncfifo4_sink_first <= 1'd0;
	subfragments_syncfifo4_sink_last <= 1'd0;
	subfragments_syncfifo0_sink_first <= 1'd0;
	subfragments_syncfifo4_sink_payload_adr <= 32'd0;
	subfragments_syncfifo0_sink_last <= 1'd0;
	subfragments_syncfifo4_sink_payload_len <= 10'd0;
	subfragments_syncfifo0_sink_payload_adr <= 32'd0;
	subfragments_syncfifo4_sink_payload_end <= 1'd0;
	subfragments_syncfifo0_sink_payload_len <= 10'd0;
	subfragments_syncfifo4_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo0_sink_payload_end <= 1'd0;
	subfragments_syncfifo4_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo0_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo4_sink_payload_err <= 1'd0;
	subfragments_syncfifo0_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo4_sink_payload_tag <= 8'd0;
	subfragments_syncfifo0_sink_payload_err <= 1'd0;
	subfragments_syncfifo4_sink_payload_dat <= 128'd0;
	subfragments_syncfifo0_sink_payload_tag <= 8'd0;
	subfragments_syncfifo4_sink_payload_channel <= 8'd0;
	subfragments_syncfifo0_sink_payload_dat <= 128'd0;
	subfragments_syncfifo4_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo0_sink_payload_channel <= 8'd0;
	subfragments_syncfifo0_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo7_sink_valid <= 1'd0;
	subfragments_syncfifo3_sink_valid <= 1'd0;
	subfragments_syncfifo7_sink_first <= 1'd0;
	subfragments_syncfifo7_sink_last <= 1'd0;
	subfragments_syncfifo3_sink_first <= 1'd0;
	subfragments_syncfifo7_sink_payload_adr <= 32'd0;
	subfragments_syncfifo3_sink_last <= 1'd0;
	subfragments_syncfifo7_sink_payload_len <= 10'd0;
	subfragments_syncfifo3_sink_payload_adr <= 32'd0;
	subfragments_syncfifo7_sink_payload_end <= 1'd0;
	subfragments_syncfifo3_sink_payload_len <= 10'd0;
	subfragments_syncfifo7_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo3_sink_payload_end <= 1'd0;
	subfragments_syncfifo7_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo3_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo7_sink_payload_err <= 1'd0;
	subfragments_syncfifo3_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo7_sink_payload_tag <= 8'd0;
	subfragments_syncfifo3_sink_payload_err <= 1'd0;
	subfragments_syncfifo7_sink_payload_dat <= 128'd0;
	subfragments_syncfifo3_sink_payload_tag <= 8'd0;
	subfragments_syncfifo7_sink_payload_channel <= 8'd0;
	subfragments_syncfifo3_sink_payload_dat <= 128'd0;
	subfragments_syncfifo7_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo3_sink_payload_channel <= 8'd0;
	subfragments_syncfifo3_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo6_sink_valid <= 1'd0;
	subfragments_syncfifo6_sink_first <= 1'd0;
	subfragments_syncfifo2_sink_valid <= 1'd0;
	subfragments_syncfifo6_sink_last <= 1'd0;
	subfragments_syncfifo6_sink_payload_adr <= 32'd0;
	subfragments_syncfifo2_sink_first <= 1'd0;
	subfragments_syncfifo6_sink_payload_len <= 10'd0;
	subfragments_syncfifo2_sink_last <= 1'd0;
	subfragments_syncfifo6_sink_payload_end <= 1'd0;
	subfragments_syncfifo2_sink_payload_adr <= 32'd0;
	subfragments_syncfifo6_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo2_sink_payload_len <= 10'd0;
	subfragments_syncfifo6_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo2_sink_payload_end <= 1'd0;
	subfragments_syncfifo6_sink_payload_err <= 1'd0;
	subfragments_syncfifo2_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo6_sink_payload_tag <= 8'd0;
	subfragments_syncfifo2_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo6_sink_payload_dat <= 128'd0;
	subfragments_syncfifo2_sink_payload_err <= 1'd0;
	subfragments_syncfifo6_sink_payload_channel <= 8'd0;
	subfragments_syncfifo2_sink_payload_tag <= 8'd0;
	subfragments_syncfifo6_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo2_sink_payload_dat <= 128'd0;
	subfragments_syncfifo2_sink_payload_channel <= 8'd0;
	subfragments_syncfifo2_sink_payload_user_id <= 8'd0;
	subfragments_syncfifo5_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo5_sink_payload_channel <= 8'd0;
	subfragments_syncfifo5_sink_payload_err <= 1'd0;
	subfragments_syncfifo5_sink_valid <= 1'd0;
	subfragments_syncfifo5_sink_payload_tag <= 8'd0;
	subfragments_syncfifo1_sink_valid <= 1'd0;
	subfragments_syncfifo5_sink_first <= 1'd0;
	subfragments_syncfifo5_sink_last <= 1'd0;
	subfragments_syncfifo1_sink_first <= 1'd0;
	subfragments_syncfifo5_sink_payload_adr <= 32'd0;
	subfragments_syncfifo1_sink_last <= 1'd0;
	subfragments_syncfifo5_sink_payload_len <= 10'd0;
	subfragments_syncfifo1_sink_payload_adr <= 32'd0;
	subfragments_syncfifo5_sink_payload_end <= 1'd0;
	subfragments_syncfifo1_sink_payload_len <= 10'd0;
	subfragments_syncfifo5_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_end <= 1'd0;
	subfragments_syncfifo5_sink_payload_dat <= 128'd0;
	subfragments_syncfifo1_sink_payload_req_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_cmp_id <= 16'd0;
	subfragments_syncfifo1_sink_payload_err <= 1'd0;
	subfragments_syncfifo1_sink_payload_tag <= 8'd0;
	case (subfragments_cmp_reorder_payload_tag)
		1'd0: begin
			subfragments_syncfifo0_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo0_sink_ready;
			subfragments_syncfifo0_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo0_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo0_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo0_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo0_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo0_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo0_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo0_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo0_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo0_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo0_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo0_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		1'd1: begin
			subfragments_syncfifo1_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo1_sink_ready;
			subfragments_syncfifo1_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo1_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo1_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo1_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo1_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo1_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo1_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo1_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo1_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo1_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo1_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo1_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		2'd2: begin
			subfragments_syncfifo2_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo2_sink_ready;
			subfragments_syncfifo2_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo2_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo2_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo2_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo2_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo2_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo2_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo2_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo2_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo2_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo2_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo2_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		2'd3: begin
			subfragments_syncfifo3_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo3_sink_ready;
			subfragments_syncfifo3_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo3_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo3_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo3_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo3_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo3_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo3_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo3_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo3_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo3_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo3_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo3_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		3'd4: begin
			subfragments_syncfifo4_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo4_sink_ready;
			subfragments_syncfifo4_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo4_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo4_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo4_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo4_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo4_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo4_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo4_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo4_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo4_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo4_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo4_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		3'd5: begin
			subfragments_syncfifo5_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo5_sink_ready;
			subfragments_syncfifo5_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo5_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo5_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo5_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo5_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo5_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo5_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo5_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo5_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo5_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo5_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo5_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		3'd6: begin
			subfragments_syncfifo6_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo6_sink_ready;
			subfragments_syncfifo6_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo6_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo6_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo6_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo6_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo6_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo6_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo6_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo6_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo6_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo6_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo6_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
		3'd7: begin
			subfragments_syncfifo7_sink_valid <= subfragments_cmp_reorder_valid;
			subfragments_cmp_reorder_ready <= subfragments_syncfifo7_sink_ready;
			subfragments_syncfifo7_sink_first <= subfragments_cmp_reorder_first;
			subfragments_syncfifo7_sink_last <= subfragments_cmp_reorder_last;
			subfragments_syncfifo7_sink_payload_adr <= subfragments_cmp_reorder_payload_adr;
			subfragments_syncfifo7_sink_payload_len <= subfragments_cmp_reorder_payload_len;
			subfragments_syncfifo7_sink_payload_end <= subfragments_cmp_reorder_payload_end;
			subfragments_syncfifo7_sink_payload_req_id <= subfragments_cmp_reorder_payload_req_id;
			subfragments_syncfifo7_sink_payload_cmp_id <= subfragments_cmp_reorder_payload_cmp_id;
			subfragments_syncfifo7_sink_payload_err <= subfragments_cmp_reorder_payload_err;
			subfragments_syncfifo7_sink_payload_tag <= subfragments_cmp_reorder_payload_tag;
			subfragments_syncfifo7_sink_payload_dat <= subfragments_cmp_reorder_payload_dat;
			subfragments_syncfifo7_sink_payload_channel <= subfragments_cmp_reorder_payload_channel;
			subfragments_syncfifo7_sink_payload_user_id <= subfragments_cmp_reorder_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_req_queue_source_ready <= 1'd0;
	if (((subfragments_master_in_source_valid & subfragments_master_in_source_last) & subfragments_master_in_source_payload_end)) begin
		subfragments_req_queue_source_ready <= subfragments_master_in_source_ready;
	end
end
always @(*) begin
	subfragments_master_in_source_payload_adr <= 32'd0;
	subfragments_syncfifo7_source_ready <= 1'd0;
	subfragments_master_in_source_payload_len <= 10'd0;
	subfragments_syncfifo5_source_ready <= 1'd0;
	subfragments_syncfifo6_source_ready <= 1'd0;
	subfragments_syncfifo3_source_ready <= 1'd0;
	subfragments_master_in_source_payload_end <= 1'd0;
	subfragments_syncfifo1_source_ready <= 1'd0;
	subfragments_syncfifo4_source_ready <= 1'd0;
	subfragments_master_in_source_payload_req_id <= 16'd0;
	subfragments_syncfifo2_source_ready <= 1'd0;
	subfragments_master_in_source_payload_cmp_id <= 16'd0;
	subfragments_syncfifo0_source_ready <= 1'd0;
	subfragments_master_in_source_payload_err <= 1'd0;
	subfragments_master_in_source_payload_tag <= 8'd0;
	subfragments_master_in_source_payload_channel <= 8'd0;
	subfragments_master_in_source_payload_dat <= 128'd0;
	subfragments_master_in_source_payload_user_id <= 8'd0;
	subfragments_master_in_source_valid <= 1'd0;
	subfragments_master_in_source_first <= 1'd0;
	subfragments_master_in_source_last <= 1'd0;
	case (subfragments_req_queue_source_payload_tag)
		1'd0: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo0_source_valid;
			subfragments_syncfifo0_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo0_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo0_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo0_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo0_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo0_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo0_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo0_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo0_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo0_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo0_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo0_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo0_source_payload_user_id;
		end
		1'd1: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo1_source_valid;
			subfragments_syncfifo1_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo1_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo1_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo1_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo1_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo1_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo1_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo1_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo1_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo1_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo1_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo1_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo1_source_payload_user_id;
		end
		2'd2: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo2_source_valid;
			subfragments_syncfifo2_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo2_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo2_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo2_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo2_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo2_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo2_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo2_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo2_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo2_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo2_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo2_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo2_source_payload_user_id;
		end
		2'd3: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo3_source_valid;
			subfragments_syncfifo3_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo3_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo3_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo3_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo3_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo3_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo3_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo3_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo3_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo3_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo3_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo3_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo3_source_payload_user_id;
		end
		3'd4: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo4_source_valid;
			subfragments_syncfifo4_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo4_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo4_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo4_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo4_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo4_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo4_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo4_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo4_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo4_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo4_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo4_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo4_source_payload_user_id;
		end
		3'd5: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo5_source_valid;
			subfragments_syncfifo5_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo5_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo5_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo5_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo5_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo5_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo5_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo5_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo5_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo5_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo5_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo5_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo5_source_payload_user_id;
		end
		3'd6: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo6_source_valid;
			subfragments_syncfifo6_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo6_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo6_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo6_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo6_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo6_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo6_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo6_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo6_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo6_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo6_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo6_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo6_source_payload_user_id;
		end
		3'd7: begin
			subfragments_master_in_source_valid <= subfragments_syncfifo7_source_valid;
			subfragments_syncfifo7_source_ready <= subfragments_master_in_source_ready;
			subfragments_master_in_source_first <= subfragments_syncfifo7_source_first;
			subfragments_master_in_source_last <= subfragments_syncfifo7_source_last;
			subfragments_master_in_source_payload_adr <= subfragments_syncfifo7_source_payload_adr;
			subfragments_master_in_source_payload_len <= subfragments_syncfifo7_source_payload_len;
			subfragments_master_in_source_payload_end <= subfragments_syncfifo7_source_payload_end;
			subfragments_master_in_source_payload_req_id <= subfragments_syncfifo7_source_payload_req_id;
			subfragments_master_in_source_payload_cmp_id <= subfragments_syncfifo7_source_payload_cmp_id;
			subfragments_master_in_source_payload_err <= subfragments_syncfifo7_source_payload_err;
			subfragments_master_in_source_payload_tag <= subfragments_syncfifo7_source_payload_tag;
			subfragments_master_in_source_payload_dat <= subfragments_syncfifo7_source_payload_dat;
			subfragments_master_in_source_payload_channel <= subfragments_syncfifo7_source_payload_channel;
			subfragments_master_in_source_payload_user_id <= subfragments_syncfifo7_source_payload_user_id;
		end
	endcase
	subfragments_master_in_source_payload_channel <= subfragments_req_queue_source_payload_channel;
	subfragments_master_in_source_payload_user_id <= subfragments_req_queue_source_payload_user_id;
end
assign subfragments_cmp_reorder_first = subfragments_master_out_source_first;
assign subfragments_cmp_reorder_last = subfragments_master_out_source_last;
assign subfragments_cmp_reorder_payload_adr = subfragments_master_out_source_payload_adr;
assign subfragments_cmp_reorder_payload_len = subfragments_master_out_source_payload_len;
assign subfragments_cmp_reorder_payload_end = subfragments_master_out_source_payload_end;
assign subfragments_cmp_reorder_payload_req_id = subfragments_master_out_source_payload_req_id;
assign subfragments_cmp_reorder_payload_cmp_id = subfragments_master_out_source_payload_cmp_id;
assign subfragments_cmp_reorder_payload_err = subfragments_master_out_source_payload_err;
assign subfragments_cmp_reorder_payload_tag = subfragments_master_out_source_payload_tag;
assign subfragments_cmp_reorder_payload_dat = subfragments_master_out_source_payload_dat;
assign subfragments_cmp_reorder_payload_channel = subfragments_master_out_source_payload_channel;
assign subfragments_cmp_reorder_payload_user_id = subfragments_master_out_source_payload_user_id;
assign subfragments_tag_queue_syncfifo_din = {subfragments_tag_queue_fifo_in_last, subfragments_tag_queue_fifo_in_first, subfragments_tag_queue_fifo_in_payload_tag};
assign {subfragments_tag_queue_fifo_out_last, subfragments_tag_queue_fifo_out_first, subfragments_tag_queue_fifo_out_payload_tag} = subfragments_tag_queue_syncfifo_dout;
assign subfragments_tag_queue_sink_ready = subfragments_tag_queue_syncfifo_writable;
assign subfragments_tag_queue_syncfifo_we = subfragments_tag_queue_sink_valid;
assign subfragments_tag_queue_fifo_in_first = subfragments_tag_queue_sink_first;
assign subfragments_tag_queue_fifo_in_last = subfragments_tag_queue_sink_last;
assign subfragments_tag_queue_fifo_in_payload_tag = subfragments_tag_queue_sink_payload_tag;
assign subfragments_tag_queue_source_valid = subfragments_tag_queue_readable;
assign subfragments_tag_queue_source_first = subfragments_tag_queue_fifo_out_first;
assign subfragments_tag_queue_source_last = subfragments_tag_queue_fifo_out_last;
assign subfragments_tag_queue_source_payload_tag = subfragments_tag_queue_fifo_out_payload_tag;
assign subfragments_tag_queue_re = subfragments_tag_queue_source_ready;
assign subfragments_tag_queue_syncfifo_re = (subfragments_tag_queue_syncfifo_readable & ((~subfragments_tag_queue_readable) | subfragments_tag_queue_re));
assign subfragments_tag_queue_level1 = (subfragments_tag_queue_level0 + subfragments_tag_queue_readable);
always @(*) begin
	subfragments_tag_queue_wrport_adr <= 3'd0;
	if (subfragments_tag_queue_replace) begin
		subfragments_tag_queue_wrport_adr <= (subfragments_tag_queue_produce - 1'd1);
	end else begin
		subfragments_tag_queue_wrport_adr <= subfragments_tag_queue_produce;
	end
end
assign subfragments_tag_queue_wrport_dat_w = subfragments_tag_queue_syncfifo_din;
assign subfragments_tag_queue_wrport_we = (subfragments_tag_queue_syncfifo_we & (subfragments_tag_queue_syncfifo_writable | subfragments_tag_queue_replace));
assign subfragments_tag_queue_do_read = (subfragments_tag_queue_syncfifo_readable & subfragments_tag_queue_syncfifo_re);
assign subfragments_tag_queue_rdport_adr = subfragments_tag_queue_consume;
assign subfragments_tag_queue_syncfifo_dout = subfragments_tag_queue_rdport_dat_r;
assign subfragments_tag_queue_rdport_re = subfragments_tag_queue_do_read;
assign subfragments_tag_queue_syncfifo_writable = (subfragments_tag_queue_level0 != 4'd8);
assign subfragments_tag_queue_syncfifo_readable = (subfragments_tag_queue_level0 != 1'd0);
assign subfragments_req_queue_syncfifo_din = {subfragments_req_queue_fifo_in_last, subfragments_req_queue_fifo_in_first, subfragments_req_queue_fifo_in_payload_user_id, subfragments_req_queue_fifo_in_payload_channel, subfragments_req_queue_fifo_in_payload_tag};
assign {subfragments_req_queue_fifo_out_last, subfragments_req_queue_fifo_out_first, subfragments_req_queue_fifo_out_payload_user_id, subfragments_req_queue_fifo_out_payload_channel, subfragments_req_queue_fifo_out_payload_tag} = subfragments_req_queue_syncfifo_dout;
assign subfragments_req_queue_sink_ready = subfragments_req_queue_syncfifo_writable;
assign subfragments_req_queue_syncfifo_we = subfragments_req_queue_sink_valid;
assign subfragments_req_queue_fifo_in_first = subfragments_req_queue_sink_first;
assign subfragments_req_queue_fifo_in_last = subfragments_req_queue_sink_last;
assign subfragments_req_queue_fifo_in_payload_tag = subfragments_req_queue_sink_payload_tag;
assign subfragments_req_queue_fifo_in_payload_channel = subfragments_req_queue_sink_payload_channel;
assign subfragments_req_queue_fifo_in_payload_user_id = subfragments_req_queue_sink_payload_user_id;
assign subfragments_req_queue_source_valid = subfragments_req_queue_readable;
assign subfragments_req_queue_source_first = subfragments_req_queue_fifo_out_first;
assign subfragments_req_queue_source_last = subfragments_req_queue_fifo_out_last;
assign subfragments_req_queue_source_payload_tag = subfragments_req_queue_fifo_out_payload_tag;
assign subfragments_req_queue_source_payload_channel = subfragments_req_queue_fifo_out_payload_channel;
assign subfragments_req_queue_source_payload_user_id = subfragments_req_queue_fifo_out_payload_user_id;
assign subfragments_req_queue_re = subfragments_req_queue_source_ready;
assign subfragments_req_queue_syncfifo_re = (subfragments_req_queue_syncfifo_readable & ((~subfragments_req_queue_readable) | subfragments_req_queue_re));
assign subfragments_req_queue_level1 = (subfragments_req_queue_level0 + subfragments_req_queue_readable);
always @(*) begin
	subfragments_req_queue_wrport_adr <= 3'd0;
	if (subfragments_req_queue_replace) begin
		subfragments_req_queue_wrport_adr <= (subfragments_req_queue_produce - 1'd1);
	end else begin
		subfragments_req_queue_wrport_adr <= subfragments_req_queue_produce;
	end
end
assign subfragments_req_queue_wrport_dat_w = subfragments_req_queue_syncfifo_din;
assign subfragments_req_queue_wrport_we = (subfragments_req_queue_syncfifo_we & (subfragments_req_queue_syncfifo_writable | subfragments_req_queue_replace));
assign subfragments_req_queue_do_read = (subfragments_req_queue_syncfifo_readable & subfragments_req_queue_syncfifo_re);
assign subfragments_req_queue_rdport_adr = subfragments_req_queue_consume;
assign subfragments_req_queue_syncfifo_dout = subfragments_req_queue_rdport_dat_r;
assign subfragments_req_queue_rdport_re = subfragments_req_queue_do_read;
assign subfragments_req_queue_syncfifo_writable = (subfragments_req_queue_level0 != 4'd8);
assign subfragments_req_queue_syncfifo_readable = (subfragments_req_queue_level0 != 1'd0);
always @(*) begin
	subfragments_req_queue_sink_valid <= 1'd0;
	subfragments_master_in_sink_ready <= 1'd0;
	subfragments_master_out_sink_payload_tag <= 8'd0;
	subfragments_req_queue_sink_payload_tag <= 3'd0;
	subfragments_req_queue_sink_payload_channel <= 8'd0;
	subfragments_req_queue_sink_payload_user_id <= 8'd0;
	subfragments_tag_queue_source_ready <= 1'd0;
	subfragments_master_out_sink_valid <= 1'd0;
	subfragments_fsm0_next_state <= 2'd0;
	subfragments_fsm0_next_state <= subfragments_fsm0_state;
	case (subfragments_fsm0_state)
		1'd1: begin
			subfragments_master_out_sink_valid <= subfragments_master_in_sink_valid;
			subfragments_master_in_sink_ready <= subfragments_master_out_sink_ready;
			subfragments_master_out_sink_payload_tag <= 6'd32;
			if (((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready) & subfragments_master_out_sink_last)) begin
				subfragments_fsm0_next_state <= 1'd0;
			end
		end
		2'd2: begin
			subfragments_master_out_sink_valid <= subfragments_master_in_sink_valid;
			subfragments_master_in_sink_ready <= subfragments_master_out_sink_ready;
			subfragments_master_out_sink_payload_tag <= subfragments_tag_queue_source_payload_tag;
			if (((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready) & subfragments_master_out_sink_last)) begin
				subfragments_tag_queue_source_ready <= 1'd1;
				subfragments_req_queue_sink_valid <= 1'd1;
				subfragments_req_queue_sink_payload_tag <= subfragments_tag_queue_source_payload_tag;
				subfragments_req_queue_sink_payload_channel <= subfragments_master_in_sink_payload_channel;
				subfragments_req_queue_sink_payload_user_id <= subfragments_master_in_sink_payload_user_id;
				subfragments_fsm0_next_state <= 1'd0;
			end
		end
		default: begin
			if ((subfragments_master_in_sink_valid & subfragments_master_in_sink_first)) begin
				if (subfragments_master_in_sink_payload_we) begin
					subfragments_fsm0_next_state <= 1'd1;
				end else begin
					if ((subfragments_tag_queue_source_valid & subfragments_req_queue_sink_ready)) begin
						subfragments_fsm0_next_state <= 2'd2;
					end
				end
			end
		end
	endcase
end
assign subfragments_syncfifo0_syncfifo0_din = {subfragments_syncfifo0_fifo_in_last, subfragments_syncfifo0_fifo_in_first, subfragments_syncfifo0_fifo_in_payload_user_id, subfragments_syncfifo0_fifo_in_payload_channel, subfragments_syncfifo0_fifo_in_payload_dat, subfragments_syncfifo0_fifo_in_payload_tag, subfragments_syncfifo0_fifo_in_payload_err, subfragments_syncfifo0_fifo_in_payload_cmp_id, subfragments_syncfifo0_fifo_in_payload_req_id, subfragments_syncfifo0_fifo_in_payload_end, subfragments_syncfifo0_fifo_in_payload_len, subfragments_syncfifo0_fifo_in_payload_adr};
assign {subfragments_syncfifo0_fifo_out_last, subfragments_syncfifo0_fifo_out_first, subfragments_syncfifo0_fifo_out_payload_user_id, subfragments_syncfifo0_fifo_out_payload_channel, subfragments_syncfifo0_fifo_out_payload_dat, subfragments_syncfifo0_fifo_out_payload_tag, subfragments_syncfifo0_fifo_out_payload_err, subfragments_syncfifo0_fifo_out_payload_cmp_id, subfragments_syncfifo0_fifo_out_payload_req_id, subfragments_syncfifo0_fifo_out_payload_end, subfragments_syncfifo0_fifo_out_payload_len, subfragments_syncfifo0_fifo_out_payload_adr} = subfragments_syncfifo0_syncfifo0_dout;
assign subfragments_syncfifo0_sink_ready = subfragments_syncfifo0_syncfifo0_writable;
assign subfragments_syncfifo0_syncfifo0_we = subfragments_syncfifo0_sink_valid;
assign subfragments_syncfifo0_fifo_in_first = subfragments_syncfifo0_sink_first;
assign subfragments_syncfifo0_fifo_in_last = subfragments_syncfifo0_sink_last;
assign subfragments_syncfifo0_fifo_in_payload_adr = subfragments_syncfifo0_sink_payload_adr;
assign subfragments_syncfifo0_fifo_in_payload_len = subfragments_syncfifo0_sink_payload_len;
assign subfragments_syncfifo0_fifo_in_payload_end = subfragments_syncfifo0_sink_payload_end;
assign subfragments_syncfifo0_fifo_in_payload_req_id = subfragments_syncfifo0_sink_payload_req_id;
assign subfragments_syncfifo0_fifo_in_payload_cmp_id = subfragments_syncfifo0_sink_payload_cmp_id;
assign subfragments_syncfifo0_fifo_in_payload_err = subfragments_syncfifo0_sink_payload_err;
assign subfragments_syncfifo0_fifo_in_payload_tag = subfragments_syncfifo0_sink_payload_tag;
assign subfragments_syncfifo0_fifo_in_payload_dat = subfragments_syncfifo0_sink_payload_dat;
assign subfragments_syncfifo0_fifo_in_payload_channel = subfragments_syncfifo0_sink_payload_channel;
assign subfragments_syncfifo0_fifo_in_payload_user_id = subfragments_syncfifo0_sink_payload_user_id;
assign subfragments_syncfifo0_source_valid = subfragments_syncfifo0_readable;
assign subfragments_syncfifo0_source_first = subfragments_syncfifo0_fifo_out_first;
assign subfragments_syncfifo0_source_last = subfragments_syncfifo0_fifo_out_last;
assign subfragments_syncfifo0_source_payload_adr = subfragments_syncfifo0_fifo_out_payload_adr;
assign subfragments_syncfifo0_source_payload_len = subfragments_syncfifo0_fifo_out_payload_len;
assign subfragments_syncfifo0_source_payload_end = subfragments_syncfifo0_fifo_out_payload_end;
assign subfragments_syncfifo0_source_payload_req_id = subfragments_syncfifo0_fifo_out_payload_req_id;
assign subfragments_syncfifo0_source_payload_cmp_id = subfragments_syncfifo0_fifo_out_payload_cmp_id;
assign subfragments_syncfifo0_source_payload_err = subfragments_syncfifo0_fifo_out_payload_err;
assign subfragments_syncfifo0_source_payload_tag = subfragments_syncfifo0_fifo_out_payload_tag;
assign subfragments_syncfifo0_source_payload_dat = subfragments_syncfifo0_fifo_out_payload_dat;
assign subfragments_syncfifo0_source_payload_channel = subfragments_syncfifo0_fifo_out_payload_channel;
assign subfragments_syncfifo0_source_payload_user_id = subfragments_syncfifo0_fifo_out_payload_user_id;
assign subfragments_syncfifo0_re = subfragments_syncfifo0_source_ready;
assign subfragments_syncfifo0_syncfifo0_re = (subfragments_syncfifo0_syncfifo0_readable & ((~subfragments_syncfifo0_readable) | subfragments_syncfifo0_re));
assign subfragments_syncfifo0_level1 = (subfragments_syncfifo0_level0 + subfragments_syncfifo0_readable);
always @(*) begin
	subfragments_syncfifo0_wrport_adr <= 7'd0;
	if (subfragments_syncfifo0_replace) begin
		subfragments_syncfifo0_wrport_adr <= (subfragments_syncfifo0_produce - 1'd1);
	end else begin
		subfragments_syncfifo0_wrport_adr <= subfragments_syncfifo0_produce;
	end
end
assign subfragments_syncfifo0_wrport_dat_w = subfragments_syncfifo0_syncfifo0_din;
assign subfragments_syncfifo0_wrport_we = (subfragments_syncfifo0_syncfifo0_we & (subfragments_syncfifo0_syncfifo0_writable | subfragments_syncfifo0_replace));
assign subfragments_syncfifo0_do_read = (subfragments_syncfifo0_syncfifo0_readable & subfragments_syncfifo0_syncfifo0_re);
assign subfragments_syncfifo0_rdport_adr = subfragments_syncfifo0_consume;
assign subfragments_syncfifo0_syncfifo0_dout = subfragments_syncfifo0_rdport_dat_r;
assign subfragments_syncfifo0_rdport_re = subfragments_syncfifo0_do_read;
assign subfragments_syncfifo0_syncfifo0_writable = (subfragments_syncfifo0_level0 != 8'd128);
assign subfragments_syncfifo0_syncfifo0_readable = (subfragments_syncfifo0_level0 != 1'd0);
assign subfragments_syncfifo1_syncfifo1_din = {subfragments_syncfifo1_fifo_in_last, subfragments_syncfifo1_fifo_in_first, subfragments_syncfifo1_fifo_in_payload_user_id, subfragments_syncfifo1_fifo_in_payload_channel, subfragments_syncfifo1_fifo_in_payload_dat, subfragments_syncfifo1_fifo_in_payload_tag, subfragments_syncfifo1_fifo_in_payload_err, subfragments_syncfifo1_fifo_in_payload_cmp_id, subfragments_syncfifo1_fifo_in_payload_req_id, subfragments_syncfifo1_fifo_in_payload_end, subfragments_syncfifo1_fifo_in_payload_len, subfragments_syncfifo1_fifo_in_payload_adr};
assign {subfragments_syncfifo1_fifo_out_last, subfragments_syncfifo1_fifo_out_first, subfragments_syncfifo1_fifo_out_payload_user_id, subfragments_syncfifo1_fifo_out_payload_channel, subfragments_syncfifo1_fifo_out_payload_dat, subfragments_syncfifo1_fifo_out_payload_tag, subfragments_syncfifo1_fifo_out_payload_err, subfragments_syncfifo1_fifo_out_payload_cmp_id, subfragments_syncfifo1_fifo_out_payload_req_id, subfragments_syncfifo1_fifo_out_payload_end, subfragments_syncfifo1_fifo_out_payload_len, subfragments_syncfifo1_fifo_out_payload_adr} = subfragments_syncfifo1_syncfifo1_dout;
assign subfragments_syncfifo1_sink_ready = subfragments_syncfifo1_syncfifo1_writable;
assign subfragments_syncfifo1_syncfifo1_we = subfragments_syncfifo1_sink_valid;
assign subfragments_syncfifo1_fifo_in_first = subfragments_syncfifo1_sink_first;
assign subfragments_syncfifo1_fifo_in_last = subfragments_syncfifo1_sink_last;
assign subfragments_syncfifo1_fifo_in_payload_adr = subfragments_syncfifo1_sink_payload_adr;
assign subfragments_syncfifo1_fifo_in_payload_len = subfragments_syncfifo1_sink_payload_len;
assign subfragments_syncfifo1_fifo_in_payload_end = subfragments_syncfifo1_sink_payload_end;
assign subfragments_syncfifo1_fifo_in_payload_req_id = subfragments_syncfifo1_sink_payload_req_id;
assign subfragments_syncfifo1_fifo_in_payload_cmp_id = subfragments_syncfifo1_sink_payload_cmp_id;
assign subfragments_syncfifo1_fifo_in_payload_err = subfragments_syncfifo1_sink_payload_err;
assign subfragments_syncfifo1_fifo_in_payload_tag = subfragments_syncfifo1_sink_payload_tag;
assign subfragments_syncfifo1_fifo_in_payload_dat = subfragments_syncfifo1_sink_payload_dat;
assign subfragments_syncfifo1_fifo_in_payload_channel = subfragments_syncfifo1_sink_payload_channel;
assign subfragments_syncfifo1_fifo_in_payload_user_id = subfragments_syncfifo1_sink_payload_user_id;
assign subfragments_syncfifo1_source_valid = subfragments_syncfifo1_readable;
assign subfragments_syncfifo1_source_first = subfragments_syncfifo1_fifo_out_first;
assign subfragments_syncfifo1_source_last = subfragments_syncfifo1_fifo_out_last;
assign subfragments_syncfifo1_source_payload_adr = subfragments_syncfifo1_fifo_out_payload_adr;
assign subfragments_syncfifo1_source_payload_len = subfragments_syncfifo1_fifo_out_payload_len;
assign subfragments_syncfifo1_source_payload_end = subfragments_syncfifo1_fifo_out_payload_end;
assign subfragments_syncfifo1_source_payload_req_id = subfragments_syncfifo1_fifo_out_payload_req_id;
assign subfragments_syncfifo1_source_payload_cmp_id = subfragments_syncfifo1_fifo_out_payload_cmp_id;
assign subfragments_syncfifo1_source_payload_err = subfragments_syncfifo1_fifo_out_payload_err;
assign subfragments_syncfifo1_source_payload_tag = subfragments_syncfifo1_fifo_out_payload_tag;
assign subfragments_syncfifo1_source_payload_dat = subfragments_syncfifo1_fifo_out_payload_dat;
assign subfragments_syncfifo1_source_payload_channel = subfragments_syncfifo1_fifo_out_payload_channel;
assign subfragments_syncfifo1_source_payload_user_id = subfragments_syncfifo1_fifo_out_payload_user_id;
assign subfragments_syncfifo1_re = subfragments_syncfifo1_source_ready;
assign subfragments_syncfifo1_syncfifo1_re = (subfragments_syncfifo1_syncfifo1_readable & ((~subfragments_syncfifo1_readable) | subfragments_syncfifo1_re));
assign subfragments_syncfifo1_level1 = (subfragments_syncfifo1_level0 + subfragments_syncfifo1_readable);
always @(*) begin
	subfragments_syncfifo1_wrport_adr <= 7'd0;
	if (subfragments_syncfifo1_replace) begin
		subfragments_syncfifo1_wrport_adr <= (subfragments_syncfifo1_produce - 1'd1);
	end else begin
		subfragments_syncfifo1_wrport_adr <= subfragments_syncfifo1_produce;
	end
end
assign subfragments_syncfifo1_wrport_dat_w = subfragments_syncfifo1_syncfifo1_din;
assign subfragments_syncfifo1_wrport_we = (subfragments_syncfifo1_syncfifo1_we & (subfragments_syncfifo1_syncfifo1_writable | subfragments_syncfifo1_replace));
assign subfragments_syncfifo1_do_read = (subfragments_syncfifo1_syncfifo1_readable & subfragments_syncfifo1_syncfifo1_re);
assign subfragments_syncfifo1_rdport_adr = subfragments_syncfifo1_consume;
assign subfragments_syncfifo1_syncfifo1_dout = subfragments_syncfifo1_rdport_dat_r;
assign subfragments_syncfifo1_rdport_re = subfragments_syncfifo1_do_read;
assign subfragments_syncfifo1_syncfifo1_writable = (subfragments_syncfifo1_level0 != 8'd128);
assign subfragments_syncfifo1_syncfifo1_readable = (subfragments_syncfifo1_level0 != 1'd0);
assign subfragments_syncfifo2_syncfifo2_din = {subfragments_syncfifo2_fifo_in_last, subfragments_syncfifo2_fifo_in_first, subfragments_syncfifo2_fifo_in_payload_user_id, subfragments_syncfifo2_fifo_in_payload_channel, subfragments_syncfifo2_fifo_in_payload_dat, subfragments_syncfifo2_fifo_in_payload_tag, subfragments_syncfifo2_fifo_in_payload_err, subfragments_syncfifo2_fifo_in_payload_cmp_id, subfragments_syncfifo2_fifo_in_payload_req_id, subfragments_syncfifo2_fifo_in_payload_end, subfragments_syncfifo2_fifo_in_payload_len, subfragments_syncfifo2_fifo_in_payload_adr};
assign {subfragments_syncfifo2_fifo_out_last, subfragments_syncfifo2_fifo_out_first, subfragments_syncfifo2_fifo_out_payload_user_id, subfragments_syncfifo2_fifo_out_payload_channel, subfragments_syncfifo2_fifo_out_payload_dat, subfragments_syncfifo2_fifo_out_payload_tag, subfragments_syncfifo2_fifo_out_payload_err, subfragments_syncfifo2_fifo_out_payload_cmp_id, subfragments_syncfifo2_fifo_out_payload_req_id, subfragments_syncfifo2_fifo_out_payload_end, subfragments_syncfifo2_fifo_out_payload_len, subfragments_syncfifo2_fifo_out_payload_adr} = subfragments_syncfifo2_syncfifo2_dout;
assign subfragments_syncfifo2_sink_ready = subfragments_syncfifo2_syncfifo2_writable;
assign subfragments_syncfifo2_syncfifo2_we = subfragments_syncfifo2_sink_valid;
assign subfragments_syncfifo2_fifo_in_first = subfragments_syncfifo2_sink_first;
assign subfragments_syncfifo2_fifo_in_last = subfragments_syncfifo2_sink_last;
assign subfragments_syncfifo2_fifo_in_payload_adr = subfragments_syncfifo2_sink_payload_adr;
assign subfragments_syncfifo2_fifo_in_payload_len = subfragments_syncfifo2_sink_payload_len;
assign subfragments_syncfifo2_fifo_in_payload_end = subfragments_syncfifo2_sink_payload_end;
assign subfragments_syncfifo2_fifo_in_payload_req_id = subfragments_syncfifo2_sink_payload_req_id;
assign subfragments_syncfifo2_fifo_in_payload_cmp_id = subfragments_syncfifo2_sink_payload_cmp_id;
assign subfragments_syncfifo2_fifo_in_payload_err = subfragments_syncfifo2_sink_payload_err;
assign subfragments_syncfifo2_fifo_in_payload_tag = subfragments_syncfifo2_sink_payload_tag;
assign subfragments_syncfifo2_fifo_in_payload_dat = subfragments_syncfifo2_sink_payload_dat;
assign subfragments_syncfifo2_fifo_in_payload_channel = subfragments_syncfifo2_sink_payload_channel;
assign subfragments_syncfifo2_fifo_in_payload_user_id = subfragments_syncfifo2_sink_payload_user_id;
assign subfragments_syncfifo2_source_valid = subfragments_syncfifo2_readable;
assign subfragments_syncfifo2_source_first = subfragments_syncfifo2_fifo_out_first;
assign subfragments_syncfifo2_source_last = subfragments_syncfifo2_fifo_out_last;
assign subfragments_syncfifo2_source_payload_adr = subfragments_syncfifo2_fifo_out_payload_adr;
assign subfragments_syncfifo2_source_payload_len = subfragments_syncfifo2_fifo_out_payload_len;
assign subfragments_syncfifo2_source_payload_end = subfragments_syncfifo2_fifo_out_payload_end;
assign subfragments_syncfifo2_source_payload_req_id = subfragments_syncfifo2_fifo_out_payload_req_id;
assign subfragments_syncfifo2_source_payload_cmp_id = subfragments_syncfifo2_fifo_out_payload_cmp_id;
assign subfragments_syncfifo2_source_payload_err = subfragments_syncfifo2_fifo_out_payload_err;
assign subfragments_syncfifo2_source_payload_tag = subfragments_syncfifo2_fifo_out_payload_tag;
assign subfragments_syncfifo2_source_payload_dat = subfragments_syncfifo2_fifo_out_payload_dat;
assign subfragments_syncfifo2_source_payload_channel = subfragments_syncfifo2_fifo_out_payload_channel;
assign subfragments_syncfifo2_source_payload_user_id = subfragments_syncfifo2_fifo_out_payload_user_id;
assign subfragments_syncfifo2_re = subfragments_syncfifo2_source_ready;
assign subfragments_syncfifo2_syncfifo2_re = (subfragments_syncfifo2_syncfifo2_readable & ((~subfragments_syncfifo2_readable) | subfragments_syncfifo2_re));
assign subfragments_syncfifo2_level1 = (subfragments_syncfifo2_level0 + subfragments_syncfifo2_readable);
always @(*) begin
	subfragments_syncfifo2_wrport_adr <= 7'd0;
	if (subfragments_syncfifo2_replace) begin
		subfragments_syncfifo2_wrport_adr <= (subfragments_syncfifo2_produce - 1'd1);
	end else begin
		subfragments_syncfifo2_wrport_adr <= subfragments_syncfifo2_produce;
	end
end
assign subfragments_syncfifo2_wrport_dat_w = subfragments_syncfifo2_syncfifo2_din;
assign subfragments_syncfifo2_wrport_we = (subfragments_syncfifo2_syncfifo2_we & (subfragments_syncfifo2_syncfifo2_writable | subfragments_syncfifo2_replace));
assign subfragments_syncfifo2_do_read = (subfragments_syncfifo2_syncfifo2_readable & subfragments_syncfifo2_syncfifo2_re);
assign subfragments_syncfifo2_rdport_adr = subfragments_syncfifo2_consume;
assign subfragments_syncfifo2_syncfifo2_dout = subfragments_syncfifo2_rdport_dat_r;
assign subfragments_syncfifo2_rdport_re = subfragments_syncfifo2_do_read;
assign subfragments_syncfifo2_syncfifo2_writable = (subfragments_syncfifo2_level0 != 8'd128);
assign subfragments_syncfifo2_syncfifo2_readable = (subfragments_syncfifo2_level0 != 1'd0);
assign subfragments_syncfifo3_syncfifo3_din = {subfragments_syncfifo3_fifo_in_last, subfragments_syncfifo3_fifo_in_first, subfragments_syncfifo3_fifo_in_payload_user_id, subfragments_syncfifo3_fifo_in_payload_channel, subfragments_syncfifo3_fifo_in_payload_dat, subfragments_syncfifo3_fifo_in_payload_tag, subfragments_syncfifo3_fifo_in_payload_err, subfragments_syncfifo3_fifo_in_payload_cmp_id, subfragments_syncfifo3_fifo_in_payload_req_id, subfragments_syncfifo3_fifo_in_payload_end, subfragments_syncfifo3_fifo_in_payload_len, subfragments_syncfifo3_fifo_in_payload_adr};
assign {subfragments_syncfifo3_fifo_out_last, subfragments_syncfifo3_fifo_out_first, subfragments_syncfifo3_fifo_out_payload_user_id, subfragments_syncfifo3_fifo_out_payload_channel, subfragments_syncfifo3_fifo_out_payload_dat, subfragments_syncfifo3_fifo_out_payload_tag, subfragments_syncfifo3_fifo_out_payload_err, subfragments_syncfifo3_fifo_out_payload_cmp_id, subfragments_syncfifo3_fifo_out_payload_req_id, subfragments_syncfifo3_fifo_out_payload_end, subfragments_syncfifo3_fifo_out_payload_len, subfragments_syncfifo3_fifo_out_payload_adr} = subfragments_syncfifo3_syncfifo3_dout;
assign subfragments_syncfifo3_sink_ready = subfragments_syncfifo3_syncfifo3_writable;
assign subfragments_syncfifo3_syncfifo3_we = subfragments_syncfifo3_sink_valid;
assign subfragments_syncfifo3_fifo_in_first = subfragments_syncfifo3_sink_first;
assign subfragments_syncfifo3_fifo_in_last = subfragments_syncfifo3_sink_last;
assign subfragments_syncfifo3_fifo_in_payload_adr = subfragments_syncfifo3_sink_payload_adr;
assign subfragments_syncfifo3_fifo_in_payload_len = subfragments_syncfifo3_sink_payload_len;
assign subfragments_syncfifo3_fifo_in_payload_end = subfragments_syncfifo3_sink_payload_end;
assign subfragments_syncfifo3_fifo_in_payload_req_id = subfragments_syncfifo3_sink_payload_req_id;
assign subfragments_syncfifo3_fifo_in_payload_cmp_id = subfragments_syncfifo3_sink_payload_cmp_id;
assign subfragments_syncfifo3_fifo_in_payload_err = subfragments_syncfifo3_sink_payload_err;
assign subfragments_syncfifo3_fifo_in_payload_tag = subfragments_syncfifo3_sink_payload_tag;
assign subfragments_syncfifo3_fifo_in_payload_dat = subfragments_syncfifo3_sink_payload_dat;
assign subfragments_syncfifo3_fifo_in_payload_channel = subfragments_syncfifo3_sink_payload_channel;
assign subfragments_syncfifo3_fifo_in_payload_user_id = subfragments_syncfifo3_sink_payload_user_id;
assign subfragments_syncfifo3_source_valid = subfragments_syncfifo3_readable;
assign subfragments_syncfifo3_source_first = subfragments_syncfifo3_fifo_out_first;
assign subfragments_syncfifo3_source_last = subfragments_syncfifo3_fifo_out_last;
assign subfragments_syncfifo3_source_payload_adr = subfragments_syncfifo3_fifo_out_payload_adr;
assign subfragments_syncfifo3_source_payload_len = subfragments_syncfifo3_fifo_out_payload_len;
assign subfragments_syncfifo3_source_payload_end = subfragments_syncfifo3_fifo_out_payload_end;
assign subfragments_syncfifo3_source_payload_req_id = subfragments_syncfifo3_fifo_out_payload_req_id;
assign subfragments_syncfifo3_source_payload_cmp_id = subfragments_syncfifo3_fifo_out_payload_cmp_id;
assign subfragments_syncfifo3_source_payload_err = subfragments_syncfifo3_fifo_out_payload_err;
assign subfragments_syncfifo3_source_payload_tag = subfragments_syncfifo3_fifo_out_payload_tag;
assign subfragments_syncfifo3_source_payload_dat = subfragments_syncfifo3_fifo_out_payload_dat;
assign subfragments_syncfifo3_source_payload_channel = subfragments_syncfifo3_fifo_out_payload_channel;
assign subfragments_syncfifo3_source_payload_user_id = subfragments_syncfifo3_fifo_out_payload_user_id;
assign subfragments_syncfifo3_re = subfragments_syncfifo3_source_ready;
assign subfragments_syncfifo3_syncfifo3_re = (subfragments_syncfifo3_syncfifo3_readable & ((~subfragments_syncfifo3_readable) | subfragments_syncfifo3_re));
assign subfragments_syncfifo3_level1 = (subfragments_syncfifo3_level0 + subfragments_syncfifo3_readable);
always @(*) begin
	subfragments_syncfifo3_wrport_adr <= 7'd0;
	if (subfragments_syncfifo3_replace) begin
		subfragments_syncfifo3_wrport_adr <= (subfragments_syncfifo3_produce - 1'd1);
	end else begin
		subfragments_syncfifo3_wrport_adr <= subfragments_syncfifo3_produce;
	end
end
assign subfragments_syncfifo3_wrport_dat_w = subfragments_syncfifo3_syncfifo3_din;
assign subfragments_syncfifo3_wrport_we = (subfragments_syncfifo3_syncfifo3_we & (subfragments_syncfifo3_syncfifo3_writable | subfragments_syncfifo3_replace));
assign subfragments_syncfifo3_do_read = (subfragments_syncfifo3_syncfifo3_readable & subfragments_syncfifo3_syncfifo3_re);
assign subfragments_syncfifo3_rdport_adr = subfragments_syncfifo3_consume;
assign subfragments_syncfifo3_syncfifo3_dout = subfragments_syncfifo3_rdport_dat_r;
assign subfragments_syncfifo3_rdport_re = subfragments_syncfifo3_do_read;
assign subfragments_syncfifo3_syncfifo3_writable = (subfragments_syncfifo3_level0 != 8'd128);
assign subfragments_syncfifo3_syncfifo3_readable = (subfragments_syncfifo3_level0 != 1'd0);
assign subfragments_syncfifo4_syncfifo4_din = {subfragments_syncfifo4_fifo_in_last, subfragments_syncfifo4_fifo_in_first, subfragments_syncfifo4_fifo_in_payload_user_id, subfragments_syncfifo4_fifo_in_payload_channel, subfragments_syncfifo4_fifo_in_payload_dat, subfragments_syncfifo4_fifo_in_payload_tag, subfragments_syncfifo4_fifo_in_payload_err, subfragments_syncfifo4_fifo_in_payload_cmp_id, subfragments_syncfifo4_fifo_in_payload_req_id, subfragments_syncfifo4_fifo_in_payload_end, subfragments_syncfifo4_fifo_in_payload_len, subfragments_syncfifo4_fifo_in_payload_adr};
assign {subfragments_syncfifo4_fifo_out_last, subfragments_syncfifo4_fifo_out_first, subfragments_syncfifo4_fifo_out_payload_user_id, subfragments_syncfifo4_fifo_out_payload_channel, subfragments_syncfifo4_fifo_out_payload_dat, subfragments_syncfifo4_fifo_out_payload_tag, subfragments_syncfifo4_fifo_out_payload_err, subfragments_syncfifo4_fifo_out_payload_cmp_id, subfragments_syncfifo4_fifo_out_payload_req_id, subfragments_syncfifo4_fifo_out_payload_end, subfragments_syncfifo4_fifo_out_payload_len, subfragments_syncfifo4_fifo_out_payload_adr} = subfragments_syncfifo4_syncfifo4_dout;
assign subfragments_syncfifo4_sink_ready = subfragments_syncfifo4_syncfifo4_writable;
assign subfragments_syncfifo4_syncfifo4_we = subfragments_syncfifo4_sink_valid;
assign subfragments_syncfifo4_fifo_in_first = subfragments_syncfifo4_sink_first;
assign subfragments_syncfifo4_fifo_in_last = subfragments_syncfifo4_sink_last;
assign subfragments_syncfifo4_fifo_in_payload_adr = subfragments_syncfifo4_sink_payload_adr;
assign subfragments_syncfifo4_fifo_in_payload_len = subfragments_syncfifo4_sink_payload_len;
assign subfragments_syncfifo4_fifo_in_payload_end = subfragments_syncfifo4_sink_payload_end;
assign subfragments_syncfifo4_fifo_in_payload_req_id = subfragments_syncfifo4_sink_payload_req_id;
assign subfragments_syncfifo4_fifo_in_payload_cmp_id = subfragments_syncfifo4_sink_payload_cmp_id;
assign subfragments_syncfifo4_fifo_in_payload_err = subfragments_syncfifo4_sink_payload_err;
assign subfragments_syncfifo4_fifo_in_payload_tag = subfragments_syncfifo4_sink_payload_tag;
assign subfragments_syncfifo4_fifo_in_payload_dat = subfragments_syncfifo4_sink_payload_dat;
assign subfragments_syncfifo4_fifo_in_payload_channel = subfragments_syncfifo4_sink_payload_channel;
assign subfragments_syncfifo4_fifo_in_payload_user_id = subfragments_syncfifo4_sink_payload_user_id;
assign subfragments_syncfifo4_source_valid = subfragments_syncfifo4_readable;
assign subfragments_syncfifo4_source_first = subfragments_syncfifo4_fifo_out_first;
assign subfragments_syncfifo4_source_last = subfragments_syncfifo4_fifo_out_last;
assign subfragments_syncfifo4_source_payload_adr = subfragments_syncfifo4_fifo_out_payload_adr;
assign subfragments_syncfifo4_source_payload_len = subfragments_syncfifo4_fifo_out_payload_len;
assign subfragments_syncfifo4_source_payload_end = subfragments_syncfifo4_fifo_out_payload_end;
assign subfragments_syncfifo4_source_payload_req_id = subfragments_syncfifo4_fifo_out_payload_req_id;
assign subfragments_syncfifo4_source_payload_cmp_id = subfragments_syncfifo4_fifo_out_payload_cmp_id;
assign subfragments_syncfifo4_source_payload_err = subfragments_syncfifo4_fifo_out_payload_err;
assign subfragments_syncfifo4_source_payload_tag = subfragments_syncfifo4_fifo_out_payload_tag;
assign subfragments_syncfifo4_source_payload_dat = subfragments_syncfifo4_fifo_out_payload_dat;
assign subfragments_syncfifo4_source_payload_channel = subfragments_syncfifo4_fifo_out_payload_channel;
assign subfragments_syncfifo4_source_payload_user_id = subfragments_syncfifo4_fifo_out_payload_user_id;
assign subfragments_syncfifo4_re = subfragments_syncfifo4_source_ready;
assign subfragments_syncfifo4_syncfifo4_re = (subfragments_syncfifo4_syncfifo4_readable & ((~subfragments_syncfifo4_readable) | subfragments_syncfifo4_re));
assign subfragments_syncfifo4_level1 = (subfragments_syncfifo4_level0 + subfragments_syncfifo4_readable);
always @(*) begin
	subfragments_syncfifo4_wrport_adr <= 7'd0;
	if (subfragments_syncfifo4_replace) begin
		subfragments_syncfifo4_wrport_adr <= (subfragments_syncfifo4_produce - 1'd1);
	end else begin
		subfragments_syncfifo4_wrport_adr <= subfragments_syncfifo4_produce;
	end
end
assign subfragments_syncfifo4_wrport_dat_w = subfragments_syncfifo4_syncfifo4_din;
assign subfragments_syncfifo4_wrport_we = (subfragments_syncfifo4_syncfifo4_we & (subfragments_syncfifo4_syncfifo4_writable | subfragments_syncfifo4_replace));
assign subfragments_syncfifo4_do_read = (subfragments_syncfifo4_syncfifo4_readable & subfragments_syncfifo4_syncfifo4_re);
assign subfragments_syncfifo4_rdport_adr = subfragments_syncfifo4_consume;
assign subfragments_syncfifo4_syncfifo4_dout = subfragments_syncfifo4_rdport_dat_r;
assign subfragments_syncfifo4_rdport_re = subfragments_syncfifo4_do_read;
assign subfragments_syncfifo4_syncfifo4_writable = (subfragments_syncfifo4_level0 != 8'd128);
assign subfragments_syncfifo4_syncfifo4_readable = (subfragments_syncfifo4_level0 != 1'd0);
assign subfragments_syncfifo5_syncfifo5_din = {subfragments_syncfifo5_fifo_in_last, subfragments_syncfifo5_fifo_in_first, subfragments_syncfifo5_fifo_in_payload_user_id, subfragments_syncfifo5_fifo_in_payload_channel, subfragments_syncfifo5_fifo_in_payload_dat, subfragments_syncfifo5_fifo_in_payload_tag, subfragments_syncfifo5_fifo_in_payload_err, subfragments_syncfifo5_fifo_in_payload_cmp_id, subfragments_syncfifo5_fifo_in_payload_req_id, subfragments_syncfifo5_fifo_in_payload_end, subfragments_syncfifo5_fifo_in_payload_len, subfragments_syncfifo5_fifo_in_payload_adr};
assign {subfragments_syncfifo5_fifo_out_last, subfragments_syncfifo5_fifo_out_first, subfragments_syncfifo5_fifo_out_payload_user_id, subfragments_syncfifo5_fifo_out_payload_channel, subfragments_syncfifo5_fifo_out_payload_dat, subfragments_syncfifo5_fifo_out_payload_tag, subfragments_syncfifo5_fifo_out_payload_err, subfragments_syncfifo5_fifo_out_payload_cmp_id, subfragments_syncfifo5_fifo_out_payload_req_id, subfragments_syncfifo5_fifo_out_payload_end, subfragments_syncfifo5_fifo_out_payload_len, subfragments_syncfifo5_fifo_out_payload_adr} = subfragments_syncfifo5_syncfifo5_dout;
assign subfragments_syncfifo5_sink_ready = subfragments_syncfifo5_syncfifo5_writable;
assign subfragments_syncfifo5_syncfifo5_we = subfragments_syncfifo5_sink_valid;
assign subfragments_syncfifo5_fifo_in_first = subfragments_syncfifo5_sink_first;
assign subfragments_syncfifo5_fifo_in_last = subfragments_syncfifo5_sink_last;
assign subfragments_syncfifo5_fifo_in_payload_adr = subfragments_syncfifo5_sink_payload_adr;
assign subfragments_syncfifo5_fifo_in_payload_len = subfragments_syncfifo5_sink_payload_len;
assign subfragments_syncfifo5_fifo_in_payload_end = subfragments_syncfifo5_sink_payload_end;
assign subfragments_syncfifo5_fifo_in_payload_req_id = subfragments_syncfifo5_sink_payload_req_id;
assign subfragments_syncfifo5_fifo_in_payload_cmp_id = subfragments_syncfifo5_sink_payload_cmp_id;
assign subfragments_syncfifo5_fifo_in_payload_err = subfragments_syncfifo5_sink_payload_err;
assign subfragments_syncfifo5_fifo_in_payload_tag = subfragments_syncfifo5_sink_payload_tag;
assign subfragments_syncfifo5_fifo_in_payload_dat = subfragments_syncfifo5_sink_payload_dat;
assign subfragments_syncfifo5_fifo_in_payload_channel = subfragments_syncfifo5_sink_payload_channel;
assign subfragments_syncfifo5_fifo_in_payload_user_id = subfragments_syncfifo5_sink_payload_user_id;
assign subfragments_syncfifo5_source_valid = subfragments_syncfifo5_readable;
assign subfragments_syncfifo5_source_first = subfragments_syncfifo5_fifo_out_first;
assign subfragments_syncfifo5_source_last = subfragments_syncfifo5_fifo_out_last;
assign subfragments_syncfifo5_source_payload_adr = subfragments_syncfifo5_fifo_out_payload_adr;
assign subfragments_syncfifo5_source_payload_len = subfragments_syncfifo5_fifo_out_payload_len;
assign subfragments_syncfifo5_source_payload_end = subfragments_syncfifo5_fifo_out_payload_end;
assign subfragments_syncfifo5_source_payload_req_id = subfragments_syncfifo5_fifo_out_payload_req_id;
assign subfragments_syncfifo5_source_payload_cmp_id = subfragments_syncfifo5_fifo_out_payload_cmp_id;
assign subfragments_syncfifo5_source_payload_err = subfragments_syncfifo5_fifo_out_payload_err;
assign subfragments_syncfifo5_source_payload_tag = subfragments_syncfifo5_fifo_out_payload_tag;
assign subfragments_syncfifo5_source_payload_dat = subfragments_syncfifo5_fifo_out_payload_dat;
assign subfragments_syncfifo5_source_payload_channel = subfragments_syncfifo5_fifo_out_payload_channel;
assign subfragments_syncfifo5_source_payload_user_id = subfragments_syncfifo5_fifo_out_payload_user_id;
assign subfragments_syncfifo5_re = subfragments_syncfifo5_source_ready;
assign subfragments_syncfifo5_syncfifo5_re = (subfragments_syncfifo5_syncfifo5_readable & ((~subfragments_syncfifo5_readable) | subfragments_syncfifo5_re));
assign subfragments_syncfifo5_level1 = (subfragments_syncfifo5_level0 + subfragments_syncfifo5_readable);
always @(*) begin
	subfragments_syncfifo5_wrport_adr <= 7'd0;
	if (subfragments_syncfifo5_replace) begin
		subfragments_syncfifo5_wrport_adr <= (subfragments_syncfifo5_produce - 1'd1);
	end else begin
		subfragments_syncfifo5_wrport_adr <= subfragments_syncfifo5_produce;
	end
end
assign subfragments_syncfifo5_wrport_dat_w = subfragments_syncfifo5_syncfifo5_din;
assign subfragments_syncfifo5_wrport_we = (subfragments_syncfifo5_syncfifo5_we & (subfragments_syncfifo5_syncfifo5_writable | subfragments_syncfifo5_replace));
assign subfragments_syncfifo5_do_read = (subfragments_syncfifo5_syncfifo5_readable & subfragments_syncfifo5_syncfifo5_re);
assign subfragments_syncfifo5_rdport_adr = subfragments_syncfifo5_consume;
assign subfragments_syncfifo5_syncfifo5_dout = subfragments_syncfifo5_rdport_dat_r;
assign subfragments_syncfifo5_rdport_re = subfragments_syncfifo5_do_read;
assign subfragments_syncfifo5_syncfifo5_writable = (subfragments_syncfifo5_level0 != 8'd128);
assign subfragments_syncfifo5_syncfifo5_readable = (subfragments_syncfifo5_level0 != 1'd0);
assign subfragments_syncfifo6_syncfifo6_din = {subfragments_syncfifo6_fifo_in_last, subfragments_syncfifo6_fifo_in_first, subfragments_syncfifo6_fifo_in_payload_user_id, subfragments_syncfifo6_fifo_in_payload_channel, subfragments_syncfifo6_fifo_in_payload_dat, subfragments_syncfifo6_fifo_in_payload_tag, subfragments_syncfifo6_fifo_in_payload_err, subfragments_syncfifo6_fifo_in_payload_cmp_id, subfragments_syncfifo6_fifo_in_payload_req_id, subfragments_syncfifo6_fifo_in_payload_end, subfragments_syncfifo6_fifo_in_payload_len, subfragments_syncfifo6_fifo_in_payload_adr};
assign {subfragments_syncfifo6_fifo_out_last, subfragments_syncfifo6_fifo_out_first, subfragments_syncfifo6_fifo_out_payload_user_id, subfragments_syncfifo6_fifo_out_payload_channel, subfragments_syncfifo6_fifo_out_payload_dat, subfragments_syncfifo6_fifo_out_payload_tag, subfragments_syncfifo6_fifo_out_payload_err, subfragments_syncfifo6_fifo_out_payload_cmp_id, subfragments_syncfifo6_fifo_out_payload_req_id, subfragments_syncfifo6_fifo_out_payload_end, subfragments_syncfifo6_fifo_out_payload_len, subfragments_syncfifo6_fifo_out_payload_adr} = subfragments_syncfifo6_syncfifo6_dout;
assign subfragments_syncfifo6_sink_ready = subfragments_syncfifo6_syncfifo6_writable;
assign subfragments_syncfifo6_syncfifo6_we = subfragments_syncfifo6_sink_valid;
assign subfragments_syncfifo6_fifo_in_first = subfragments_syncfifo6_sink_first;
assign subfragments_syncfifo6_fifo_in_last = subfragments_syncfifo6_sink_last;
assign subfragments_syncfifo6_fifo_in_payload_adr = subfragments_syncfifo6_sink_payload_adr;
assign subfragments_syncfifo6_fifo_in_payload_len = subfragments_syncfifo6_sink_payload_len;
assign subfragments_syncfifo6_fifo_in_payload_end = subfragments_syncfifo6_sink_payload_end;
assign subfragments_syncfifo6_fifo_in_payload_req_id = subfragments_syncfifo6_sink_payload_req_id;
assign subfragments_syncfifo6_fifo_in_payload_cmp_id = subfragments_syncfifo6_sink_payload_cmp_id;
assign subfragments_syncfifo6_fifo_in_payload_err = subfragments_syncfifo6_sink_payload_err;
assign subfragments_syncfifo6_fifo_in_payload_tag = subfragments_syncfifo6_sink_payload_tag;
assign subfragments_syncfifo6_fifo_in_payload_dat = subfragments_syncfifo6_sink_payload_dat;
assign subfragments_syncfifo6_fifo_in_payload_channel = subfragments_syncfifo6_sink_payload_channel;
assign subfragments_syncfifo6_fifo_in_payload_user_id = subfragments_syncfifo6_sink_payload_user_id;
assign subfragments_syncfifo6_source_valid = subfragments_syncfifo6_readable;
assign subfragments_syncfifo6_source_first = subfragments_syncfifo6_fifo_out_first;
assign subfragments_syncfifo6_source_last = subfragments_syncfifo6_fifo_out_last;
assign subfragments_syncfifo6_source_payload_adr = subfragments_syncfifo6_fifo_out_payload_adr;
assign subfragments_syncfifo6_source_payload_len = subfragments_syncfifo6_fifo_out_payload_len;
assign subfragments_syncfifo6_source_payload_end = subfragments_syncfifo6_fifo_out_payload_end;
assign subfragments_syncfifo6_source_payload_req_id = subfragments_syncfifo6_fifo_out_payload_req_id;
assign subfragments_syncfifo6_source_payload_cmp_id = subfragments_syncfifo6_fifo_out_payload_cmp_id;
assign subfragments_syncfifo6_source_payload_err = subfragments_syncfifo6_fifo_out_payload_err;
assign subfragments_syncfifo6_source_payload_tag = subfragments_syncfifo6_fifo_out_payload_tag;
assign subfragments_syncfifo6_source_payload_dat = subfragments_syncfifo6_fifo_out_payload_dat;
assign subfragments_syncfifo6_source_payload_channel = subfragments_syncfifo6_fifo_out_payload_channel;
assign subfragments_syncfifo6_source_payload_user_id = subfragments_syncfifo6_fifo_out_payload_user_id;
assign subfragments_syncfifo6_re = subfragments_syncfifo6_source_ready;
assign subfragments_syncfifo6_syncfifo6_re = (subfragments_syncfifo6_syncfifo6_readable & ((~subfragments_syncfifo6_readable) | subfragments_syncfifo6_re));
assign subfragments_syncfifo6_level1 = (subfragments_syncfifo6_level0 + subfragments_syncfifo6_readable);
always @(*) begin
	subfragments_syncfifo6_wrport_adr <= 7'd0;
	if (subfragments_syncfifo6_replace) begin
		subfragments_syncfifo6_wrport_adr <= (subfragments_syncfifo6_produce - 1'd1);
	end else begin
		subfragments_syncfifo6_wrport_adr <= subfragments_syncfifo6_produce;
	end
end
assign subfragments_syncfifo6_wrport_dat_w = subfragments_syncfifo6_syncfifo6_din;
assign subfragments_syncfifo6_wrport_we = (subfragments_syncfifo6_syncfifo6_we & (subfragments_syncfifo6_syncfifo6_writable | subfragments_syncfifo6_replace));
assign subfragments_syncfifo6_do_read = (subfragments_syncfifo6_syncfifo6_readable & subfragments_syncfifo6_syncfifo6_re);
assign subfragments_syncfifo6_rdport_adr = subfragments_syncfifo6_consume;
assign subfragments_syncfifo6_syncfifo6_dout = subfragments_syncfifo6_rdport_dat_r;
assign subfragments_syncfifo6_rdport_re = subfragments_syncfifo6_do_read;
assign subfragments_syncfifo6_syncfifo6_writable = (subfragments_syncfifo6_level0 != 8'd128);
assign subfragments_syncfifo6_syncfifo6_readable = (subfragments_syncfifo6_level0 != 1'd0);
assign subfragments_syncfifo7_syncfifo7_din = {subfragments_syncfifo7_fifo_in_last, subfragments_syncfifo7_fifo_in_first, subfragments_syncfifo7_fifo_in_payload_user_id, subfragments_syncfifo7_fifo_in_payload_channel, subfragments_syncfifo7_fifo_in_payload_dat, subfragments_syncfifo7_fifo_in_payload_tag, subfragments_syncfifo7_fifo_in_payload_err, subfragments_syncfifo7_fifo_in_payload_cmp_id, subfragments_syncfifo7_fifo_in_payload_req_id, subfragments_syncfifo7_fifo_in_payload_end, subfragments_syncfifo7_fifo_in_payload_len, subfragments_syncfifo7_fifo_in_payload_adr};
assign {subfragments_syncfifo7_fifo_out_last, subfragments_syncfifo7_fifo_out_first, subfragments_syncfifo7_fifo_out_payload_user_id, subfragments_syncfifo7_fifo_out_payload_channel, subfragments_syncfifo7_fifo_out_payload_dat, subfragments_syncfifo7_fifo_out_payload_tag, subfragments_syncfifo7_fifo_out_payload_err, subfragments_syncfifo7_fifo_out_payload_cmp_id, subfragments_syncfifo7_fifo_out_payload_req_id, subfragments_syncfifo7_fifo_out_payload_end, subfragments_syncfifo7_fifo_out_payload_len, subfragments_syncfifo7_fifo_out_payload_adr} = subfragments_syncfifo7_syncfifo7_dout;
assign subfragments_syncfifo7_sink_ready = subfragments_syncfifo7_syncfifo7_writable;
assign subfragments_syncfifo7_syncfifo7_we = subfragments_syncfifo7_sink_valid;
assign subfragments_syncfifo7_fifo_in_first = subfragments_syncfifo7_sink_first;
assign subfragments_syncfifo7_fifo_in_last = subfragments_syncfifo7_sink_last;
assign subfragments_syncfifo7_fifo_in_payload_adr = subfragments_syncfifo7_sink_payload_adr;
assign subfragments_syncfifo7_fifo_in_payload_len = subfragments_syncfifo7_sink_payload_len;
assign subfragments_syncfifo7_fifo_in_payload_end = subfragments_syncfifo7_sink_payload_end;
assign subfragments_syncfifo7_fifo_in_payload_req_id = subfragments_syncfifo7_sink_payload_req_id;
assign subfragments_syncfifo7_fifo_in_payload_cmp_id = subfragments_syncfifo7_sink_payload_cmp_id;
assign subfragments_syncfifo7_fifo_in_payload_err = subfragments_syncfifo7_sink_payload_err;
assign subfragments_syncfifo7_fifo_in_payload_tag = subfragments_syncfifo7_sink_payload_tag;
assign subfragments_syncfifo7_fifo_in_payload_dat = subfragments_syncfifo7_sink_payload_dat;
assign subfragments_syncfifo7_fifo_in_payload_channel = subfragments_syncfifo7_sink_payload_channel;
assign subfragments_syncfifo7_fifo_in_payload_user_id = subfragments_syncfifo7_sink_payload_user_id;
assign subfragments_syncfifo7_source_valid = subfragments_syncfifo7_readable;
assign subfragments_syncfifo7_source_first = subfragments_syncfifo7_fifo_out_first;
assign subfragments_syncfifo7_source_last = subfragments_syncfifo7_fifo_out_last;
assign subfragments_syncfifo7_source_payload_adr = subfragments_syncfifo7_fifo_out_payload_adr;
assign subfragments_syncfifo7_source_payload_len = subfragments_syncfifo7_fifo_out_payload_len;
assign subfragments_syncfifo7_source_payload_end = subfragments_syncfifo7_fifo_out_payload_end;
assign subfragments_syncfifo7_source_payload_req_id = subfragments_syncfifo7_fifo_out_payload_req_id;
assign subfragments_syncfifo7_source_payload_cmp_id = subfragments_syncfifo7_fifo_out_payload_cmp_id;
assign subfragments_syncfifo7_source_payload_err = subfragments_syncfifo7_fifo_out_payload_err;
assign subfragments_syncfifo7_source_payload_tag = subfragments_syncfifo7_fifo_out_payload_tag;
assign subfragments_syncfifo7_source_payload_dat = subfragments_syncfifo7_fifo_out_payload_dat;
assign subfragments_syncfifo7_source_payload_channel = subfragments_syncfifo7_fifo_out_payload_channel;
assign subfragments_syncfifo7_source_payload_user_id = subfragments_syncfifo7_fifo_out_payload_user_id;
assign subfragments_syncfifo7_re = subfragments_syncfifo7_source_ready;
assign subfragments_syncfifo7_syncfifo7_re = (subfragments_syncfifo7_syncfifo7_readable & ((~subfragments_syncfifo7_readable) | subfragments_syncfifo7_re));
assign subfragments_syncfifo7_level1 = (subfragments_syncfifo7_level0 + subfragments_syncfifo7_readable);
always @(*) begin
	subfragments_syncfifo7_wrport_adr <= 7'd0;
	if (subfragments_syncfifo7_replace) begin
		subfragments_syncfifo7_wrport_adr <= (subfragments_syncfifo7_produce - 1'd1);
	end else begin
		subfragments_syncfifo7_wrport_adr <= subfragments_syncfifo7_produce;
	end
end
assign subfragments_syncfifo7_wrport_dat_w = subfragments_syncfifo7_syncfifo7_din;
assign subfragments_syncfifo7_wrport_we = (subfragments_syncfifo7_syncfifo7_we & (subfragments_syncfifo7_syncfifo7_writable | subfragments_syncfifo7_replace));
assign subfragments_syncfifo7_do_read = (subfragments_syncfifo7_syncfifo7_readable & subfragments_syncfifo7_syncfifo7_re);
assign subfragments_syncfifo7_rdport_adr = subfragments_syncfifo7_consume;
assign subfragments_syncfifo7_syncfifo7_dout = subfragments_syncfifo7_rdport_dat_r;
assign subfragments_syncfifo7_rdport_re = subfragments_syncfifo7_do_read;
assign subfragments_syncfifo7_syncfifo7_writable = (subfragments_syncfifo7_level0 != 8'd128);
assign subfragments_syncfifo7_syncfifo7_readable = (subfragments_syncfifo7_level0 != 1'd0);
always @(*) begin
	subfragments_fsm1_next_state <= 2'd0;
	subfragments_tag_queue_sink_payload_tag <= 3'd0;
	subfragments_fill_tag_litepciecrossbar_next_value <= 3'd0;
	subfragments_cmp_reorder_valid <= 1'd0;
	subfragments_fill_tag_litepciecrossbar_next_value_ce <= 1'd0;
	subfragments_tag_queue_sink_valid <= 1'd0;
	subfragments_master_out_source_ready <= 1'd0;
	subfragments_fsm1_next_state <= subfragments_fsm1_state;
	case (subfragments_fsm1_state)
		1'd1: begin
			if ((subfragments_master_out_source_valid & subfragments_master_out_source_first)) begin
				subfragments_fsm1_next_state <= 2'd2;
			end else begin
				subfragments_master_out_source_ready <= 1'd1;
			end
		end
		2'd2: begin
			subfragments_cmp_reorder_valid <= subfragments_master_out_source_valid;
			subfragments_master_out_source_ready <= subfragments_cmp_reorder_ready;
			if (((subfragments_master_out_source_valid & subfragments_master_out_source_ready) & subfragments_master_out_source_last)) begin
				if (subfragments_master_out_source_payload_end) begin
					subfragments_tag_queue_sink_valid <= 1'd1;
					subfragments_tag_queue_sink_payload_tag <= subfragments_master_out_source_payload_tag;
				end
				subfragments_fsm1_next_state <= 1'd1;
			end
		end
		default: begin
			subfragments_tag_queue_sink_valid <= 1'd1;
			subfragments_tag_queue_sink_payload_tag <= subfragments_fill_tag;
			subfragments_fill_tag_litepciecrossbar_next_value <= (subfragments_fill_tag + 1'd1);
			subfragments_fill_tag_litepciecrossbar_next_value_ce <= 1'd1;
			if ((subfragments_fill_tag == 3'd7)) begin
				subfragments_fsm1_next_state <= 1'd1;
			end
		end
	endcase
end
assign subfragments_master_in_sink_valid = basesoc_litepciemasterinternalport1_sink_valid;
assign basesoc_litepciemasterinternalport1_sink_ready = subfragments_master_in_sink_ready;
assign subfragments_master_in_sink_first = basesoc_litepciemasterinternalport1_sink_first;
assign subfragments_master_in_sink_last = basesoc_litepciemasterinternalport1_sink_last;
assign subfragments_master_in_sink_payload_we = basesoc_litepciemasterinternalport1_sink_payload_we;
assign subfragments_master_in_sink_payload_adr = basesoc_litepciemasterinternalport1_sink_payload_adr;
assign subfragments_master_in_sink_payload_len = basesoc_litepciemasterinternalport1_sink_payload_len;
assign subfragments_master_in_sink_payload_req_id = basesoc_litepciemasterinternalport1_sink_payload_req_id;
assign subfragments_master_in_sink_payload_tag = basesoc_litepciemasterinternalport1_sink_payload_tag;
assign subfragments_master_in_sink_payload_dat = basesoc_litepciemasterinternalport1_sink_payload_dat;
assign subfragments_master_in_sink_payload_channel = basesoc_litepciemasterinternalport1_sink_payload_channel;
assign subfragments_master_in_sink_payload_user_id = basesoc_litepciemasterinternalport1_sink_payload_user_id;
assign basesoc_litepciemasterinternalport1_source_valid = subfragments_master_in_source_valid;
assign subfragments_master_in_source_ready = basesoc_litepciemasterinternalport1_source_ready;
assign basesoc_litepciemasterinternalport1_source_first = subfragments_master_in_source_first;
assign basesoc_litepciemasterinternalport1_source_last = subfragments_master_in_source_last;
assign basesoc_litepciemasterinternalport1_source_payload_adr = subfragments_master_in_source_payload_adr;
assign basesoc_litepciemasterinternalport1_source_payload_len = subfragments_master_in_source_payload_len;
assign basesoc_litepciemasterinternalport1_source_payload_end = subfragments_master_in_source_payload_end;
assign basesoc_litepciemasterinternalport1_source_payload_req_id = subfragments_master_in_source_payload_req_id;
assign basesoc_litepciemasterinternalport1_source_payload_cmp_id = subfragments_master_in_source_payload_cmp_id;
assign basesoc_litepciemasterinternalport1_source_payload_err = subfragments_master_in_source_payload_err;
assign basesoc_litepciemasterinternalport1_source_payload_tag = subfragments_master_in_source_payload_tag;
assign basesoc_litepciemasterinternalport1_source_payload_dat = subfragments_master_in_source_payload_dat;
assign basesoc_litepciemasterinternalport1_source_payload_channel = subfragments_master_in_source_payload_channel;
assign basesoc_litepciemasterinternalport1_source_payload_user_id = subfragments_master_in_source_payload_user_id;
assign subfragments_sink_valid = basesoc_litepciemasterinternalport0_sink_valid;
assign basesoc_litepciemasterinternalport0_sink_ready = subfragments_sink_ready;
assign subfragments_sink_first = basesoc_litepciemasterinternalport0_sink_first;
assign subfragments_sink_last = basesoc_litepciemasterinternalport0_sink_last;
assign subfragments_sink_payload_we = basesoc_litepciemasterinternalport0_sink_payload_we;
assign subfragments_sink_payload_adr = basesoc_litepciemasterinternalport0_sink_payload_adr;
assign subfragments_sink_payload_len = basesoc_litepciemasterinternalport0_sink_payload_len;
assign subfragments_sink_payload_req_id = basesoc_litepciemasterinternalport0_sink_payload_req_id;
assign subfragments_sink_payload_tag = basesoc_litepciemasterinternalport0_sink_payload_tag;
assign subfragments_sink_payload_dat = basesoc_litepciemasterinternalport0_sink_payload_dat;
assign subfragments_sink_payload_channel = basesoc_litepciemasterinternalport0_sink_payload_channel;
assign subfragments_sink_payload_user_id = basesoc_litepciemasterinternalport0_sink_payload_user_id;
assign basesoc_litepciemasterinternalport0_source_valid = subfragments_source_valid;
assign subfragments_source_ready = basesoc_litepciemasterinternalport0_source_ready;
assign basesoc_litepciemasterinternalport0_source_first = subfragments_source_first;
assign basesoc_litepciemasterinternalport0_source_last = subfragments_source_last;
assign basesoc_litepciemasterinternalport0_source_payload_adr = subfragments_source_payload_adr;
assign basesoc_litepciemasterinternalport0_source_payload_len = subfragments_source_payload_len;
assign basesoc_litepciemasterinternalport0_source_payload_end = subfragments_source_payload_end;
assign basesoc_litepciemasterinternalport0_source_payload_req_id = subfragments_source_payload_req_id;
assign basesoc_litepciemasterinternalport0_source_payload_cmp_id = subfragments_source_payload_cmp_id;
assign basesoc_litepciemasterinternalport0_source_payload_err = subfragments_source_payload_err;
assign basesoc_litepciemasterinternalport0_source_payload_tag = subfragments_source_payload_tag;
assign basesoc_litepciemasterinternalport0_source_payload_dat = subfragments_source_payload_dat;
assign basesoc_litepciemasterinternalport0_source_payload_channel = subfragments_source_payload_channel;
assign basesoc_litepciemasterinternalport0_source_payload_user_id = subfragments_source_payload_user_id;
always @(*) begin
	subfragments_request <= 2'd0;
	subfragments_request[0] <= subfragments_status0_ongoing0;
	subfragments_request[1] <= subfragments_status1_ongoing0;
end
always @(*) begin
	basesoc_master_sink_payload_user_id <= 8'd0;
	basesoc_master_sink_valid <= 1'd0;
	subfragments_sink_ready <= 1'd0;
	basesoc_master_sink_first <= 1'd0;
	basesoc_master_sink_last <= 1'd0;
	basesoc_master_sink_payload_we <= 1'd0;
	basesoc_master_sink_payload_adr <= 32'd0;
	basesoc_master_sink_payload_len <= 10'd0;
	subfragments_master_out_sink_ready <= 1'd0;
	basesoc_master_sink_payload_req_id <= 16'd0;
	basesoc_master_sink_payload_tag <= 8'd0;
	basesoc_master_sink_payload_dat <= 128'd0;
	basesoc_master_sink_payload_channel <= 8'd0;
	case (subfragments_grant)
		1'd0: begin
			basesoc_master_sink_valid <= subfragments_master_out_sink_valid;
			subfragments_master_out_sink_ready <= basesoc_master_sink_ready;
			basesoc_master_sink_first <= subfragments_master_out_sink_first;
			basesoc_master_sink_last <= subfragments_master_out_sink_last;
			basesoc_master_sink_payload_we <= subfragments_master_out_sink_payload_we;
			basesoc_master_sink_payload_adr <= subfragments_master_out_sink_payload_adr;
			basesoc_master_sink_payload_len <= subfragments_master_out_sink_payload_len;
			basesoc_master_sink_payload_req_id <= subfragments_master_out_sink_payload_req_id;
			basesoc_master_sink_payload_tag <= subfragments_master_out_sink_payload_tag;
			basesoc_master_sink_payload_dat <= subfragments_master_out_sink_payload_dat;
			basesoc_master_sink_payload_channel <= subfragments_master_out_sink_payload_channel;
			basesoc_master_sink_payload_user_id <= subfragments_master_out_sink_payload_user_id;
		end
		1'd1: begin
			basesoc_master_sink_valid <= subfragments_sink_valid;
			subfragments_sink_ready <= basesoc_master_sink_ready;
			basesoc_master_sink_first <= subfragments_sink_first;
			basesoc_master_sink_last <= subfragments_sink_last;
			basesoc_master_sink_payload_we <= subfragments_sink_payload_we;
			basesoc_master_sink_payload_adr <= subfragments_sink_payload_adr;
			basesoc_master_sink_payload_len <= subfragments_sink_payload_len;
			basesoc_master_sink_payload_req_id <= subfragments_sink_payload_req_id;
			basesoc_master_sink_payload_tag <= subfragments_sink_payload_tag;
			basesoc_master_sink_payload_dat <= subfragments_sink_payload_dat;
			basesoc_master_sink_payload_channel <= subfragments_sink_payload_channel;
			basesoc_master_sink_payload_user_id <= subfragments_sink_payload_user_id;
		end
	endcase
end
always @(*) begin
	subfragments_status0_last <= 1'd0;
	if (subfragments_master_out_sink_valid) begin
		subfragments_status0_last <= (subfragments_master_out_sink_last & subfragments_master_out_sink_ready);
	end
end
assign subfragments_status0_ongoing0 = ((subfragments_master_out_sink_valid | subfragments_status0_ongoing1) & (~subfragments_status0_last));
always @(*) begin
	subfragments_status1_last <= 1'd0;
	if (subfragments_sink_valid) begin
		subfragments_status1_last <= (subfragments_sink_last & subfragments_sink_ready);
	end
end
assign subfragments_status1_ongoing0 = ((subfragments_sink_valid | subfragments_status1_ongoing1) & (~subfragments_status1_last));
always @(*) begin
	basesoc_mmap_wishbone_we <= 1'd0;
	basesoc_mmap_source_ready <= 1'd0;
	subfragments_litepciewishbonemaster_next_state <= 2'd0;
	basesoc_mmap_sink_valid <= 1'd0;
	basesoc_mmap_wishbone_cyc <= 1'd0;
	basesoc_mmap_update_dat <= 1'd0;
	basesoc_mmap_wishbone_stb <= 1'd0;
	subfragments_litepciewishbonemaster_next_state <= subfragments_litepciewishbonemaster_state;
	case (subfragments_litepciewishbonemaster_state)
		1'd1: begin
			basesoc_mmap_wishbone_stb <= 1'd1;
			basesoc_mmap_wishbone_we <= 1'd1;
			basesoc_mmap_wishbone_cyc <= 1'd1;
			if (basesoc_mmap_wishbone_ack) begin
				basesoc_mmap_source_ready <= 1'd1;
				subfragments_litepciewishbonemaster_next_state <= 1'd0;
			end
		end
		2'd2: begin
			basesoc_mmap_wishbone_stb <= 1'd1;
			basesoc_mmap_wishbone_we <= 1'd0;
			basesoc_mmap_wishbone_cyc <= 1'd1;
			if (basesoc_mmap_wishbone_ack) begin
				basesoc_mmap_update_dat <= 1'd1;
				subfragments_litepciewishbonemaster_next_state <= 2'd3;
			end
		end
		2'd3: begin
			basesoc_mmap_sink_valid <= 1'd1;
			if (basesoc_mmap_sink_ready) begin
				basesoc_mmap_source_ready <= 1'd1;
				subfragments_litepciewishbonemaster_next_state <= 1'd0;
			end
		end
		default: begin
			if ((basesoc_mmap_source_valid & basesoc_mmap_source_first)) begin
				if (basesoc_mmap_source_payload_we) begin
					subfragments_litepciewishbonemaster_next_state <= 1'd1;
				end else begin
					subfragments_litepciewishbonemaster_next_state <= 2'd2;
				end
			end else begin
				basesoc_mmap_source_ready <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	basesoc_msi_clear <= 32'd0;
	if (basesoc_msi_clear_re) begin
		basesoc_msi_clear <= basesoc_msi_clear_storage;
	end
end
assign basesoc_msi_enable = basesoc_msi_enable_storage;
assign basesoc_msi_vector_status = basesoc_msi_vector;
assign basesoc_msi_source_valid = (basesoc_msi_msi != 1'd0);
assign basesoc_loopback_sink_valid = basesoc_reader_source_source_valid0;
assign basesoc_reader_source_source_ready0 = basesoc_loopback_sink_ready;
assign basesoc_loopback_sink_first = basesoc_reader_source_source_first0;
assign basesoc_loopback_sink_last = basesoc_reader_source_source_last0;
assign basesoc_loopback_sink_payload_data = basesoc_reader_source_source_payload_data;
assign basesoc_writer_sink_sink_valid = basesoc_loopback_source_valid;
assign basesoc_loopback_source_ready = basesoc_writer_sink_sink_ready;
assign basesoc_writer_sink_sink_first = basesoc_loopback_source_first;
assign basesoc_writer_sink_sink_last = basesoc_loopback_source_last;
assign basesoc_writer_sink_sink_payload_data = basesoc_loopback_source_payload_data;
assign basesoc_buffering_sink_sink_valid = basesoc_loopback_next_source_valid;
assign basesoc_loopback_next_source_ready = basesoc_buffering_sink_sink_ready;
assign basesoc_buffering_sink_sink_first = basesoc_loopback_next_source_first;
assign basesoc_buffering_sink_sink_last = basesoc_loopback_next_source_last;
assign basesoc_buffering_sink_sink_payload_data = basesoc_loopback_next_source_payload_data;
assign basesoc_loopback_next_sink_valid = basesoc_buffering_source_source_valid;
assign basesoc_buffering_source_source_ready = basesoc_loopback_next_sink_ready;
assign basesoc_loopback_next_sink_first = basesoc_buffering_source_source_first;
assign basesoc_loopback_next_sink_last = basesoc_buffering_source_source_last;
assign basesoc_loopback_next_sink_payload_data = basesoc_buffering_source_source_payload_data;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_valid = basesoc_writer_source_source_valid;
assign basesoc_writer_source_source_ready = basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_ready;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_first = basesoc_writer_source_source_first;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_last = basesoc_writer_source_source_last;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_address = basesoc_writer_source_source_payload_address;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_length = basesoc_writer_source_source_payload_length;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_irq_disable = basesoc_writer_source_source_payload_irq_disable;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_last_disable = basesoc_writer_source_source_payload_last_disable;
always @(*) begin
	basesoc_writer_data_fifo_sink_first <= 1'd0;
	basesoc_writer_data_fifo_sink_valid <= 1'd0;
	basesoc_writer_sink_sink_ready <= 1'd0;
	basesoc_writer_data_fifo_sink_last <= 1'd0;
	basesoc_writer_data_fifo_sink_payload_data <= 128'd0;
	if (basesoc_writer_enable_storage) begin
		basesoc_writer_data_fifo_sink_valid <= basesoc_writer_sink_sink_valid;
		basesoc_writer_sink_sink_ready <= basesoc_writer_data_fifo_sink_ready;
		basesoc_writer_data_fifo_sink_first <= basesoc_writer_sink_sink_first;
		basesoc_writer_data_fifo_sink_last <= basesoc_writer_sink_sink_last;
		basesoc_writer_data_fifo_sink_payload_data <= basesoc_writer_sink_sink_payload_data;
	end else begin
		basesoc_writer_sink_sink_ready <= 1'd1;
	end
end
assign basesoc_litepciemasterinternalport0_sink_payload_channel = 1'd0;
assign basesoc_litepciemasterinternalport0_sink_payload_user_id = basesoc_writer_splitter_bufferizeendpoints_source_payload_user_id;
assign basesoc_litepciemasterinternalport0_sink_first = (basesoc_writer_req_count == 1'd0);
assign basesoc_litepciemasterinternalport0_sink_last = (basesoc_writer_req_count == (basesoc_writer_splitter_bufferizeendpoints_source_payload_length[23:4] - 1'd1));
assign basesoc_litepciemasterinternalport0_sink_payload_we = 1'd1;
assign basesoc_litepciemasterinternalport0_sink_payload_adr = basesoc_writer_splitter_bufferizeendpoints_source_payload_address;
assign basesoc_litepciemasterinternalport0_sink_payload_req_id = s7pciephy_id;
assign basesoc_litepciemasterinternalport0_sink_payload_tag = 1'd0;
assign basesoc_litepciemasterinternalport0_sink_payload_len = basesoc_writer_splitter_bufferizeendpoints_source_payload_length[23:2];
assign basesoc_litepciemasterinternalport0_sink_payload_dat = basesoc_writer_data_fifo_source_payload_data;
always @(*) begin
	basesoc_writer_irq <= 1'd0;
	if (((basesoc_writer_splitter_bufferizeendpoints_source_valid & basesoc_writer_splitter_bufferizeendpoints_source_ready) & basesoc_writer_splitter_bufferizeendpoints_source_last)) begin
		basesoc_writer_irq <= (~basesoc_writer_splitter_bufferizeendpoints_source_payload_irq_disable);
	end
end
assign basesoc_writer_table_reset = (basesoc_writer_reset_storage & basesoc_writer_reset_re);
assign basesoc_writer_level_status = basesoc_writer_table_level;
assign basesoc_writer_source_source_valid = basesoc_writer_table_source_valid;
assign basesoc_writer_table_source_ready = basesoc_writer_source_source_ready;
assign basesoc_writer_source_source_first = basesoc_writer_table_source_first;
assign basesoc_writer_source_source_last = basesoc_writer_table_source_last;
assign basesoc_writer_source_source_payload_address = basesoc_writer_table_source_payload_address;
assign basesoc_writer_source_source_payload_length = basesoc_writer_table_source_payload_length;
assign basesoc_writer_source_source_payload_irq_disable = basesoc_writer_table_source_payload_irq_disable;
assign basesoc_writer_source_source_payload_last_disable = basesoc_writer_table_source_payload_last_disable;
assign basesoc_writer_table_syncfifo_din = {basesoc_writer_table_fifo_in_last, basesoc_writer_table_fifo_in_first, basesoc_writer_table_fifo_in_payload_last_disable, basesoc_writer_table_fifo_in_payload_irq_disable, basesoc_writer_table_fifo_in_payload_length, basesoc_writer_table_fifo_in_payload_address};
assign {basesoc_writer_table_fifo_out_last, basesoc_writer_table_fifo_out_first, basesoc_writer_table_fifo_out_payload_last_disable, basesoc_writer_table_fifo_out_payload_irq_disable, basesoc_writer_table_fifo_out_payload_length, basesoc_writer_table_fifo_out_payload_address} = basesoc_writer_table_syncfifo_dout;
assign basesoc_writer_table_sink_ready = basesoc_writer_table_syncfifo_writable;
assign basesoc_writer_table_syncfifo_we = basesoc_writer_table_sink_valid;
assign basesoc_writer_table_fifo_in_first = basesoc_writer_table_sink_first;
assign basesoc_writer_table_fifo_in_last = basesoc_writer_table_sink_last;
assign basesoc_writer_table_fifo_in_payload_address = basesoc_writer_table_sink_payload_address;
assign basesoc_writer_table_fifo_in_payload_length = basesoc_writer_table_sink_payload_length;
assign basesoc_writer_table_fifo_in_payload_irq_disable = basesoc_writer_table_sink_payload_irq_disable;
assign basesoc_writer_table_fifo_in_payload_last_disable = basesoc_writer_table_sink_payload_last_disable;
assign basesoc_writer_table_source_valid = basesoc_writer_table_syncfifo_readable;
assign basesoc_writer_table_source_first = basesoc_writer_table_fifo_out_first;
assign basesoc_writer_table_source_last = basesoc_writer_table_fifo_out_last;
assign basesoc_writer_table_source_payload_address = basesoc_writer_table_fifo_out_payload_address;
assign basesoc_writer_table_source_payload_length = basesoc_writer_table_fifo_out_payload_length;
assign basesoc_writer_table_source_payload_irq_disable = basesoc_writer_table_fifo_out_payload_irq_disable;
assign basesoc_writer_table_source_payload_last_disable = basesoc_writer_table_fifo_out_payload_last_disable;
assign basesoc_writer_table_syncfifo_re = basesoc_writer_table_source_ready;
always @(*) begin
	basesoc_writer_table_wrport_adr <= 8'd0;
	if (basesoc_writer_table_replace) begin
		basesoc_writer_table_wrport_adr <= (basesoc_writer_table_produce - 1'd1);
	end else begin
		basesoc_writer_table_wrport_adr <= basesoc_writer_table_produce;
	end
end
assign basesoc_writer_table_wrport_dat_w = basesoc_writer_table_syncfifo_din;
assign basesoc_writer_table_wrport_we = (basesoc_writer_table_syncfifo_we & (basesoc_writer_table_syncfifo_writable | basesoc_writer_table_replace));
assign basesoc_writer_table_do_read = (basesoc_writer_table_syncfifo_readable & basesoc_writer_table_syncfifo_re);
assign basesoc_writer_table_rdport_adr = basesoc_writer_table_consume;
assign basesoc_writer_table_syncfifo_dout = basesoc_writer_table_rdport_dat_r;
assign basesoc_writer_table_syncfifo_writable = (basesoc_writer_table_level != 9'd256);
assign basesoc_writer_table_syncfifo_readable = (basesoc_writer_table_level != 1'd0);
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_address = (basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_address + basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset);
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_irq_disable = basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_irq_disable;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_last_disable = basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_last_disable;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_user_id = basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id;
assign basesoc_writer_splitter_bufferizeendpoints_sink_valid = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_valid;
assign basesoc_writer_splitter_litepciedmadescriptorsplitter_source_ready = basesoc_writer_splitter_bufferizeendpoints_sink_ready;
assign basesoc_writer_splitter_bufferizeendpoints_sink_first = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_first;
assign basesoc_writer_splitter_bufferizeendpoints_sink_last = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_last;
assign basesoc_writer_splitter_bufferizeendpoints_sink_payload_address = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_address;
assign basesoc_writer_splitter_bufferizeendpoints_sink_payload_length = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_length;
assign basesoc_writer_splitter_bufferizeendpoints_sink_payload_irq_disable = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_irq_disable;
assign basesoc_writer_splitter_bufferizeendpoints_sink_payload_last_disable = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_last_disable;
assign basesoc_writer_splitter_bufferizeendpoints_sink_payload_user_id = basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_user_id;
always @(*) begin
	basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value_ce1 <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_source_valid <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value2 <= 32'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value_ce2 <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_source_first <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_source_last <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_length <= 24'd0;
	subfragments_litepciedmawriter_bufferizeendpoints_next_state <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value0 <= 32'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_ready <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value_ce0 <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value1 <= 32'd0;
	subfragments_litepciedmawriter_bufferizeendpoints_next_state <= subfragments_litepciedmawriter_bufferizeendpoints_state;
	case (subfragments_litepciedmawriter_bufferizeendpoints_state)
		1'd1: begin
			basesoc_writer_splitter_litepciedmadescriptorsplitter_source_valid <= 1'd1;
			basesoc_writer_splitter_litepciedmadescriptorsplitter_source_first <= (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset == 1'd0);
			if ((basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length > s7pciephy_max_payload_size)) begin
				basesoc_writer_splitter_litepciedmadescriptorsplitter_source_last <= basesoc_writer_splitter_litepciedmadescriptorsplitter_end;
				basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_length <= s7pciephy_max_payload_size;
			end else begin
				basesoc_writer_splitter_litepciedmadescriptorsplitter_source_last <= 1'd1;
				basesoc_writer_splitter_litepciedmadescriptorsplitter_source_payload_length <= basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length;
			end
			if (basesoc_writer_splitter_litepciedmadescriptorsplitter_source_ready) begin
				basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value0 <= (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset + s7pciephy_max_payload_size);
				basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value_ce0 <= 1'd1;
				basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value1 <= (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length - s7pciephy_max_payload_size);
				basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value_ce1 <= 1'd1;
				if (basesoc_writer_splitter_litepciedmadescriptorsplitter_source_last) begin
					basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_ready <= 1'd1;
					basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value2 <= (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id + 1'd1);
					basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value_ce2 <= 1'd1;
					subfragments_litepciedmawriter_bufferizeendpoints_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value0 <= 1'd0;
			basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value_ce0 <= 1'd1;
			basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value1 <= basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_payload_length;
			basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value_ce1 <= 1'd1;
			if (basesoc_writer_splitter_litepciedmadescriptorsplitter_sink_valid) begin
				subfragments_litepciedmawriter_bufferizeendpoints_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_writer_splitter_bufferizeendpoints_sink_ready = ((~basesoc_writer_splitter_bufferizeendpoints_source_valid) | basesoc_writer_splitter_bufferizeendpoints_source_ready);
assign basesoc_writer_data_fifo_syncfifo_din = {basesoc_writer_data_fifo_fifo_in_last, basesoc_writer_data_fifo_fifo_in_first, basesoc_writer_data_fifo_fifo_in_payload_data};
assign {basesoc_writer_data_fifo_fifo_out_last, basesoc_writer_data_fifo_fifo_out_first, basesoc_writer_data_fifo_fifo_out_payload_data} = basesoc_writer_data_fifo_syncfifo_dout;
assign basesoc_writer_data_fifo_sink_ready = basesoc_writer_data_fifo_syncfifo_writable;
assign basesoc_writer_data_fifo_syncfifo_we = basesoc_writer_data_fifo_sink_valid;
assign basesoc_writer_data_fifo_fifo_in_first = basesoc_writer_data_fifo_sink_first;
assign basesoc_writer_data_fifo_fifo_in_last = basesoc_writer_data_fifo_sink_last;
assign basesoc_writer_data_fifo_fifo_in_payload_data = basesoc_writer_data_fifo_sink_payload_data;
assign basesoc_writer_data_fifo_source_valid = basesoc_writer_data_fifo_readable;
assign basesoc_writer_data_fifo_source_first = basesoc_writer_data_fifo_fifo_out_first;
assign basesoc_writer_data_fifo_source_last = basesoc_writer_data_fifo_fifo_out_last;
assign basesoc_writer_data_fifo_source_payload_data = basesoc_writer_data_fifo_fifo_out_payload_data;
assign basesoc_writer_data_fifo_re = basesoc_writer_data_fifo_source_ready;
assign basesoc_writer_data_fifo_syncfifo_re = (basesoc_writer_data_fifo_syncfifo_readable & ((~basesoc_writer_data_fifo_readable) | basesoc_writer_data_fifo_re));
assign basesoc_writer_data_fifo_level1 = (basesoc_writer_data_fifo_level0 + basesoc_writer_data_fifo_readable);
always @(*) begin
	basesoc_writer_data_fifo_wrport_adr <= 7'd0;
	if (basesoc_writer_data_fifo_replace) begin
		basesoc_writer_data_fifo_wrport_adr <= (basesoc_writer_data_fifo_produce - 1'd1);
	end else begin
		basesoc_writer_data_fifo_wrport_adr <= basesoc_writer_data_fifo_produce;
	end
end
assign basesoc_writer_data_fifo_wrport_dat_w = basesoc_writer_data_fifo_syncfifo_din;
assign basesoc_writer_data_fifo_wrport_we = (basesoc_writer_data_fifo_syncfifo_we & (basesoc_writer_data_fifo_syncfifo_writable | basesoc_writer_data_fifo_replace));
assign basesoc_writer_data_fifo_do_read = (basesoc_writer_data_fifo_syncfifo_readable & basesoc_writer_data_fifo_syncfifo_re);
assign basesoc_writer_data_fifo_rdport_adr = basesoc_writer_data_fifo_consume;
assign basesoc_writer_data_fifo_syncfifo_dout = basesoc_writer_data_fifo_rdport_dat_r;
assign basesoc_writer_data_fifo_rdport_re = basesoc_writer_data_fifo_do_read;
assign basesoc_writer_data_fifo_syncfifo_writable = (basesoc_writer_data_fifo_level0 != 8'd128);
assign basesoc_writer_data_fifo_syncfifo_readable = (basesoc_writer_data_fifo_level0 != 1'd0);
always @(*) begin
	basesoc_writer_data_fifo_source_ready <= 1'd0;
	basesoc_writer_splitter_bufferizeendpoints_source_ready <= 1'd0;
	basesoc_litepciemasterinternalport0_sink_valid <= 1'd0;
	basesoc_writer_splitter_reset <= 1'd0;
	basesoc_writer_resetinserter_reset <= 1'd0;
	subfragments_litepciedmawriter_fsm_next_state <= 1'd0;
	basesoc_writer_splitter_litepciedmadescriptorsplitter_end <= 1'd0;
	basesoc_writer_req_count_litepciedma_fsm_next_value <= 24'd0;
	basesoc_writer_req_count_litepciedma_fsm_next_value_ce <= 1'd0;
	subfragments_litepciedmawriter_fsm_next_state <= subfragments_litepciedmawriter_fsm_state;
	case (subfragments_litepciedmawriter_fsm_state)
		1'd1: begin
			basesoc_litepciemasterinternalport0_sink_valid <= 1'd1;
			if (basesoc_litepciemasterinternalport0_sink_ready) begin
				basesoc_writer_req_count_litepciedma_fsm_next_value <= (basesoc_writer_req_count + 1'd1);
				basesoc_writer_req_count_litepciedma_fsm_next_value_ce <= 1'd1;
				basesoc_writer_data_fifo_source_ready <= 1'd1;
				if (basesoc_litepciemasterinternalport0_sink_last) begin
					basesoc_writer_splitter_bufferizeendpoints_source_ready <= 1'd1;
					basesoc_writer_splitter_litepciedmadescriptorsplitter_end <= (basesoc_writer_data_fifo_source_last & (~basesoc_writer_splitter_bufferizeendpoints_source_payload_last_disable));
					subfragments_litepciedmawriter_fsm_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_writer_splitter_reset <= (~basesoc_writer_enable_storage);
			basesoc_writer_resetinserter_reset <= (~basesoc_writer_enable_storage);
			basesoc_writer_req_count_litepciedma_fsm_next_value <= 1'd0;
			basesoc_writer_req_count_litepciedma_fsm_next_value_ce <= 1'd1;
			if ((basesoc_writer_splitter_bufferizeendpoints_source_valid & (basesoc_writer_data_fifo_level1 >= basesoc_writer_splitter_bufferizeendpoints_source_payload_length[23:4]))) begin
				subfragments_litepciedmawriter_fsm_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_valid = basesoc_reader_source_source_valid1;
assign basesoc_reader_source_source_ready1 = basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_ready;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_first = basesoc_reader_source_source_first1;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_last = basesoc_reader_source_source_last1;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_address = basesoc_reader_source_source_payload_address;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_length = basesoc_reader_source_source_payload_length;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_irq_disable = basesoc_reader_source_source_payload_irq_disable;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_last_disable = basesoc_reader_source_source_payload_last_disable;
assign basesoc_reader_source_source_valid0 = basesoc_reader_data_fifo_source_valid;
assign basesoc_reader_data_fifo_source_ready = basesoc_reader_source_source_ready0;
assign basesoc_reader_source_source_first0 = basesoc_reader_data_fifo_source_first;
assign basesoc_reader_source_source_last0 = basesoc_reader_data_fifo_source_last;
assign basesoc_reader_source_source_payload_data = basesoc_reader_data_fifo_source_payload_data;
always @(*) begin
	basesoc_reader_data_fifo_sink_first <= 1'd0;
	basesoc_reader_data_fifo_sink_valid <= 1'd0;
	basesoc_reader_data_fifo_sink_payload_data <= 128'd0;
	basesoc_litepciemasterinternalport1_source_ready <= 1'd0;
	if (basesoc_reader_enable_storage) begin
		basesoc_reader_data_fifo_sink_valid <= basesoc_litepciemasterinternalport1_source_valid;
		basesoc_litepciemasterinternalport1_source_ready <= basesoc_reader_data_fifo_sink_ready;
		basesoc_reader_data_fifo_sink_payload_data <= basesoc_litepciemasterinternalport1_source_payload_dat;
		basesoc_reader_data_fifo_sink_first <= (basesoc_litepciemasterinternalport1_source_first & (basesoc_litepciemasterinternalport1_source_payload_user_id != basesoc_reader_last_user_id));
	end else begin
		basesoc_litepciemasterinternalport1_source_ready <= 1'd1;
	end
end
always @(*) begin
	basesoc_reader_pending_words_queue <= 11'd0;
	if ((basesoc_reader_splitter_bufferizeendpoints_source_valid & basesoc_reader_splitter_bufferizeendpoints_source_ready)) begin
		basesoc_reader_pending_words_queue <= basesoc_reader_splitter_bufferizeendpoints_source_payload_length[23:4];
	end
end
always @(*) begin
	basesoc_reader_pending_words_dequeue <= 11'd0;
	if ((basesoc_reader_data_fifo_source_valid & basesoc_reader_data_fifo_source_ready)) begin
		basesoc_reader_pending_words_dequeue <= 1'd1;
	end
end
assign basesoc_litepciemasterinternalport1_sink_payload_channel = 1'd1;
assign basesoc_litepciemasterinternalport1_sink_payload_user_id = basesoc_reader_splitter_bufferizeendpoints_source_payload_user_id;
assign basesoc_litepciemasterinternalport1_sink_first = 1'd1;
assign basesoc_litepciemasterinternalport1_sink_last = 1'd1;
assign basesoc_litepciemasterinternalport1_sink_payload_we = 1'd0;
assign basesoc_litepciemasterinternalport1_sink_payload_adr = basesoc_reader_splitter_bufferizeendpoints_source_payload_address;
assign basesoc_litepciemasterinternalport1_sink_payload_len = basesoc_reader_splitter_bufferizeendpoints_source_payload_length[23:2];
assign basesoc_litepciemasterinternalport1_sink_payload_req_id = s7pciephy_id;
assign basesoc_litepciemasterinternalport1_sink_payload_dat = 1'd0;
always @(*) begin
	basesoc_reader_irq <= 1'd0;
	if (((basesoc_reader_splitter_bufferizeendpoints_source_valid & basesoc_reader_splitter_bufferizeendpoints_source_ready) & basesoc_reader_splitter_bufferizeendpoints_source_last)) begin
		basesoc_reader_irq <= (~basesoc_reader_splitter_bufferizeendpoints_source_payload_irq_disable);
	end
end
assign basesoc_reader_table_reset = (basesoc_reader_reset_storage & basesoc_reader_reset_re);
assign basesoc_reader_level_status = basesoc_reader_table_level;
assign basesoc_reader_source_source_valid1 = basesoc_reader_table_source_valid;
assign basesoc_reader_table_source_ready = basesoc_reader_source_source_ready1;
assign basesoc_reader_source_source_first1 = basesoc_reader_table_source_first;
assign basesoc_reader_source_source_last1 = basesoc_reader_table_source_last;
assign basesoc_reader_source_source_payload_address = basesoc_reader_table_source_payload_address;
assign basesoc_reader_source_source_payload_length = basesoc_reader_table_source_payload_length;
assign basesoc_reader_source_source_payload_irq_disable = basesoc_reader_table_source_payload_irq_disable;
assign basesoc_reader_source_source_payload_last_disable = basesoc_reader_table_source_payload_last_disable;
assign basesoc_reader_table_syncfifo_din = {basesoc_reader_table_fifo_in_last, basesoc_reader_table_fifo_in_first, basesoc_reader_table_fifo_in_payload_last_disable, basesoc_reader_table_fifo_in_payload_irq_disable, basesoc_reader_table_fifo_in_payload_length, basesoc_reader_table_fifo_in_payload_address};
assign {basesoc_reader_table_fifo_out_last, basesoc_reader_table_fifo_out_first, basesoc_reader_table_fifo_out_payload_last_disable, basesoc_reader_table_fifo_out_payload_irq_disable, basesoc_reader_table_fifo_out_payload_length, basesoc_reader_table_fifo_out_payload_address} = basesoc_reader_table_syncfifo_dout;
assign basesoc_reader_table_sink_ready = basesoc_reader_table_syncfifo_writable;
assign basesoc_reader_table_syncfifo_we = basesoc_reader_table_sink_valid;
assign basesoc_reader_table_fifo_in_first = basesoc_reader_table_sink_first;
assign basesoc_reader_table_fifo_in_last = basesoc_reader_table_sink_last;
assign basesoc_reader_table_fifo_in_payload_address = basesoc_reader_table_sink_payload_address;
assign basesoc_reader_table_fifo_in_payload_length = basesoc_reader_table_sink_payload_length;
assign basesoc_reader_table_fifo_in_payload_irq_disable = basesoc_reader_table_sink_payload_irq_disable;
assign basesoc_reader_table_fifo_in_payload_last_disable = basesoc_reader_table_sink_payload_last_disable;
assign basesoc_reader_table_source_valid = basesoc_reader_table_syncfifo_readable;
assign basesoc_reader_table_source_first = basesoc_reader_table_fifo_out_first;
assign basesoc_reader_table_source_last = basesoc_reader_table_fifo_out_last;
assign basesoc_reader_table_source_payload_address = basesoc_reader_table_fifo_out_payload_address;
assign basesoc_reader_table_source_payload_length = basesoc_reader_table_fifo_out_payload_length;
assign basesoc_reader_table_source_payload_irq_disable = basesoc_reader_table_fifo_out_payload_irq_disable;
assign basesoc_reader_table_source_payload_last_disable = basesoc_reader_table_fifo_out_payload_last_disable;
assign basesoc_reader_table_syncfifo_re = basesoc_reader_table_source_ready;
always @(*) begin
	basesoc_reader_table_wrport_adr <= 8'd0;
	if (basesoc_reader_table_replace) begin
		basesoc_reader_table_wrport_adr <= (basesoc_reader_table_produce - 1'd1);
	end else begin
		basesoc_reader_table_wrport_adr <= basesoc_reader_table_produce;
	end
end
assign basesoc_reader_table_wrport_dat_w = basesoc_reader_table_syncfifo_din;
assign basesoc_reader_table_wrport_we = (basesoc_reader_table_syncfifo_we & (basesoc_reader_table_syncfifo_writable | basesoc_reader_table_replace));
assign basesoc_reader_table_do_read = (basesoc_reader_table_syncfifo_readable & basesoc_reader_table_syncfifo_re);
assign basesoc_reader_table_rdport_adr = basesoc_reader_table_consume;
assign basesoc_reader_table_syncfifo_dout = basesoc_reader_table_rdport_dat_r;
assign basesoc_reader_table_syncfifo_writable = (basesoc_reader_table_level != 9'd256);
assign basesoc_reader_table_syncfifo_readable = (basesoc_reader_table_level != 1'd0);
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_address = (basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_address + basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset);
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_irq_disable = basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_irq_disable;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_last_disable = basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_last_disable;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_user_id = basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id;
assign basesoc_reader_splitter_bufferizeendpoints_sink_valid = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_valid;
assign basesoc_reader_splitter_litepciedmadescriptorsplitter_source_ready = basesoc_reader_splitter_bufferizeendpoints_sink_ready;
assign basesoc_reader_splitter_bufferizeendpoints_sink_first = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_first;
assign basesoc_reader_splitter_bufferizeendpoints_sink_last = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_last;
assign basesoc_reader_splitter_bufferizeendpoints_sink_payload_address = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_address;
assign basesoc_reader_splitter_bufferizeendpoints_sink_payload_length = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_length;
assign basesoc_reader_splitter_bufferizeendpoints_sink_payload_irq_disable = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_irq_disable;
assign basesoc_reader_splitter_bufferizeendpoints_sink_payload_last_disable = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_last_disable;
assign basesoc_reader_splitter_bufferizeendpoints_sink_payload_user_id = basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_user_id;
always @(*) begin
	basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_ready <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value2 <= 32'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value_ce2 <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_length <= 24'd0;
	subfragments_litepciedmareader_bufferizeendpoints_next_state <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_source_valid <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value0 <= 32'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value_ce0 <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_source_first <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_source_last <= 1'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value1 <= 32'd0;
	basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value_ce1 <= 1'd0;
	subfragments_litepciedmareader_bufferizeendpoints_next_state <= subfragments_litepciedmareader_bufferizeendpoints_state;
	case (subfragments_litepciedmareader_bufferizeendpoints_state)
		1'd1: begin
			basesoc_reader_splitter_litepciedmadescriptorsplitter_source_valid <= 1'd1;
			basesoc_reader_splitter_litepciedmadescriptorsplitter_source_first <= (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset == 1'd0);
			if ((basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length > s7pciephy_max_request_size)) begin
				basesoc_reader_splitter_litepciedmadescriptorsplitter_source_last <= basesoc_reader_splitter_litepciedmadescriptorsplitter_end;
				basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_length <= s7pciephy_max_request_size;
			end else begin
				basesoc_reader_splitter_litepciedmadescriptorsplitter_source_last <= 1'd1;
				basesoc_reader_splitter_litepciedmadescriptorsplitter_source_payload_length <= basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length;
			end
			if (basesoc_reader_splitter_litepciedmadescriptorsplitter_source_ready) begin
				basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value0 <= (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset + s7pciephy_max_request_size);
				basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value_ce0 <= 1'd1;
				basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value1 <= (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length - s7pciephy_max_request_size);
				basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value_ce1 <= 1'd1;
				if (basesoc_reader_splitter_litepciedmadescriptorsplitter_source_last) begin
					basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_ready <= 1'd1;
					basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value2 <= (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id + 1'd1);
					basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value_ce2 <= 1'd1;
					subfragments_litepciedmareader_bufferizeendpoints_next_state <= 1'd0;
				end
			end
		end
		default: begin
			basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value0 <= 1'd0;
			basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value_ce0 <= 1'd1;
			basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value1 <= basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_payload_length;
			basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value_ce1 <= 1'd1;
			if (basesoc_reader_splitter_litepciedmadescriptorsplitter_sink_valid) begin
				subfragments_litepciedmareader_bufferizeendpoints_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_reader_splitter_bufferizeendpoints_sink_ready = ((~basesoc_reader_splitter_bufferizeendpoints_source_valid) | basesoc_reader_splitter_bufferizeendpoints_source_ready);
assign basesoc_reader_data_fifo_syncfifo_din = {basesoc_reader_data_fifo_fifo_in_last, basesoc_reader_data_fifo_fifo_in_first, basesoc_reader_data_fifo_fifo_in_payload_data};
assign {basesoc_reader_data_fifo_fifo_out_last, basesoc_reader_data_fifo_fifo_out_first, basesoc_reader_data_fifo_fifo_out_payload_data} = basesoc_reader_data_fifo_syncfifo_dout;
assign basesoc_reader_data_fifo_sink_ready = basesoc_reader_data_fifo_syncfifo_writable;
assign basesoc_reader_data_fifo_syncfifo_we = basesoc_reader_data_fifo_sink_valid;
assign basesoc_reader_data_fifo_fifo_in_first = basesoc_reader_data_fifo_sink_first;
assign basesoc_reader_data_fifo_fifo_in_last = basesoc_reader_data_fifo_sink_last;
assign basesoc_reader_data_fifo_fifo_in_payload_data = basesoc_reader_data_fifo_sink_payload_data;
assign basesoc_reader_data_fifo_source_valid = basesoc_reader_data_fifo_readable;
assign basesoc_reader_data_fifo_source_first = basesoc_reader_data_fifo_fifo_out_first;
assign basesoc_reader_data_fifo_source_last = basesoc_reader_data_fifo_fifo_out_last;
assign basesoc_reader_data_fifo_source_payload_data = basesoc_reader_data_fifo_fifo_out_payload_data;
assign basesoc_reader_data_fifo_re = basesoc_reader_data_fifo_source_ready;
assign basesoc_reader_data_fifo_syncfifo_re = (basesoc_reader_data_fifo_syncfifo_readable & ((~basesoc_reader_data_fifo_readable) | basesoc_reader_data_fifo_re));
assign basesoc_reader_data_fifo_level1 = (basesoc_reader_data_fifo_level0 + basesoc_reader_data_fifo_readable);
always @(*) begin
	basesoc_reader_data_fifo_wrport_adr <= 10'd0;
	if (basesoc_reader_data_fifo_replace) begin
		basesoc_reader_data_fifo_wrport_adr <= (basesoc_reader_data_fifo_produce - 1'd1);
	end else begin
		basesoc_reader_data_fifo_wrport_adr <= basesoc_reader_data_fifo_produce;
	end
end
assign basesoc_reader_data_fifo_wrport_dat_w = basesoc_reader_data_fifo_syncfifo_din;
assign basesoc_reader_data_fifo_wrport_we = (basesoc_reader_data_fifo_syncfifo_we & (basesoc_reader_data_fifo_syncfifo_writable | basesoc_reader_data_fifo_replace));
assign basesoc_reader_data_fifo_do_read = (basesoc_reader_data_fifo_syncfifo_readable & basesoc_reader_data_fifo_syncfifo_re);
assign basesoc_reader_data_fifo_rdport_adr = basesoc_reader_data_fifo_consume;
assign basesoc_reader_data_fifo_syncfifo_dout = basesoc_reader_data_fifo_rdport_dat_r;
assign basesoc_reader_data_fifo_rdport_re = basesoc_reader_data_fifo_do_read;
assign basesoc_reader_data_fifo_syncfifo_writable = (basesoc_reader_data_fifo_level0 != 11'd1024);
assign basesoc_reader_data_fifo_syncfifo_readable = (basesoc_reader_data_fifo_level0 != 1'd0);
always @(*) begin
	basesoc_reader_splitter_reset <= 1'd0;
	basesoc_reader_resetinserter_reset <= 1'd0;
	basesoc_reader_splitter_bufferizeendpoints_source_ready <= 1'd0;
	basesoc_litepciemasterinternalport1_sink_valid <= 1'd0;
	subfragments_litepciedmareader_fsm_next_state <= 1'd0;
	subfragments_litepciedmareader_fsm_next_state <= subfragments_litepciedmareader_fsm_state;
	case (subfragments_litepciedmareader_fsm_state)
		1'd1: begin
			basesoc_litepciemasterinternalport1_sink_valid <= 1'd1;
			if (basesoc_litepciemasterinternalport1_sink_ready) begin
				basesoc_reader_splitter_bufferizeendpoints_source_ready <= 1'd1;
				subfragments_litepciedmareader_fsm_next_state <= 1'd0;
			end
		end
		default: begin
			basesoc_reader_splitter_reset <= (~basesoc_reader_enable_storage);
			basesoc_reader_resetinserter_reset <= (~basesoc_reader_enable_storage);
			if ((basesoc_reader_splitter_bufferizeendpoints_source_valid & (basesoc_reader_pending_words < 10'd992))) begin
				subfragments_litepciedmareader_fsm_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	basesoc_loopback_next_sink_ready <= 1'd0;
	basesoc_loopback_sink_ready <= 1'd0;
	basesoc_loopback_source_valid <= 1'd0;
	basesoc_loopback_source_first <= 1'd0;
	basesoc_loopback_source_last <= 1'd0;
	basesoc_loopback_source_payload_data <= 128'd0;
	basesoc_loopback_next_source_valid <= 1'd0;
	basesoc_loopback_next_source_first <= 1'd0;
	basesoc_loopback_next_source_last <= 1'd0;
	basesoc_loopback_next_source_payload_data <= 128'd0;
	if (basesoc_loopback_storage) begin
		basesoc_loopback_source_valid <= basesoc_loopback_sink_valid;
		basesoc_loopback_sink_ready <= basesoc_loopback_source_ready;
		basesoc_loopback_source_first <= basesoc_loopback_sink_first;
		basesoc_loopback_source_last <= basesoc_loopback_sink_last;
		basesoc_loopback_source_payload_data <= basesoc_loopback_sink_payload_data;
	end else begin
		basesoc_loopback_next_source_valid <= basesoc_loopback_sink_valid;
		basesoc_loopback_sink_ready <= basesoc_loopback_next_source_ready;
		basesoc_loopback_next_source_first <= basesoc_loopback_sink_first;
		basesoc_loopback_next_source_last <= basesoc_loopback_sink_last;
		basesoc_loopback_next_source_payload_data <= basesoc_loopback_sink_payload_data;
		basesoc_loopback_source_valid <= basesoc_loopback_next_sink_valid;
		basesoc_loopback_next_sink_ready <= basesoc_loopback_source_ready;
		basesoc_loopback_source_first <= basesoc_loopback_next_sink_first;
		basesoc_loopback_source_last <= basesoc_loopback_next_sink_last;
		basesoc_loopback_source_payload_data <= basesoc_loopback_next_sink_payload_data;
	end
end
assign basesoc_buffering_reader_fifo_sink_first = basesoc_buffering_sink_sink_first;
assign basesoc_buffering_reader_fifo_sink_last = basesoc_buffering_sink_sink_last;
assign basesoc_buffering_reader_fifo_sink_payload_data = basesoc_buffering_sink_sink_payload_data;
always @(*) begin
	basesoc_buffering_reader_fifo_sink_valid <= 1'd0;
	basesoc_buffering_sink_sink_ready <= 1'd0;
	if (((basesoc_buffering_reader_fifo_level1 < basesoc_buffering_csrfield_depth0[10:4]) | 1'd0)) begin
		basesoc_buffering_reader_fifo_sink_valid <= basesoc_buffering_sink_sink_valid;
		basesoc_buffering_sink_sink_ready <= basesoc_buffering_reader_fifo_sink_ready;
	end
end
assign basesoc_buffering_next_source_valid = basesoc_buffering_reader_fifo_source_valid;
assign basesoc_buffering_reader_fifo_source_ready = basesoc_buffering_next_source_ready;
assign basesoc_buffering_next_source_first = basesoc_buffering_reader_fifo_source_first;
assign basesoc_buffering_next_source_last = basesoc_buffering_reader_fifo_source_last;
assign basesoc_buffering_next_source_payload_data = basesoc_buffering_reader_fifo_source_payload_data;
always @(*) begin
	basesoc_buffering_csrfield_level0 <= 11'd0;
	if ((basesoc_buffering_csrfield_level_mode0 == 1'd0)) begin
		basesoc_buffering_csrfield_level0[10:4] <= basesoc_buffering_reader_fifo_level1;
	end else begin
		basesoc_buffering_csrfield_level0[10:4] <= basesoc_buffering_reader_fifo_level_min;
	end
end
assign basesoc_buffering_writer_fifo_sink_first = basesoc_buffering_next_sink_first;
assign basesoc_buffering_writer_fifo_sink_last = basesoc_buffering_next_sink_last;
assign basesoc_buffering_writer_fifo_sink_payload_data = basesoc_buffering_next_sink_payload_data;
always @(*) begin
	basesoc_buffering_next_sink_ready <= 1'd0;
	basesoc_buffering_writer_fifo_sink_valid <= 1'd0;
	if (((basesoc_buffering_writer_fifo_level1 < basesoc_buffering_csrfield_depth1[10:4]) | 1'd0)) begin
		basesoc_buffering_writer_fifo_sink_valid <= basesoc_buffering_next_sink_valid;
		basesoc_buffering_next_sink_ready <= basesoc_buffering_writer_fifo_sink_ready;
	end
end
assign basesoc_buffering_source_source_valid = basesoc_buffering_writer_fifo_source_valid;
assign basesoc_buffering_writer_fifo_source_ready = basesoc_buffering_source_source_ready;
assign basesoc_buffering_source_source_first = basesoc_buffering_writer_fifo_source_first;
assign basesoc_buffering_source_source_last = basesoc_buffering_writer_fifo_source_last;
assign basesoc_buffering_source_source_payload_data = basesoc_buffering_writer_fifo_source_payload_data;
always @(*) begin
	basesoc_buffering_csrfield_level1 <= 11'd0;
	if ((basesoc_buffering_csrfield_level_mode1 == 1'd0)) begin
		basesoc_buffering_csrfield_level1[10:4] <= basesoc_buffering_writer_fifo_level1;
	end else begin
		basesoc_buffering_csrfield_level1[10:4] <= basesoc_buffering_writer_fifo_level_max;
	end
end
assign basesoc_buffering_reader_fifo_syncfifo_din = {basesoc_buffering_reader_fifo_fifo_in_last, basesoc_buffering_reader_fifo_fifo_in_first, basesoc_buffering_reader_fifo_fifo_in_payload_data};
assign {basesoc_buffering_reader_fifo_fifo_out_last, basesoc_buffering_reader_fifo_fifo_out_first, basesoc_buffering_reader_fifo_fifo_out_payload_data} = basesoc_buffering_reader_fifo_syncfifo_dout;
assign basesoc_buffering_reader_fifo_sink_ready = basesoc_buffering_reader_fifo_syncfifo_writable;
assign basesoc_buffering_reader_fifo_syncfifo_we = basesoc_buffering_reader_fifo_sink_valid;
assign basesoc_buffering_reader_fifo_fifo_in_first = basesoc_buffering_reader_fifo_sink_first;
assign basesoc_buffering_reader_fifo_fifo_in_last = basesoc_buffering_reader_fifo_sink_last;
assign basesoc_buffering_reader_fifo_fifo_in_payload_data = basesoc_buffering_reader_fifo_sink_payload_data;
assign basesoc_buffering_reader_fifo_source_valid = basesoc_buffering_reader_fifo_readable;
assign basesoc_buffering_reader_fifo_source_first = basesoc_buffering_reader_fifo_fifo_out_first;
assign basesoc_buffering_reader_fifo_source_last = basesoc_buffering_reader_fifo_fifo_out_last;
assign basesoc_buffering_reader_fifo_source_payload_data = basesoc_buffering_reader_fifo_fifo_out_payload_data;
assign basesoc_buffering_reader_fifo_re = basesoc_buffering_reader_fifo_source_ready;
assign basesoc_buffering_reader_fifo_syncfifo_re = (basesoc_buffering_reader_fifo_syncfifo_readable & ((~basesoc_buffering_reader_fifo_readable) | basesoc_buffering_reader_fifo_re));
assign basesoc_buffering_reader_fifo_level1 = (basesoc_buffering_reader_fifo_level0 + basesoc_buffering_reader_fifo_readable);
always @(*) begin
	basesoc_buffering_reader_fifo_wrport_adr <= 6'd0;
	if (basesoc_buffering_reader_fifo_replace) begin
		basesoc_buffering_reader_fifo_wrport_adr <= (basesoc_buffering_reader_fifo_produce - 1'd1);
	end else begin
		basesoc_buffering_reader_fifo_wrport_adr <= basesoc_buffering_reader_fifo_produce;
	end
end
assign basesoc_buffering_reader_fifo_wrport_dat_w = basesoc_buffering_reader_fifo_syncfifo_din;
assign basesoc_buffering_reader_fifo_wrport_we = (basesoc_buffering_reader_fifo_syncfifo_we & (basesoc_buffering_reader_fifo_syncfifo_writable | basesoc_buffering_reader_fifo_replace));
assign basesoc_buffering_reader_fifo_do_read = (basesoc_buffering_reader_fifo_syncfifo_readable & basesoc_buffering_reader_fifo_syncfifo_re);
assign basesoc_buffering_reader_fifo_rdport_adr = basesoc_buffering_reader_fifo_consume;
assign basesoc_buffering_reader_fifo_syncfifo_dout = basesoc_buffering_reader_fifo_rdport_dat_r;
assign basesoc_buffering_reader_fifo_rdport_re = basesoc_buffering_reader_fifo_do_read;
assign basesoc_buffering_reader_fifo_syncfifo_writable = (basesoc_buffering_reader_fifo_level0 != 7'd64);
assign basesoc_buffering_reader_fifo_syncfifo_readable = (basesoc_buffering_reader_fifo_level0 != 1'd0);
assign basesoc_buffering_writer_fifo_syncfifo_din = {basesoc_buffering_writer_fifo_fifo_in_last, basesoc_buffering_writer_fifo_fifo_in_first, basesoc_buffering_writer_fifo_fifo_in_payload_data};
assign {basesoc_buffering_writer_fifo_fifo_out_last, basesoc_buffering_writer_fifo_fifo_out_first, basesoc_buffering_writer_fifo_fifo_out_payload_data} = basesoc_buffering_writer_fifo_syncfifo_dout;
assign basesoc_buffering_writer_fifo_sink_ready = basesoc_buffering_writer_fifo_syncfifo_writable;
assign basesoc_buffering_writer_fifo_syncfifo_we = basesoc_buffering_writer_fifo_sink_valid;
assign basesoc_buffering_writer_fifo_fifo_in_first = basesoc_buffering_writer_fifo_sink_first;
assign basesoc_buffering_writer_fifo_fifo_in_last = basesoc_buffering_writer_fifo_sink_last;
assign basesoc_buffering_writer_fifo_fifo_in_payload_data = basesoc_buffering_writer_fifo_sink_payload_data;
assign basesoc_buffering_writer_fifo_source_valid = basesoc_buffering_writer_fifo_readable;
assign basesoc_buffering_writer_fifo_source_first = basesoc_buffering_writer_fifo_fifo_out_first;
assign basesoc_buffering_writer_fifo_source_last = basesoc_buffering_writer_fifo_fifo_out_last;
assign basesoc_buffering_writer_fifo_source_payload_data = basesoc_buffering_writer_fifo_fifo_out_payload_data;
assign basesoc_buffering_writer_fifo_re = basesoc_buffering_writer_fifo_source_ready;
assign basesoc_buffering_writer_fifo_syncfifo_re = (basesoc_buffering_writer_fifo_syncfifo_readable & ((~basesoc_buffering_writer_fifo_readable) | basesoc_buffering_writer_fifo_re));
assign basesoc_buffering_writer_fifo_level1 = (basesoc_buffering_writer_fifo_level0 + basesoc_buffering_writer_fifo_readable);
always @(*) begin
	basesoc_buffering_writer_fifo_wrport_adr <= 6'd0;
	if (basesoc_buffering_writer_fifo_replace) begin
		basesoc_buffering_writer_fifo_wrport_adr <= (basesoc_buffering_writer_fifo_produce - 1'd1);
	end else begin
		basesoc_buffering_writer_fifo_wrport_adr <= basesoc_buffering_writer_fifo_produce;
	end
end
assign basesoc_buffering_writer_fifo_wrport_dat_w = basesoc_buffering_writer_fifo_syncfifo_din;
assign basesoc_buffering_writer_fifo_wrport_we = (basesoc_buffering_writer_fifo_syncfifo_we & (basesoc_buffering_writer_fifo_syncfifo_writable | basesoc_buffering_writer_fifo_replace));
assign basesoc_buffering_writer_fifo_do_read = (basesoc_buffering_writer_fifo_syncfifo_readable & basesoc_buffering_writer_fifo_syncfifo_re);
assign basesoc_buffering_writer_fifo_rdport_adr = basesoc_buffering_writer_fifo_consume;
assign basesoc_buffering_writer_fifo_syncfifo_dout = basesoc_buffering_writer_fifo_rdport_dat_r;
assign basesoc_buffering_writer_fifo_rdport_re = basesoc_buffering_writer_fifo_do_read;
assign basesoc_buffering_writer_fifo_syncfifo_writable = (basesoc_buffering_writer_fifo_level0 != 7'd64);
assign basesoc_buffering_writer_fifo_syncfifo_readable = (basesoc_buffering_writer_fifo_level0 != 1'd0);
assign icap_reset = (~(icap_write | icap_read));
assign icap_i_icape2 = {{slice_proxy65[0], slice_proxy64[1], slice_proxy63[2], slice_proxy62[3], slice_proxy61[4], slice_proxy60[5], slice_proxy59[6], slice_proxy58[7]}, {slice_proxy57[0], slice_proxy56[1], slice_proxy55[2], slice_proxy54[3], slice_proxy53[4], slice_proxy52[5], slice_proxy51[6], slice_proxy50[7]}, {slice_proxy49[0], slice_proxy48[1], slice_proxy47[2], slice_proxy46[3], slice_proxy45[4], slice_proxy44[5], slice_proxy43[6], slice_proxy42[7]}, {slice_proxy41[0], slice_proxy40[1], slice_proxy39[2], slice_proxy38[3], slice_proxy37[4], slice_proxy36[5], slice_proxy35[6], slice_proxy34[7]}};
assign icap__o = {{slice_proxy97[0], slice_proxy96[1], slice_proxy95[2], slice_proxy94[3], slice_proxy93[4], slice_proxy92[5], slice_proxy91[6], slice_proxy90[7]}, {slice_proxy89[0], slice_proxy88[1], slice_proxy87[2], slice_proxy86[3], slice_proxy85[4], slice_proxy84[5], slice_proxy83[6], slice_proxy82[7]}, {slice_proxy81[0], slice_proxy80[1], slice_proxy79[2], slice_proxy78[3], slice_proxy77[4], slice_proxy76[5], slice_proxy75[6], slice_proxy74[7]}, {slice_proxy73[0], slice_proxy72[1], slice_proxy71[2], slice_proxy70[3], slice_proxy69[4], slice_proxy68[5], slice_proxy67[6], slice_proxy66[7]}};
assign icap_done_status = icap_done;
assign icap_read = icap_read_storage;
always @(*) begin
	icap_data_we <= 1'd0;
	icap_data_dat_w <= 32'd0;
	if (icap_done) begin
		icap_data_we <= 1'd1;
		icap_data_dat_w <= icap_read_data;
	end
end
always @(*) begin
	icap_count_icap_next_value0 <= 4'd0;
	icap_count_icap_next_value_ce0 <= 1'd0;
	icap_csib <= 1'd1;
	icap_rdwrb <= 1'd0;
	icap__i <= 32'd0;
	icap_done <= 1'd0;
	icap_read_data_icap_next_value1 <= 32'd0;
	icap_read_data_icap_next_value_ce1 <= 1'd0;
	subfragments_resetinserter_next_state <= 3'd0;
	subfragments_resetinserter_next_state <= subfragments_resetinserter_state;
	case (subfragments_resetinserter_state)
		1'd1: begin
			icap_csib <= 1'd0;
			icap_rdwrb <= 1'd0;
			case (icap_count)
				1'd0: begin
					icap__i <= 30'd536870912;
				end
				1'd1: begin
					icap__i <= 32'd2862175590;
				end
				2'd2: begin
					icap__i <= 30'd536870912;
				end
				2'd3: begin
					icap__i <= 30'd536870912;
				end
			endcase
			icap_count_icap_next_value0 <= (icap_count + 1'd1);
			icap_count_icap_next_value_ce0 <= 1'd1;
			if ((icap_count == 2'd3)) begin
				icap_count_icap_next_value0 <= 1'd0;
				icap_count_icap_next_value_ce0 <= 1'd1;
				if (icap_write) begin
					subfragments_resetinserter_next_state <= 2'd2;
				end else begin
					subfragments_resetinserter_next_state <= 2'd3;
				end
			end
		end
		2'd2: begin
			icap_csib <= 1'd0;
			icap_rdwrb <= 1'd0;
			case (icap_count)
				1'd0: begin
					icap__i <= ((30'd805306368 | (icap_addr <<< 4'd13)) | 1'd1);
				end
				1'd1: begin
					icap__i <= icap_write_data;
				end
				2'd2: begin
					icap__i <= 30'd536870912;
				end
				2'd3: begin
					icap__i <= 30'd536870912;
				end
			endcase
			icap_count_icap_next_value0 <= (icap_count + 1'd1);
			icap_count_icap_next_value_ce0 <= 1'd1;
			if ((icap_count == 2'd3)) begin
				icap_count_icap_next_value0 <= 1'd0;
				icap_count_icap_next_value_ce0 <= 1'd1;
				subfragments_resetinserter_next_state <= 3'd4;
			end
		end
		2'd3: begin
			icap_csib <= 1'd0;
			icap_rdwrb <= 1'd0;
			case (icap_count)
				1'd0: begin
					icap__i <= ((30'd671088640 | (icap_addr <<< 4'd13)) | 1'd1);
				end
				1'd1: begin
					icap__i <= 30'd536870912;
				end
				2'd2: begin
					icap__i <= 30'd536870912;
				end
				2'd3: begin
					icap_csib <= 1'd1;
					icap_rdwrb <= 1'd1;
					icap__i <= 30'd536870912;
				end
				3'd4: begin
					icap_csib <= 1'd0;
					icap_rdwrb <= 1'd1;
					icap__i <= 30'd536870912;
				end
				3'd5: begin
					icap_csib <= 1'd0;
					icap_rdwrb <= 1'd1;
					icap__i <= 30'd536870912;
				end
				3'd6: begin
					icap_csib <= 1'd0;
					icap_rdwrb <= 1'd1;
					icap__i <= 30'd536870912;
				end
				3'd7: begin
					icap_csib <= 1'd0;
					icap_rdwrb <= 1'd1;
					icap__i <= 30'd536870912;
				end
				4'd8: begin
					icap_csib <= 1'd0;
					icap_rdwrb <= 1'd1;
					icap__i <= 30'd536870912;
				end
			endcase
			icap_count_icap_next_value0 <= (icap_count + 1'd1);
			icap_count_icap_next_value_ce0 <= 1'd1;
			if ((icap_count == 3'd7)) begin
				icap_read_data_icap_next_value1 <= icap__o;
				icap_read_data_icap_next_value_ce1 <= 1'd1;
				icap_count_icap_next_value0 <= 1'd0;
				icap_count_icap_next_value_ce0 <= 1'd1;
				subfragments_resetinserter_next_state <= 3'd4;
			end
		end
		3'd4: begin
			icap_csib <= 1'd0;
			icap_rdwrb <= 1'd0;
			case (icap_count)
				1'd0: begin
					icap__i <= 30'd805339137;
				end
				1'd1: begin
					icap__i <= 4'd13;
				end
				2'd2: begin
					icap__i <= 30'd536870912;
				end
				2'd3: begin
					icap__i <= 30'd536870912;
				end
			endcase
			icap_count_icap_next_value0 <= (icap_count + 1'd1);
			icap_count_icap_next_value_ce0 <= 1'd1;
			if ((icap_count == 2'd3)) begin
				icap_count_icap_next_value0 <= 1'd0;
				icap_count_icap_next_value_ce0 <= 1'd1;
				subfragments_resetinserter_next_state <= 3'd5;
			end
		end
		3'd5: begin
			icap_csib <= 1'd1;
			icap_rdwrb <= 1'd0;
			icap__i <= 32'd4294967295;
			icap_done <= 1'd1;
		end
		default: begin
			icap_csib <= 1'd1;
			icap_rdwrb <= 1'd0;
			icap__i <= 32'd4294967295;
			if ((icap_write | icap_read)) begin
				icap_count_icap_next_value0 <= 1'd0;
				icap_count_icap_next_value_ce0 <= 1'd1;
				subfragments_resetinserter_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	subfragments_fsm_next_state <= 1'd0;
	icap_addr <= 5'd0;
	icap_write_data <= 32'd0;
	icap_write <= 1'd0;
	icap_addr <= icap_addr_storage;
	icap_write_data <= icap_data_storage;
	icap_write <= icap_write_storage;
	subfragments_fsm_next_state <= subfragments_fsm_state;
	case (subfragments_fsm_state)
		1'd1: begin
			icap_addr <= 3'd4;
			icap_write <= 1'd1;
			icap_write_data <= 4'd15;
		end
		default: begin
			if (icap_reload) begin
				subfragments_fsm_next_state <= 1'd1;
			end
		end
	endcase
end
assign flash_cs_n = flash_cs_n_storage;
assign flash_mosi = flash_pads_mosi;
assign flash_pads_miso = flash_miso;
assign flash_start0 = flash_start1;
assign flash_length0 = flash_length1;
assign flash_done1 = flash_done0;
assign flash_mosi_1 = flash_mosi_storage;
assign flash_miso_status = flash_miso_1;
assign flash_cs = flash_sel;
assign flash_cs_mode = flash_mode0;
assign flash_loopback = flash_mode1;
assign flash_clk_rise = (flash_clk_divider1 == (flash_clk_divider0[15:1] - 1'd1));
assign flash_clk_fall = (flash_clk_divider1 == (flash_clk_divider0 - 1'd1));
always @(*) begin
	flash_count_s7spiflash_next_value_ce <= 1'd0;
	flash_done0 <= 1'd0;
	flash_irq <= 1'd0;
	flash_clk_enable <= 1'd0;
	flash_xfer_enable <= 1'd0;
	flash_mosi_latch <= 1'd0;
	flash_miso_latch <= 1'd0;
	subfragments_s7spiflash_next_state <= 2'd0;
	flash_count_s7spiflash_next_value <= 6'd0;
	subfragments_s7spiflash_next_state <= subfragments_s7spiflash_state;
	case (subfragments_s7spiflash_state)
		1'd1: begin
			flash_count_s7spiflash_next_value <= 1'd0;
			flash_count_s7spiflash_next_value_ce <= 1'd1;
			if (flash_clk_fall) begin
				flash_xfer_enable <= 1'd1;
				subfragments_s7spiflash_next_state <= 2'd2;
			end
		end
		2'd2: begin
			flash_clk_enable <= 1'd1;
			flash_xfer_enable <= 1'd1;
			if (flash_clk_fall) begin
				flash_count_s7spiflash_next_value <= (flash_count + 1'd1);
				flash_count_s7spiflash_next_value_ce <= 1'd1;
				if ((flash_count == (flash_length0 - 1'd1))) begin
					subfragments_s7spiflash_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			flash_xfer_enable <= 1'd1;
			if (flash_clk_rise) begin
				flash_miso_latch <= 1'd1;
				flash_irq <= 1'd1;
				subfragments_s7spiflash_next_state <= 1'd0;
			end
		end
		default: begin
			flash_done0 <= 1'd1;
			if (flash_start0) begin
				flash_done0 <= 1'd0;
				flash_mosi_latch <= 1'd1;
				subfragments_s7spiflash_next_state <= 1'd1;
			end
		end
	endcase
end
assign leds_wait = (~leds_done);
always @(*) begin
	user_led2 <= 1'd0;
	user_led3 <= 1'd0;
	user_led0 <= 1'd0;
	user_led1 <= 1'd0;
	if ((leds_mode == 1'd1)) begin
		{user_led3, user_led2, user_led1, user_led0} <= leds_storage;
	end else begin
		{user_led3, user_led2, user_led1, user_led0} <= leds_chaser;
	end
end
assign leds_done = (leds_count == 1'd0);
always @(*) begin
	basesoc_basesoc_wishbone_ack <= 1'd0;
	basesoc_next_state <= 2'd0;
	basesoc_basesoc_dat_w_next_value0 <= 32'd0;
	basesoc_basesoc_dat_w_next_value_ce0 <= 1'd0;
	basesoc_basesoc_adr_next_value1 <= 14'd0;
	basesoc_basesoc_adr_next_value_ce1 <= 1'd0;
	basesoc_basesoc_we_next_value2 <= 1'd0;
	basesoc_basesoc_wishbone_dat_r <= 32'd0;
	basesoc_basesoc_we_next_value_ce2 <= 1'd0;
	basesoc_next_state <= basesoc_state;
	case (basesoc_state)
		1'd1: begin
			basesoc_basesoc_adr_next_value1 <= 1'd0;
			basesoc_basesoc_adr_next_value_ce1 <= 1'd1;
			basesoc_basesoc_we_next_value2 <= 1'd0;
			basesoc_basesoc_we_next_value_ce2 <= 1'd1;
			basesoc_next_state <= 2'd2;
		end
		2'd2: begin
			basesoc_basesoc_wishbone_ack <= 1'd1;
			basesoc_basesoc_wishbone_dat_r <= basesoc_basesoc_dat_r;
			basesoc_next_state <= 1'd0;
		end
		default: begin
			basesoc_basesoc_dat_w_next_value0 <= basesoc_basesoc_wishbone_dat_w;
			basesoc_basesoc_dat_w_next_value_ce0 <= 1'd1;
			if ((basesoc_basesoc_wishbone_cyc & basesoc_basesoc_wishbone_stb)) begin
				basesoc_basesoc_adr_next_value1 <= basesoc_basesoc_wishbone_adr;
				basesoc_basesoc_adr_next_value_ce1 <= 1'd1;
				basesoc_basesoc_we_next_value2 <= (basesoc_basesoc_wishbone_we & (basesoc_basesoc_wishbone_sel != 1'd0));
				basesoc_basesoc_we_next_value_ce2 <= 1'd1;
				basesoc_next_state <= 1'd1;
			end
		end
	endcase
end
assign basesoc_shared_adr = comb_rhs_array_muxed36;
assign basesoc_shared_dat_w = comb_rhs_array_muxed37;
assign basesoc_shared_sel = comb_rhs_array_muxed38;
assign basesoc_shared_cyc = comb_rhs_array_muxed39;
assign basesoc_shared_stb = comb_rhs_array_muxed40;
assign basesoc_shared_we = comb_rhs_array_muxed41;
assign basesoc_shared_cti = comb_rhs_array_muxed42;
assign basesoc_shared_bte = comb_rhs_array_muxed43;
assign basesoc_basesoc_ibus_dat_r = basesoc_shared_dat_r;
assign basesoc_basesoc_dbus_dat_r = basesoc_shared_dat_r;
assign basesoc_mmap_wishbone_dat_r = basesoc_shared_dat_r;
assign basesoc_basesoc_ibus_ack = (basesoc_shared_ack & (basesoc_grant == 1'd0));
assign basesoc_basesoc_dbus_ack = (basesoc_shared_ack & (basesoc_grant == 1'd1));
assign basesoc_mmap_wishbone_ack = (basesoc_shared_ack & (basesoc_grant == 2'd2));
assign basesoc_basesoc_ibus_err = (basesoc_shared_err & (basesoc_grant == 1'd0));
assign basesoc_basesoc_dbus_err = (basesoc_shared_err & (basesoc_grant == 1'd1));
assign basesoc_mmap_wishbone_err = (basesoc_shared_err & (basesoc_grant == 2'd2));
assign basesoc_request = {basesoc_mmap_wishbone_cyc, basesoc_basesoc_dbus_cyc, basesoc_basesoc_ibus_cyc};
always @(*) begin
	basesoc_slave_sel <= 4'd0;
	basesoc_slave_sel[0] <= (basesoc_shared_adr[29:15] == 1'd0);
	basesoc_slave_sel[1] <= (basesoc_shared_adr[29:11] == 16'd32768);
	basesoc_slave_sel[2] <= (basesoc_shared_adr[29:28] == 1'd1);
	basesoc_slave_sel[3] <= (basesoc_shared_adr[29:14] == 16'd61440);
end
assign basesoc_basesoc_basesoc_ram_bus_adr = basesoc_shared_adr;
assign basesoc_basesoc_basesoc_ram_bus_dat_w = basesoc_shared_dat_w;
assign basesoc_basesoc_basesoc_ram_bus_sel = basesoc_shared_sel;
assign basesoc_basesoc_basesoc_ram_bus_stb = basesoc_shared_stb;
assign basesoc_basesoc_basesoc_ram_bus_we = basesoc_shared_we;
assign basesoc_basesoc_basesoc_ram_bus_cti = basesoc_shared_cti;
assign basesoc_basesoc_basesoc_ram_bus_bte = basesoc_shared_bte;
assign basesoc_basesoc_ram_bus_ram_bus_adr = basesoc_shared_adr;
assign basesoc_basesoc_ram_bus_ram_bus_dat_w = basesoc_shared_dat_w;
assign basesoc_basesoc_ram_bus_ram_bus_sel = basesoc_shared_sel;
assign basesoc_basesoc_ram_bus_ram_bus_stb = basesoc_shared_stb;
assign basesoc_basesoc_ram_bus_ram_bus_we = basesoc_shared_we;
assign basesoc_basesoc_ram_bus_ram_bus_cti = basesoc_shared_cti;
assign basesoc_basesoc_ram_bus_ram_bus_bte = basesoc_shared_bte;
assign basesoc_wb_sdram_adr = basesoc_shared_adr;
assign basesoc_wb_sdram_dat_w = basesoc_shared_dat_w;
assign basesoc_wb_sdram_sel = basesoc_shared_sel;
assign basesoc_wb_sdram_stb = basesoc_shared_stb;
assign basesoc_wb_sdram_we = basesoc_shared_we;
assign basesoc_wb_sdram_cti = basesoc_shared_cti;
assign basesoc_wb_sdram_bte = basesoc_shared_bte;
assign basesoc_basesoc_wishbone_adr = basesoc_shared_adr;
assign basesoc_basesoc_wishbone_dat_w = basesoc_shared_dat_w;
assign basesoc_basesoc_wishbone_sel = basesoc_shared_sel;
assign basesoc_basesoc_wishbone_stb = basesoc_shared_stb;
assign basesoc_basesoc_wishbone_we = basesoc_shared_we;
assign basesoc_basesoc_wishbone_cti = basesoc_shared_cti;
assign basesoc_basesoc_wishbone_bte = basesoc_shared_bte;
assign basesoc_basesoc_basesoc_ram_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[0]);
assign basesoc_basesoc_ram_bus_ram_bus_cyc = (basesoc_shared_cyc & basesoc_slave_sel[1]);
assign basesoc_wb_sdram_cyc = (basesoc_shared_cyc & basesoc_slave_sel[2]);
assign basesoc_basesoc_wishbone_cyc = (basesoc_shared_cyc & basesoc_slave_sel[3]);
assign basesoc_shared_err = (((basesoc_basesoc_basesoc_ram_bus_err | basesoc_basesoc_ram_bus_ram_bus_err) | basesoc_wb_sdram_err) | basesoc_basesoc_wishbone_err);
assign basesoc_wait = ((basesoc_shared_stb & basesoc_shared_cyc) & (~basesoc_shared_ack));
always @(*) begin
	basesoc_error <= 1'd0;
	basesoc_shared_dat_r <= 32'd0;
	basesoc_shared_ack <= 1'd0;
	basesoc_shared_ack <= (((basesoc_basesoc_basesoc_ram_bus_ack | basesoc_basesoc_ram_bus_ram_bus_ack) | basesoc_wb_sdram_ack) | basesoc_basesoc_wishbone_ack);
	basesoc_shared_dat_r <= (((({32{basesoc_slave_sel_r[0]}} & basesoc_basesoc_basesoc_ram_bus_dat_r) | ({32{basesoc_slave_sel_r[1]}} & basesoc_basesoc_ram_bus_ram_bus_dat_r)) | ({32{basesoc_slave_sel_r[2]}} & basesoc_wb_sdram_dat_r)) | ({32{basesoc_slave_sel_r[3]}} & basesoc_basesoc_wishbone_dat_r));
	if (basesoc_done) begin
		basesoc_shared_dat_r <= 32'd4294967295;
		basesoc_shared_ack <= 1'd1;
		basesoc_error <= 1'd1;
	end
end
assign basesoc_done = (basesoc_count == 1'd0);
assign basesoc_csr_bankarray_csrbank0_sel = (basesoc_csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign basesoc_csr_bankarray_csrbank0_reset0_r = basesoc_csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank0_reset0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank0_reset0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank0_sel & (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank0_reset0_re <= basesoc_csr_bankarray_interface0_bank_bus_we;
		basesoc_csr_bankarray_csrbank0_reset0_we <= (~basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank0_scratch0_r = basesoc_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank0_scratch0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank0_scratch0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank0_sel & (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank0_scratch0_re <= basesoc_csr_bankarray_interface0_bank_bus_we;
		basesoc_csr_bankarray_csrbank0_scratch0_we <= (~basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank0_bus_errors_r = basesoc_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
	basesoc_csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank0_sel & (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank0_bus_errors_re <= basesoc_csr_bankarray_interface0_bank_bus_we;
		basesoc_csr_bankarray_csrbank0_bus_errors_we <= (~basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
always @(*) begin
	basesoc_basesoc_soc_rst <= 1'd0;
	if (basesoc_basesoc_reset_re) begin
		basesoc_basesoc_soc_rst <= basesoc_basesoc_reset_storage[0];
	end
end
assign basesoc_basesoc_cpu_rst = basesoc_basesoc_reset_storage[1];
assign basesoc_csr_bankarray_csrbank0_reset0_w = basesoc_basesoc_reset_storage[1:0];
assign basesoc_csr_bankarray_csrbank0_scratch0_w = basesoc_basesoc_scratch_storage[31:0];
assign basesoc_csr_bankarray_csrbank0_bus_errors_w = basesoc_basesoc_bus_errors_status[31:0];
assign basesoc_basesoc_bus_errors_we = basesoc_csr_bankarray_csrbank0_bus_errors_we;
assign basesoc_csr_bankarray_csrbank1_sel = (basesoc_csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign basesoc_csr_bankarray_csrbank1_rst0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_rst0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank1_rst0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank1_rst0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_rst0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[4:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_wlevel_en0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_wlevel_en0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank1_wlevel_en0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank1_wlevel_en0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_wlevel_en0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_wlevel_strobe_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_wlevel_strobe_we <= 1'd0;
	a7ddrphy_wlevel_strobe_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
		a7ddrphy_wlevel_strobe_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_wlevel_strobe_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_dly_sel0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_dly_sel0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank1_dly_sel0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank1_dly_sel0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_dly_sel0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_rst_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_rst_we <= 1'd0;
	a7ddrphy_rdly_dq_rst_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
		a7ddrphy_rdly_dq_rst_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_rst_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_inc_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_inc_we <= 1'd0;
	a7ddrphy_rdly_dq_inc_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
		a7ddrphy_rdly_dq_inc_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_inc_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_bitslip_rst_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
	a7ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd7))) begin
		a7ddrphy_rdly_dq_bitslip_rst_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_bitslip_rst_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_rdly_dq_bitslip_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_rdly_dq_bitslip_re <= 1'd0;
	a7ddrphy_rdly_dq_bitslip_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd8))) begin
		a7ddrphy_rdly_dq_bitslip_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_rdly_dq_bitslip_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_wdly_dq_bitslip_rst_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_wdly_dq_bitslip_rst_re <= 1'd0;
	a7ddrphy_wdly_dq_bitslip_rst_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd9))) begin
		a7ddrphy_wdly_dq_bitslip_rst_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_wdly_dq_bitslip_rst_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign a7ddrphy_wdly_dq_bitslip_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	a7ddrphy_wdly_dq_bitslip_re <= 1'd0;
	a7ddrphy_wdly_dq_bitslip_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd10))) begin
		a7ddrphy_wdly_dq_bitslip_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		a7ddrphy_wdly_dq_bitslip_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_rdphase0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_rdphase0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank1_rdphase0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd11))) begin
		basesoc_csr_bankarray_csrbank1_rdphase0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_rdphase0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_wrphase0_r = basesoc_csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank1_wrphase0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank1_wrphase0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank1_sel & (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd12))) begin
		basesoc_csr_bankarray_csrbank1_wrphase0_re <= basesoc_csr_bankarray_interface1_bank_bus_we;
		basesoc_csr_bankarray_csrbank1_wrphase0_we <= (~basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank1_rst0_w = a7ddrphy_rst_storage;
assign basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_w = a7ddrphy_half_sys8x_taps_storage[4:0];
assign basesoc_csr_bankarray_csrbank1_wlevel_en0_w = a7ddrphy_wlevel_en_storage;
assign basesoc_csr_bankarray_csrbank1_dly_sel0_w = a7ddrphy_dly_sel_storage[1:0];
assign basesoc_csr_bankarray_csrbank1_rdphase0_w = a7ddrphy_rdphase_storage[1:0];
assign basesoc_csr_bankarray_csrbank1_wrphase0_w = a7ddrphy_wrphase_storage[1:0];
assign basesoc_csr_bankarray_csrbank2_sel = (basesoc_csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd2);
assign basesoc_csr_bankarray_csrbank2_spi_control0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_control0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_control0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank2_spi_control0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_control0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_status_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank2_spi_status_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_status_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_mosi1_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_mosi1_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_mosi1_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank2_spi_mosi1_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_mosi1_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_mosi0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_mosi0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_mosi0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank2_spi_mosi0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_mosi0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_miso1_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_miso1_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_miso1_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank2_spi_miso1_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_miso1_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_miso0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_miso0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_miso0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank2_spi_miso0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_miso0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_cs0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[16:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_cs0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_cs0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank2_spi_cs0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_cs0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank2_spi_loopback0_r = basesoc_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank2_spi_loopback0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank2_spi_loopback0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank2_sel & (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank2_spi_loopback0_re <= basesoc_csr_bankarray_interface2_bank_bus_we;
		basesoc_csr_bankarray_csrbank2_spi_loopback0_we <= (~basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
always @(*) begin
	flash_start1 <= 1'd0;
	if (flash_control_re) begin
		flash_start1 <= flash_control_storage[0];
	end
end
assign flash_length1 = flash_control_storage[15:8];
assign basesoc_csr_bankarray_csrbank2_spi_control0_w = flash_control_storage[15:0];
assign flash_status_status = flash_done1;
assign basesoc_csr_bankarray_csrbank2_spi_status_w = flash_status_status;
assign flash_status_we = basesoc_csr_bankarray_csrbank2_spi_status_we;
assign basesoc_csr_bankarray_csrbank2_spi_mosi1_w = flash_mosi_storage[39:32];
assign basesoc_csr_bankarray_csrbank2_spi_mosi0_w = flash_mosi_storage[31:0];
assign basesoc_csr_bankarray_csrbank2_spi_miso1_w = flash_miso_status[39:32];
assign basesoc_csr_bankarray_csrbank2_spi_miso0_w = flash_miso_status[31:0];
assign flash_miso_we = basesoc_csr_bankarray_csrbank2_spi_miso0_we;
assign flash_sel = flash_cs_storage[0];
assign flash_mode0 = flash_cs_storage[16];
assign basesoc_csr_bankarray_csrbank2_spi_cs0_w = flash_cs_storage[16:0];
assign flash_mode1 = flash_loopback_storage;
assign basesoc_csr_bankarray_csrbank2_spi_loopback0_w = flash_loopback_storage;
assign basesoc_csr_bankarray_csrbank3_sel = (basesoc_csr_bankarray_interface3_bank_bus_adr[13:9] == 2'd3);
assign basesoc_csr_bankarray_csrbank3_out0_r = basesoc_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank3_out0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank3_out0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank3_sel & (basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank3_out0_re <= basesoc_csr_bankarray_interface3_bank_bus_we;
		basesoc_csr_bankarray_csrbank3_out0_we <= (~basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank3_out0_w = flash_cs_n_storage;
assign basesoc_csr_bankarray_csrbank4_sel = (basesoc_csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd4);
assign basesoc_csr_bankarray_csrbank4_addr0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[4:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_addr0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank4_addr0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank4_addr0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_addr0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_data0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_data0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_data0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank4_data0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_data0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_write0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_write0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_write0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank4_write0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_write0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_done_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_done_re <= 1'd0;
	basesoc_csr_bankarray_csrbank4_done_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank4_done_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_done_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_read0_r = basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank4_read0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank4_read0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank4_sel & (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank4_read0_re <= basesoc_csr_bankarray_interface4_bank_bus_we;
		basesoc_csr_bankarray_csrbank4_read0_we <= (~basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank4_addr0_w = icap_addr_storage[4:0];
assign basesoc_csr_bankarray_csrbank4_data0_w = icap_data_storage[31:0];
assign basesoc_csr_bankarray_csrbank4_write0_w = icap_write_storage;
assign basesoc_csr_bankarray_csrbank4_done_w = icap_done_status;
assign icap_done_we = basesoc_csr_bankarray_csrbank4_done_we;
assign basesoc_csr_bankarray_csrbank4_read0_w = icap_read_storage;
assign basesoc_csr_bankarray_sel = (basesoc_csr_bankarray_sram_bus_adr[13:9] == 3'd5);
always @(*) begin
	basesoc_csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (basesoc_csr_bankarray_sel_r) begin
		basesoc_csr_bankarray_sram_bus_dat_r <= basesoc_csr_bankarray_dat_r;
	end
end
assign basesoc_csr_bankarray_adr = basesoc_csr_bankarray_sram_bus_adr[5:0];
assign basesoc_csr_bankarray_csrbank5_sel = (basesoc_csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd6);
assign basesoc_csr_bankarray_csrbank5_out0_r = basesoc_csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank5_out0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank5_out0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank5_sel & (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank5_out0_re <= basesoc_csr_bankarray_interface5_bank_bus_we;
		basesoc_csr_bankarray_csrbank5_out0_we <= (~basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank5_out0_w = leds_storage[3:0];
assign basesoc_csr_bankarray_csrbank6_sel = (basesoc_csr_bankarray_interface6_bank_bus_adr[13:9] == 3'd7);
assign basesoc_csr_bankarray_csrbank6_writer_enable0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_enable0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_enable0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank6_writer_enable0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_enable0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_value1_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[25:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_value1_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_value1_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_value1_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_value1_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_value0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_value0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_value0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_value0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_value0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_we0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_we0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_we0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_we0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_we0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_loop_status_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_loop_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_loop_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_loop_status_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_loop_status_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_level_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[8:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_level_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_level_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_level_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_level_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_table_reset0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_writer_table_reset0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_writer_table_reset0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank6_writer_table_reset0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_writer_table_reset0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_enable0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_enable0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_enable0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd8))) begin
		basesoc_csr_bankarray_csrbank6_reader_enable0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_enable0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_value1_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[25:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_value1_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_value1_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd9))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_value1_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_value1_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_value0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_value0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_value0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd10))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_value0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_value0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_we0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_we0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_we0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd11))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_we0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_we0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd12))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_loop_status_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_loop_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_loop_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd13))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_loop_status_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_loop_status_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_level_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[8:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_level_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_level_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd14))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_level_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_level_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_reader_table_reset0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_reader_table_reset0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_reader_table_reset0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 4'd15))) begin
		basesoc_csr_bankarray_csrbank6_reader_table_reset0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_reader_table_reset0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_loopback_enable0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_loopback_enable0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_loopback_enable0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 5'd16))) begin
		basesoc_csr_bankarray_csrbank6_loopback_enable0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_loopback_enable0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 5'd17))) begin
		basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[10:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_re <= 1'd0;
	basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 5'd18))) begin
		basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 5'd19))) begin
		basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_r = basesoc_csr_bankarray_interface6_bank_bus_dat_w[10:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank6_sel & (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 5'd20))) begin
		basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_re <= basesoc_csr_bankarray_interface6_bank_bus_we;
		basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_we <= (~basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank6_writer_enable0_w = basesoc_writer_enable_storage;
assign basesoc_writer_address = basesoc_writer_value_storage[31:0];
assign basesoc_writer_length = basesoc_writer_value_storage[55:32];
assign basesoc_writer_irq_disable = basesoc_writer_value_storage[56];
assign basesoc_writer_last_disable = basesoc_writer_value_storage[57];
assign basesoc_csr_bankarray_csrbank6_writer_table_value1_w = basesoc_writer_value_storage[57:32];
assign basesoc_csr_bankarray_csrbank6_writer_table_value0_w = basesoc_writer_value_storage[31:0];
assign basesoc_csr_bankarray_csrbank6_writer_table_we0_w = basesoc_writer_we_storage;
assign basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_w = basesoc_writer_loop_prog_n_storage;
always @(*) begin
	basesoc_writer_loop_status_status <= 32'd0;
	basesoc_writer_loop_status_status[15:0] <= basesoc_writer_index;
	basesoc_writer_loop_status_status[31:16] <= basesoc_writer_count;
end
assign basesoc_csr_bankarray_csrbank6_writer_table_loop_status_w = basesoc_writer_loop_status_status[31:0];
assign basesoc_writer_loop_status_we = basesoc_csr_bankarray_csrbank6_writer_table_loop_status_we;
assign basesoc_csr_bankarray_csrbank6_writer_table_level_w = basesoc_writer_level_status[8:0];
assign basesoc_writer_level_we = basesoc_csr_bankarray_csrbank6_writer_table_level_we;
assign basesoc_csr_bankarray_csrbank6_writer_table_reset0_w = basesoc_writer_reset_storage;
assign basesoc_csr_bankarray_csrbank6_reader_enable0_w = basesoc_reader_enable_storage;
assign basesoc_reader_address = basesoc_reader_value_storage[31:0];
assign basesoc_reader_length = basesoc_reader_value_storage[55:32];
assign basesoc_reader_irq_disable = basesoc_reader_value_storage[56];
assign basesoc_reader_last_disable = basesoc_reader_value_storage[57];
assign basesoc_csr_bankarray_csrbank6_reader_table_value1_w = basesoc_reader_value_storage[57:32];
assign basesoc_csr_bankarray_csrbank6_reader_table_value0_w = basesoc_reader_value_storage[31:0];
assign basesoc_csr_bankarray_csrbank6_reader_table_we0_w = basesoc_reader_we_storage;
assign basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_w = basesoc_reader_loop_prog_n_storage;
always @(*) begin
	basesoc_reader_loop_status_status <= 32'd0;
	basesoc_reader_loop_status_status[15:0] <= basesoc_reader_index;
	basesoc_reader_loop_status_status[31:16] <= basesoc_reader_count;
end
assign basesoc_csr_bankarray_csrbank6_reader_table_loop_status_w = basesoc_reader_loop_status_status[31:0];
assign basesoc_reader_loop_status_we = basesoc_csr_bankarray_csrbank6_reader_table_loop_status_we;
assign basesoc_csr_bankarray_csrbank6_reader_table_level_w = basesoc_reader_level_status[8:0];
assign basesoc_reader_level_we = basesoc_csr_bankarray_csrbank6_reader_table_level_we;
assign basesoc_csr_bankarray_csrbank6_reader_table_reset0_w = basesoc_reader_reset_storage;
assign basesoc_csr_bankarray_csrbank6_loopback_enable0_w = basesoc_loopback_storage;
assign basesoc_buffering_csrfield_depth0 = basesoc_buffering_reader_fifo_control_storage[10:0];
assign basesoc_buffering_csrfield_scratch0 = basesoc_buffering_reader_fifo_control_storage[27:24];
assign basesoc_buffering_csrfield_level_mode0 = basesoc_buffering_reader_fifo_control_storage[31];
assign basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_w = basesoc_buffering_reader_fifo_control_storage[31:0];
assign basesoc_buffering_reader_fifo_status_status[10:0] = basesoc_buffering_csrfield_level0;
assign basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_w = basesoc_buffering_reader_fifo_status_status[10:0];
assign basesoc_buffering_reader_fifo_status_we = basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_we;
assign basesoc_buffering_csrfield_depth1 = basesoc_buffering_writer_fifo_control_storage[10:0];
assign basesoc_buffering_csrfield_scratch1 = basesoc_buffering_writer_fifo_control_storage[27:24];
assign basesoc_buffering_csrfield_level_mode1 = basesoc_buffering_writer_fifo_control_storage[31];
assign basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_w = basesoc_buffering_writer_fifo_control_storage[31:0];
assign basesoc_buffering_writer_fifo_status_status[10:0] = basesoc_buffering_csrfield_level1;
assign basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_w = basesoc_buffering_writer_fifo_status_status[10:0];
assign basesoc_buffering_writer_fifo_status_we = basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_we;
assign basesoc_csr_bankarray_csrbank7_sel = (basesoc_csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd8);
assign basesoc_csr_bankarray_csrbank7_enable0_r = basesoc_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank7_enable0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank7_enable0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank7_sel & (basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank7_enable0_re <= basesoc_csr_bankarray_interface7_bank_bus_we;
		basesoc_csr_bankarray_csrbank7_enable0_we <= (~basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank7_clear0_r = basesoc_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank7_clear0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank7_clear0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank7_sel & (basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank7_clear0_re <= basesoc_csr_bankarray_interface7_bank_bus_we;
		basesoc_csr_bankarray_csrbank7_clear0_we <= (~basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank7_vector_r = basesoc_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank7_vector_re <= 1'd0;
	basesoc_csr_bankarray_csrbank7_vector_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank7_sel & (basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank7_vector_re <= basesoc_csr_bankarray_interface7_bank_bus_we;
		basesoc_csr_bankarray_csrbank7_vector_we <= (~basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank7_enable0_w = basesoc_msi_enable_storage[31:0];
assign basesoc_csr_bankarray_csrbank7_clear0_w = basesoc_msi_clear_storage[31:0];
assign basesoc_csr_bankarray_csrbank7_vector_w = basesoc_msi_vector_status[31:0];
assign basesoc_msi_vector_we = basesoc_csr_bankarray_csrbank7_vector_we;
assign basesoc_csr_bankarray_csrbank8_sel = (basesoc_csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd9);
assign basesoc_csr_bankarray_csrbank8_link_status_r = basesoc_csr_bankarray_interface8_bank_bus_dat_w[9:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank8_link_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank8_link_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank8_sel & (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank8_link_status_re <= basesoc_csr_bankarray_interface8_bank_bus_we;
		basesoc_csr_bankarray_csrbank8_link_status_we <= (~basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank8_msi_enable_r = basesoc_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank8_msi_enable_re <= 1'd0;
	basesoc_csr_bankarray_csrbank8_msi_enable_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank8_sel & (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank8_msi_enable_re <= basesoc_csr_bankarray_interface8_bank_bus_we;
		basesoc_csr_bankarray_csrbank8_msi_enable_we <= (~basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank8_msix_enable_r = basesoc_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank8_msix_enable_re <= 1'd0;
	basesoc_csr_bankarray_csrbank8_msix_enable_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank8_sel & (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank8_msix_enable_re <= basesoc_csr_bankarray_interface8_bank_bus_we;
		basesoc_csr_bankarray_csrbank8_msix_enable_we <= (~basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank8_bus_master_enable_r = basesoc_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank8_bus_master_enable_we <= 1'd0;
	basesoc_csr_bankarray_csrbank8_bus_master_enable_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank8_sel & (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank8_bus_master_enable_re <= basesoc_csr_bankarray_interface8_bank_bus_we;
		basesoc_csr_bankarray_csrbank8_bus_master_enable_we <= (~basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank8_max_request_size_r = basesoc_csr_bankarray_interface8_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank8_max_request_size_we <= 1'd0;
	basesoc_csr_bankarray_csrbank8_max_request_size_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank8_sel & (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank8_max_request_size_re <= basesoc_csr_bankarray_interface8_bank_bus_we;
		basesoc_csr_bankarray_csrbank8_max_request_size_we <= (~basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank8_max_payload_size_r = basesoc_csr_bankarray_interface8_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank8_max_payload_size_re <= 1'd0;
	basesoc_csr_bankarray_csrbank8_max_payload_size_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank8_sel & (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank8_max_payload_size_re <= basesoc_csr_bankarray_interface8_bank_bus_we;
		basesoc_csr_bankarray_csrbank8_max_payload_size_we <= (~basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
always @(*) begin
	s7pciephy_link_status_status <= 10'd0;
	s7pciephy_link_status_status[0] <= s7pciephy_csrfield_status;
	s7pciephy_link_status_status[1] <= s7pciephy_csrfield_rate;
	s7pciephy_link_status_status[3:2] <= s7pciephy_csrfield_width;
	s7pciephy_link_status_status[9:4] <= s7pciephy_csrfield_ltssm;
end
assign basesoc_csr_bankarray_csrbank8_link_status_w = s7pciephy_link_status_status[9:0];
assign s7pciephy_link_status_we = basesoc_csr_bankarray_csrbank8_link_status_we;
assign basesoc_csr_bankarray_csrbank8_msi_enable_w = s7pciephy_msi_enable_status;
assign s7pciephy_msi_enable_we = basesoc_csr_bankarray_csrbank8_msi_enable_we;
assign basesoc_csr_bankarray_csrbank8_msix_enable_w = s7pciephy_msix_enable_status;
assign s7pciephy_msix_enable_we = basesoc_csr_bankarray_csrbank8_msix_enable_we;
assign basesoc_csr_bankarray_csrbank8_bus_master_enable_w = s7pciephy_bus_master_enable_status;
assign s7pciephy_bus_master_enable_we = basesoc_csr_bankarray_csrbank8_bus_master_enable_we;
assign basesoc_csr_bankarray_csrbank8_max_request_size_w = s7pciephy_max_request_size_status[15:0];
assign s7pciephy_max_request_size_we = basesoc_csr_bankarray_csrbank8_max_request_size_we;
assign basesoc_csr_bankarray_csrbank8_max_payload_size_w = s7pciephy_max_payload_size_status[15:0];
assign s7pciephy_max_payload_size_we = basesoc_csr_bankarray_csrbank8_max_payload_size_we;
assign basesoc_csr_bankarray_csrbank9_sel = (basesoc_csr_bankarray_interface9_bank_bus_adr[13:9] == 4'd10);
assign basesoc_csr_bankarray_csrbank9_dfii_control0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[3:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_control0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_control0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank9_dfii_control0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_control0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[5:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector0_command_issue_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector0_command_issue_we <= 1'd0;
	basesoc_sdram_phaseinjector0_command_issue_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_sdram_phaseinjector0_command_issue_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_sdram_phaseinjector0_command_issue_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[5:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector1_command_issue_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector1_command_issue_we <= 1'd0;
	basesoc_sdram_phaseinjector1_command_issue_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd8))) begin
		basesoc_sdram_phaseinjector1_command_issue_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_sdram_phaseinjector1_command_issue_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd9))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd10))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd11))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd12))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[5:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd13))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector2_command_issue_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector2_command_issue_re <= 1'd0;
	basesoc_sdram_phaseinjector2_command_issue_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd14))) begin
		basesoc_sdram_phaseinjector2_command_issue_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_sdram_phaseinjector2_command_issue_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd15))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd16))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd17))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd18))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[5:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd19))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_sdram_phaseinjector3_command_issue_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
	basesoc_sdram_phaseinjector3_command_issue_re <= 1'd0;
	basesoc_sdram_phaseinjector3_command_issue_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd20))) begin
		basesoc_sdram_phaseinjector3_command_issue_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_sdram_phaseinjector3_command_issue_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[15:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd21))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd22))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd23))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_r = basesoc_csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_we <= 1'd0;
	basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank9_sel & (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd24))) begin
		basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_re <= basesoc_csr_bankarray_interface9_bank_bus_we;
		basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_we <= (~basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign basesoc_sdram_sel = basesoc_sdram_storage[0];
assign basesoc_sdram_cke = basesoc_sdram_storage[1];
assign basesoc_sdram_odt = basesoc_sdram_storage[2];
assign basesoc_sdram_reset_n = basesoc_sdram_storage[3];
assign basesoc_csr_bankarray_csrbank9_dfii_control0_w = basesoc_sdram_storage[3:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_w = basesoc_sdram_phaseinjector0_command_storage[5:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_w = basesoc_sdram_phaseinjector0_address_storage[15:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_w = basesoc_sdram_phaseinjector0_baddress_storage[2:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_w = basesoc_sdram_phaseinjector0_wrdata_storage[31:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_w = basesoc_sdram_phaseinjector0_rddata_status[31:0];
assign basesoc_sdram_phaseinjector0_rddata_we = basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_we;
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_w = basesoc_sdram_phaseinjector1_command_storage[5:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_w = basesoc_sdram_phaseinjector1_address_storage[15:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_w = basesoc_sdram_phaseinjector1_baddress_storage[2:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_w = basesoc_sdram_phaseinjector1_wrdata_storage[31:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_w = basesoc_sdram_phaseinjector1_rddata_status[31:0];
assign basesoc_sdram_phaseinjector1_rddata_we = basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_we;
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_w = basesoc_sdram_phaseinjector2_command_storage[5:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_w = basesoc_sdram_phaseinjector2_address_storage[15:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_w = basesoc_sdram_phaseinjector2_baddress_storage[2:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_w = basesoc_sdram_phaseinjector2_wrdata_storage[31:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_w = basesoc_sdram_phaseinjector2_rddata_status[31:0];
assign basesoc_sdram_phaseinjector2_rddata_we = basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_we;
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_w = basesoc_sdram_phaseinjector3_command_storage[5:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_w = basesoc_sdram_phaseinjector3_address_storage[15:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_w = basesoc_sdram_phaseinjector3_baddress_storage[2:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_w = basesoc_sdram_phaseinjector3_wrdata_storage[31:0];
assign basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_w = basesoc_sdram_phaseinjector3_rddata_status[31:0];
assign basesoc_sdram_phaseinjector3_rddata_we = basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_we;
assign basesoc_csr_bankarray_csrbank10_sel = (basesoc_csr_bankarray_interface10_bank_bus_adr[13:9] == 4'd11);
assign basesoc_csr_bankarray_csrbank10_load0_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_load0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank10_load0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_csr_bankarray_csrbank10_load0_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_load0_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_reload0_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_reload0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank10_reload0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank10_reload0_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_reload0_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_en0_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_en0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank10_en0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank10_en0_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_en0_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_update_value0_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_update_value0_we <= 1'd0;
	basesoc_csr_bankarray_csrbank10_update_value0_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank10_update_value0_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_update_value0_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_value_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_value_re <= 1'd0;
	basesoc_csr_bankarray_csrbank10_value_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank10_value_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_value_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_ev_status_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_ev_status_re <= 1'd0;
	basesoc_csr_bankarray_csrbank10_ev_status_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank10_ev_status_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_ev_status_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_ev_pending_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_ev_pending_we <= 1'd0;
	basesoc_csr_bankarray_csrbank10_ev_pending_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank10_ev_pending_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_ev_pending_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_ev_enable0_r = basesoc_csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank10_ev_enable0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank10_ev_enable0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank10_sel & (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank10_ev_enable0_re <= basesoc_csr_bankarray_interface10_bank_bus_we;
		basesoc_csr_bankarray_csrbank10_ev_enable0_we <= (~basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank10_load0_w = basesoc_basesoc_load_storage[31:0];
assign basesoc_csr_bankarray_csrbank10_reload0_w = basesoc_basesoc_reload_storage[31:0];
assign basesoc_csr_bankarray_csrbank10_en0_w = basesoc_basesoc_en_storage;
assign basesoc_csr_bankarray_csrbank10_update_value0_w = basesoc_basesoc_update_value_storage;
assign basesoc_csr_bankarray_csrbank10_value_w = basesoc_basesoc_value_status[31:0];
assign basesoc_basesoc_value_we = basesoc_csr_bankarray_csrbank10_value_we;
assign basesoc_basesoc_status_status = basesoc_basesoc_zero0;
assign basesoc_csr_bankarray_csrbank10_ev_status_w = basesoc_basesoc_status_status;
assign basesoc_basesoc_status_we = basesoc_csr_bankarray_csrbank10_ev_status_we;
assign basesoc_basesoc_pending_status = basesoc_basesoc_zero1;
assign basesoc_csr_bankarray_csrbank10_ev_pending_w = basesoc_basesoc_pending_status;
assign basesoc_basesoc_pending_we = basesoc_csr_bankarray_csrbank10_ev_pending_we;
assign basesoc_basesoc_zero2 = basesoc_basesoc_enable_storage;
assign basesoc_csr_bankarray_csrbank10_ev_enable0_w = basesoc_basesoc_enable_storage;
assign basesoc_csr_bankarray_csrbank11_sel = (basesoc_csr_bankarray_interface11_bank_bus_adr[13:9] == 4'd12);
assign basesoc_basesoc_uartcrossover_rxtx_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_basesoc_uartcrossover_rxtx_re <= 1'd0;
	basesoc_basesoc_uartcrossover_rxtx_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd0))) begin
		basesoc_basesoc_uartcrossover_rxtx_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_basesoc_uartcrossover_rxtx_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_txfull_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_txfull_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_txfull_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd1))) begin
		basesoc_csr_bankarray_csrbank11_txfull_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_txfull_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_rxempty_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_rxempty_we <= 1'd0;
	basesoc_csr_bankarray_csrbank11_rxempty_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd2))) begin
		basesoc_csr_bankarray_csrbank11_rxempty_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_rxempty_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_ev_status_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_ev_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank11_ev_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd3))) begin
		basesoc_csr_bankarray_csrbank11_ev_status_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_ev_status_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_ev_pending_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_ev_pending_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_ev_pending_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd4))) begin
		basesoc_csr_bankarray_csrbank11_ev_pending_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_ev_pending_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_ev_enable0_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_ev_enable0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_ev_enable0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd5))) begin
		basesoc_csr_bankarray_csrbank11_ev_enable0_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_ev_enable0_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_txempty_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_txempty_we <= 1'd0;
	basesoc_csr_bankarray_csrbank11_txempty_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd6))) begin
		basesoc_csr_bankarray_csrbank11_txempty_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_txempty_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_rxfull_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_rxfull_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_rxfull_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd7))) begin
		basesoc_csr_bankarray_csrbank11_rxfull_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_rxfull_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_basesoc_xover_rxtx_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[7:0];
always @(*) begin
	basesoc_basesoc_xover_rxtx_re <= 1'd0;
	basesoc_basesoc_xover_rxtx_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd8))) begin
		basesoc_basesoc_xover_rxtx_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_basesoc_xover_rxtx_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_txfull_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_txfull_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_txfull_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd9))) begin
		basesoc_csr_bankarray_csrbank11_xover_txfull_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_txfull_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_rxempty_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_rxempty_we <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_rxempty_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd10))) begin
		basesoc_csr_bankarray_csrbank11_xover_rxempty_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_rxempty_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_ev_status_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_ev_status_we <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_ev_status_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd11))) begin
		basesoc_csr_bankarray_csrbank11_xover_ev_status_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_ev_status_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_ev_pending_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_ev_pending_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_ev_pending_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd12))) begin
		basesoc_csr_bankarray_csrbank11_xover_ev_pending_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_ev_pending_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_ev_enable0_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_ev_enable0_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_ev_enable0_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd13))) begin
		basesoc_csr_bankarray_csrbank11_xover_ev_enable0_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_ev_enable0_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_txempty_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_txempty_we <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_txempty_re <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd14))) begin
		basesoc_csr_bankarray_csrbank11_xover_txempty_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_txempty_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_xover_rxfull_r = basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	basesoc_csr_bankarray_csrbank11_xover_rxfull_re <= 1'd0;
	basesoc_csr_bankarray_csrbank11_xover_rxfull_we <= 1'd0;
	if ((basesoc_csr_bankarray_csrbank11_sel & (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 4'd15))) begin
		basesoc_csr_bankarray_csrbank11_xover_rxfull_re <= basesoc_csr_bankarray_interface11_bank_bus_we;
		basesoc_csr_bankarray_csrbank11_xover_rxfull_we <= (~basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign basesoc_csr_bankarray_csrbank11_txfull_w = basesoc_basesoc_uartcrossover_txfull_status;
assign basesoc_basesoc_uartcrossover_txfull_we = basesoc_csr_bankarray_csrbank11_txfull_we;
assign basesoc_csr_bankarray_csrbank11_rxempty_w = basesoc_basesoc_uartcrossover_rxempty_status;
assign basesoc_basesoc_uartcrossover_rxempty_we = basesoc_csr_bankarray_csrbank11_rxempty_we;
always @(*) begin
	basesoc_basesoc_uartcrossover_status_status <= 2'd0;
	basesoc_basesoc_uartcrossover_status_status[0] <= basesoc_basesoc_uartcrossover_tx0;
	basesoc_basesoc_uartcrossover_status_status[1] <= basesoc_basesoc_uartcrossover_rx0;
end
assign basesoc_csr_bankarray_csrbank11_ev_status_w = basesoc_basesoc_uartcrossover_status_status[1:0];
assign basesoc_basesoc_uartcrossover_status_we = basesoc_csr_bankarray_csrbank11_ev_status_we;
always @(*) begin
	basesoc_basesoc_uartcrossover_pending_status <= 2'd0;
	basesoc_basesoc_uartcrossover_pending_status[0] <= basesoc_basesoc_uartcrossover_tx1;
	basesoc_basesoc_uartcrossover_pending_status[1] <= basesoc_basesoc_uartcrossover_rx1;
end
assign basesoc_csr_bankarray_csrbank11_ev_pending_w = basesoc_basesoc_uartcrossover_pending_status[1:0];
assign basesoc_basesoc_uartcrossover_pending_we = basesoc_csr_bankarray_csrbank11_ev_pending_we;
assign basesoc_basesoc_uartcrossover_tx2 = basesoc_basesoc_uartcrossover_enable_storage[0];
assign basesoc_basesoc_uartcrossover_rx2 = basesoc_basesoc_uartcrossover_enable_storage[1];
assign basesoc_csr_bankarray_csrbank11_ev_enable0_w = basesoc_basesoc_uartcrossover_enable_storage[1:0];
assign basesoc_csr_bankarray_csrbank11_txempty_w = basesoc_basesoc_uartcrossover_txempty_status;
assign basesoc_basesoc_uartcrossover_txempty_we = basesoc_csr_bankarray_csrbank11_txempty_we;
assign basesoc_csr_bankarray_csrbank11_rxfull_w = basesoc_basesoc_uartcrossover_rxfull_status;
assign basesoc_basesoc_uartcrossover_rxfull_we = basesoc_csr_bankarray_csrbank11_rxfull_we;
assign basesoc_csr_bankarray_csrbank11_xover_txfull_w = basesoc_basesoc_xover_txfull_status;
assign basesoc_basesoc_xover_txfull_we = basesoc_csr_bankarray_csrbank11_xover_txfull_we;
assign basesoc_csr_bankarray_csrbank11_xover_rxempty_w = basesoc_basesoc_xover_rxempty_status;
assign basesoc_basesoc_xover_rxempty_we = basesoc_csr_bankarray_csrbank11_xover_rxempty_we;
always @(*) begin
	basesoc_basesoc_xover_status_status <= 2'd0;
	basesoc_basesoc_xover_status_status[0] <= basesoc_basesoc_xover_tx0;
	basesoc_basesoc_xover_status_status[1] <= basesoc_basesoc_xover_rx0;
end
assign basesoc_csr_bankarray_csrbank11_xover_ev_status_w = basesoc_basesoc_xover_status_status[1:0];
assign basesoc_basesoc_xover_status_we = basesoc_csr_bankarray_csrbank11_xover_ev_status_we;
always @(*) begin
	basesoc_basesoc_xover_pending_status <= 2'd0;
	basesoc_basesoc_xover_pending_status[0] <= basesoc_basesoc_xover_tx1;
	basesoc_basesoc_xover_pending_status[1] <= basesoc_basesoc_xover_rx1;
end
assign basesoc_csr_bankarray_csrbank11_xover_ev_pending_w = basesoc_basesoc_xover_pending_status[1:0];
assign basesoc_basesoc_xover_pending_we = basesoc_csr_bankarray_csrbank11_xover_ev_pending_we;
assign basesoc_basesoc_xover_tx2 = basesoc_basesoc_xover_enable_storage[0];
assign basesoc_basesoc_xover_rx2 = basesoc_basesoc_xover_enable_storage[1];
assign basesoc_csr_bankarray_csrbank11_xover_ev_enable0_w = basesoc_basesoc_xover_enable_storage[1:0];
assign basesoc_csr_bankarray_csrbank11_xover_txempty_w = basesoc_basesoc_xover_txempty_status;
assign basesoc_basesoc_xover_txempty_we = basesoc_csr_bankarray_csrbank11_xover_txempty_we;
assign basesoc_csr_bankarray_csrbank11_xover_rxfull_w = basesoc_basesoc_xover_rxfull_status;
assign basesoc_basesoc_xover_rxfull_we = basesoc_csr_bankarray_csrbank11_xover_rxfull_we;
assign basesoc_csr_interconnect_adr = basesoc_basesoc_adr;
assign basesoc_csr_interconnect_we = basesoc_basesoc_we;
assign basesoc_csr_interconnect_dat_w = basesoc_basesoc_dat_w;
assign basesoc_basesoc_dat_r = basesoc_csr_interconnect_dat_r;
assign basesoc_csr_bankarray_interface0_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface1_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface2_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface3_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface4_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface5_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface6_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface7_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface8_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface9_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface10_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface11_bank_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_sram_bus_adr = basesoc_csr_interconnect_adr;
assign basesoc_csr_bankarray_interface0_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface1_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface2_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface3_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface4_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface5_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface6_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface7_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface8_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface9_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface10_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface11_bank_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_sram_bus_we = basesoc_csr_interconnect_we;
assign basesoc_csr_bankarray_interface0_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface1_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface2_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface3_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface4_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface5_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface6_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface7_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface8_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface9_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface10_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_interface11_bank_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_bankarray_sram_bus_dat_w = basesoc_csr_interconnect_dat_w;
assign basesoc_csr_interconnect_dat_r = ((((((((((((basesoc_csr_bankarray_interface0_bank_bus_dat_r | basesoc_csr_bankarray_interface1_bank_bus_dat_r) | basesoc_csr_bankarray_interface2_bank_bus_dat_r) | basesoc_csr_bankarray_interface3_bank_bus_dat_r) | basesoc_csr_bankarray_interface4_bank_bus_dat_r) | basesoc_csr_bankarray_interface5_bank_bus_dat_r) | basesoc_csr_bankarray_interface6_bank_bus_dat_r) | basesoc_csr_bankarray_interface7_bank_bus_dat_r) | basesoc_csr_bankarray_interface8_bank_bus_dat_r) | basesoc_csr_bankarray_interface9_bank_bus_dat_r) | basesoc_csr_bankarray_interface10_bank_bus_dat_r) | basesoc_csr_bankarray_interface11_bank_bus_dat_r) | basesoc_csr_bankarray_sram_bus_dat_r);
assign slice_proxy0 = s7pciephy_m_axis_rx_tuser[14:10];
assign slice_proxy1 = s7pciephy_m_axis_rx_tuser[21:17];
assign slice_proxy2 = basesoc_depacketizer_header_extracter_dat[127:96];
assign slice_proxy3 = basesoc_depacketizer_header_extracter_dat[127:96];
assign slice_proxy4 = basesoc_depacketizer_header_extracter_dat[127:96];
assign slice_proxy5 = basesoc_depacketizer_header_extracter_dat[127:96];
assign slice_proxy6 = basesoc_depacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy7 = basesoc_depacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy8 = basesoc_depacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy9 = basesoc_depacketizer_header_extracter_sink_payload_dat[31:0];
assign slice_proxy10 = basesoc_depacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy11 = basesoc_depacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy12 = basesoc_depacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy13 = basesoc_depacketizer_header_extracter_sink_payload_dat[63:32];
assign slice_proxy14 = basesoc_depacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy15 = basesoc_depacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy16 = basesoc_depacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy17 = basesoc_depacketizer_header_extracter_sink_payload_dat[95:64];
assign slice_proxy18 = basesoc_depacketizer_header_extracter_be[15:12];
assign slice_proxy19 = basesoc_depacketizer_header_extracter_be[15:12];
assign slice_proxy20 = basesoc_depacketizer_header_extracter_be[15:12];
assign slice_proxy21 = basesoc_depacketizer_header_extracter_be[15:12];
assign slice_proxy22 = basesoc_depacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy23 = basesoc_depacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy24 = basesoc_depacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy25 = basesoc_depacketizer_header_extracter_sink_payload_be[3:0];
assign slice_proxy26 = basesoc_depacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy27 = basesoc_depacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy28 = basesoc_depacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy29 = basesoc_depacketizer_header_extracter_sink_payload_be[7:4];
assign slice_proxy30 = basesoc_depacketizer_header_extracter_sink_payload_be[11:8];
assign slice_proxy31 = basesoc_depacketizer_header_extracter_sink_payload_be[11:8];
assign slice_proxy32 = basesoc_depacketizer_header_extracter_sink_payload_be[11:8];
assign slice_proxy33 = basesoc_depacketizer_header_extracter_sink_payload_be[11:8];
assign t_slice_proxy0 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy1 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy2 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy3 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign t_slice_proxy4 = basesoc_packetizer_header_inserter_sink_payload_be[3:0];
assign t_slice_proxy5 = basesoc_packetizer_header_inserter_sink_payload_be[3:0];
assign t_slice_proxy6 = basesoc_packetizer_header_inserter_sink_payload_be[3:0];
assign t_slice_proxy7 = basesoc_packetizer_header_inserter_sink_payload_be[3:0];
assign rhs_slice_proxy0 = basesoc_packetizer_header_inserter_dat[63:32];
assign rhs_slice_proxy1 = basesoc_packetizer_header_inserter_dat[63:32];
assign rhs_slice_proxy2 = basesoc_packetizer_header_inserter_dat[63:32];
assign rhs_slice_proxy3 = basesoc_packetizer_header_inserter_dat[63:32];
assign rhs_slice_proxy4 = basesoc_packetizer_header_inserter_dat[95:64];
assign rhs_slice_proxy5 = basesoc_packetizer_header_inserter_dat[95:64];
assign rhs_slice_proxy6 = basesoc_packetizer_header_inserter_dat[95:64];
assign rhs_slice_proxy7 = basesoc_packetizer_header_inserter_dat[95:64];
assign rhs_slice_proxy8 = basesoc_packetizer_header_inserter_dat[127:96];
assign rhs_slice_proxy9 = basesoc_packetizer_header_inserter_dat[127:96];
assign rhs_slice_proxy10 = basesoc_packetizer_header_inserter_dat[127:96];
assign rhs_slice_proxy11 = basesoc_packetizer_header_inserter_dat[127:96];
assign rhs_slice_proxy12 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign rhs_slice_proxy13 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign rhs_slice_proxy14 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign rhs_slice_proxy15 = basesoc_packetizer_header_inserter_sink_payload_dat[31:0];
assign slice_proxy34 = icap__i[7:0];
assign slice_proxy35 = icap__i[7:0];
assign slice_proxy36 = icap__i[7:0];
assign slice_proxy37 = icap__i[7:0];
assign slice_proxy38 = icap__i[7:0];
assign slice_proxy39 = icap__i[7:0];
assign slice_proxy40 = icap__i[7:0];
assign slice_proxy41 = icap__i[7:0];
assign slice_proxy42 = icap__i[15:8];
assign slice_proxy43 = icap__i[15:8];
assign slice_proxy44 = icap__i[15:8];
assign slice_proxy45 = icap__i[15:8];
assign slice_proxy46 = icap__i[15:8];
assign slice_proxy47 = icap__i[15:8];
assign slice_proxy48 = icap__i[15:8];
assign slice_proxy49 = icap__i[15:8];
assign slice_proxy50 = icap__i[23:16];
assign slice_proxy51 = icap__i[23:16];
assign slice_proxy52 = icap__i[23:16];
assign slice_proxy53 = icap__i[23:16];
assign slice_proxy54 = icap__i[23:16];
assign slice_proxy55 = icap__i[23:16];
assign slice_proxy56 = icap__i[23:16];
assign slice_proxy57 = icap__i[23:16];
assign slice_proxy58 = icap__i[31:24];
assign slice_proxy59 = icap__i[31:24];
assign slice_proxy60 = icap__i[31:24];
assign slice_proxy61 = icap__i[31:24];
assign slice_proxy62 = icap__i[31:24];
assign slice_proxy63 = icap__i[31:24];
assign slice_proxy64 = icap__i[31:24];
assign slice_proxy65 = icap__i[31:24];
assign slice_proxy66 = icap_o_icape2[7:0];
assign slice_proxy67 = icap_o_icape2[7:0];
assign slice_proxy68 = icap_o_icape2[7:0];
assign slice_proxy69 = icap_o_icape2[7:0];
assign slice_proxy70 = icap_o_icape2[7:0];
assign slice_proxy71 = icap_o_icape2[7:0];
assign slice_proxy72 = icap_o_icape2[7:0];
assign slice_proxy73 = icap_o_icape2[7:0];
assign slice_proxy74 = icap_o_icape2[15:8];
assign slice_proxy75 = icap_o_icape2[15:8];
assign slice_proxy76 = icap_o_icape2[15:8];
assign slice_proxy77 = icap_o_icape2[15:8];
assign slice_proxy78 = icap_o_icape2[15:8];
assign slice_proxy79 = icap_o_icape2[15:8];
assign slice_proxy80 = icap_o_icape2[15:8];
assign slice_proxy81 = icap_o_icape2[15:8];
assign slice_proxy82 = icap_o_icape2[23:16];
assign slice_proxy83 = icap_o_icape2[23:16];
assign slice_proxy84 = icap_o_icape2[23:16];
assign slice_proxy85 = icap_o_icape2[23:16];
assign slice_proxy86 = icap_o_icape2[23:16];
assign slice_proxy87 = icap_o_icape2[23:16];
assign slice_proxy88 = icap_o_icape2[23:16];
assign slice_proxy89 = icap_o_icape2[23:16];
assign slice_proxy90 = icap_o_icape2[31:24];
assign slice_proxy91 = icap_o_icape2[31:24];
assign slice_proxy92 = icap_o_icape2[31:24];
assign slice_proxy93 = icap_o_icape2[31:24];
assign slice_proxy94 = icap_o_icape2[31:24];
assign slice_proxy95 = icap_o_icape2[31:24];
assign slice_proxy96 = icap_o_icape2[31:24];
assign slice_proxy97 = icap_o_icape2[31:24];
always @(*) begin
	comb_rhs_array_muxed0 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[0];
		end
		1'd1: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[1];
		end
		2'd2: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[2];
		end
		2'd3: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[3];
		end
		3'd4: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[4];
		end
		3'd5: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[5];
		end
		3'd6: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[6];
		end
		default: begin
			comb_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_valids[7];
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed1 <= 16'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			comb_rhs_array_muxed1 <= basesoc_sdram_bankmachine7_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed2 <= 3'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			comb_rhs_array_muxed2 <= basesoc_sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed3 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			comb_rhs_array_muxed3 <= basesoc_sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed4 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			comb_rhs_array_muxed4 <= basesoc_sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed5 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			comb_rhs_array_muxed5 <= basesoc_sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	comb_t_array_muxed0 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			comb_t_array_muxed0 <= basesoc_sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	comb_t_array_muxed1 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			comb_t_array_muxed1 <= basesoc_sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	comb_t_array_muxed2 <= 1'd0;
	case (basesoc_sdram_choose_cmd_grant)
		1'd0: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			comb_t_array_muxed2 <= basesoc_sdram_bankmachine7_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed6 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[0];
		end
		1'd1: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[1];
		end
		2'd2: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[2];
		end
		2'd3: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[3];
		end
		3'd4: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[4];
		end
		3'd5: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[5];
		end
		3'd6: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[6];
		end
		default: begin
			comb_rhs_array_muxed6 <= basesoc_sdram_choose_req_valids[7];
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed7 <= 16'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			comb_rhs_array_muxed7 <= basesoc_sdram_bankmachine7_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed8 <= 3'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			comb_rhs_array_muxed8 <= basesoc_sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed9 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			comb_rhs_array_muxed9 <= basesoc_sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed10 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			comb_rhs_array_muxed10 <= basesoc_sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed11 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			comb_rhs_array_muxed11 <= basesoc_sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
end
always @(*) begin
	comb_t_array_muxed3 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			comb_t_array_muxed3 <= basesoc_sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
end
always @(*) begin
	comb_t_array_muxed4 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			comb_t_array_muxed4 <= basesoc_sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
end
always @(*) begin
	comb_t_array_muxed5 <= 1'd0;
	case (basesoc_sdram_choose_req_grant)
		1'd0: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			comb_t_array_muxed5 <= basesoc_sdram_bankmachine7_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed12 <= 23'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			comb_rhs_array_muxed12 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed13 <= 1'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			comb_rhs_array_muxed13 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed14 <= 1'd0;
	case (subfragments_roundrobin0_grant)
		default: begin
			comb_rhs_array_muxed14 <= (((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((subfragments_locked0 | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed15 <= 23'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			comb_rhs_array_muxed15 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed16 <= 1'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			comb_rhs_array_muxed16 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed17 <= 1'd0;
	case (subfragments_roundrobin1_grant)
		default: begin
			comb_rhs_array_muxed17 <= (((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((subfragments_locked1 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed18 <= 23'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			comb_rhs_array_muxed18 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed19 <= 1'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			comb_rhs_array_muxed19 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed20 <= 1'd0;
	case (subfragments_roundrobin2_grant)
		default: begin
			comb_rhs_array_muxed20 <= (((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((subfragments_locked2 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed21 <= 23'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			comb_rhs_array_muxed21 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed22 <= 1'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			comb_rhs_array_muxed22 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed23 <= 1'd0;
	case (subfragments_roundrobin3_grant)
		default: begin
			comb_rhs_array_muxed23 <= (((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((subfragments_locked3 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed24 <= 23'd0;
	case (subfragments_roundrobin4_grant)
		default: begin
			comb_rhs_array_muxed24 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed25 <= 1'd0;
	case (subfragments_roundrobin4_grant)
		default: begin
			comb_rhs_array_muxed25 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed26 <= 1'd0;
	case (subfragments_roundrobin4_grant)
		default: begin
			comb_rhs_array_muxed26 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((subfragments_locked4 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed27 <= 23'd0;
	case (subfragments_roundrobin5_grant)
		default: begin
			comb_rhs_array_muxed27 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed28 <= 1'd0;
	case (subfragments_roundrobin5_grant)
		default: begin
			comb_rhs_array_muxed28 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed29 <= 1'd0;
	case (subfragments_roundrobin5_grant)
		default: begin
			comb_rhs_array_muxed29 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((subfragments_locked5 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed30 <= 23'd0;
	case (subfragments_roundrobin6_grant)
		default: begin
			comb_rhs_array_muxed30 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed31 <= 1'd0;
	case (subfragments_roundrobin6_grant)
		default: begin
			comb_rhs_array_muxed31 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed32 <= 1'd0;
	case (subfragments_roundrobin6_grant)
		default: begin
			comb_rhs_array_muxed32 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((subfragments_locked6 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (subfragments_roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed33 <= 23'd0;
	case (subfragments_roundrobin7_grant)
		default: begin
			comb_rhs_array_muxed33 <= {basesoc_port_cmd_payload_addr[25:10], basesoc_port_cmd_payload_addr[6:0]};
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed34 <= 1'd0;
	case (subfragments_roundrobin7_grant)
		default: begin
			comb_rhs_array_muxed34 <= basesoc_port_cmd_payload_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed35 <= 1'd0;
	case (subfragments_roundrobin7_grant)
		default: begin
			comb_rhs_array_muxed35 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((subfragments_locked7 | (basesoc_sdram_interface_bank0_lock & (subfragments_roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (subfragments_roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (subfragments_roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (subfragments_roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (subfragments_roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (subfragments_roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (subfragments_roundrobin6_grant == 1'd0))))) & basesoc_port_cmd_valid);
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed36 <= 30'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed36 <= basesoc_basesoc_ibus_adr;
		end
		1'd1: begin
			comb_rhs_array_muxed36 <= basesoc_basesoc_dbus_adr;
		end
		default: begin
			comb_rhs_array_muxed36 <= basesoc_mmap_wishbone_adr;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed37 <= 32'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed37 <= basesoc_basesoc_ibus_dat_w;
		end
		1'd1: begin
			comb_rhs_array_muxed37 <= basesoc_basesoc_dbus_dat_w;
		end
		default: begin
			comb_rhs_array_muxed37 <= basesoc_mmap_wishbone_dat_w;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed38 <= 4'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed38 <= basesoc_basesoc_ibus_sel;
		end
		1'd1: begin
			comb_rhs_array_muxed38 <= basesoc_basesoc_dbus_sel;
		end
		default: begin
			comb_rhs_array_muxed38 <= basesoc_mmap_wishbone_sel;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed39 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed39 <= basesoc_basesoc_ibus_cyc;
		end
		1'd1: begin
			comb_rhs_array_muxed39 <= basesoc_basesoc_dbus_cyc;
		end
		default: begin
			comb_rhs_array_muxed39 <= basesoc_mmap_wishbone_cyc;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed40 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed40 <= basesoc_basesoc_ibus_stb;
		end
		1'd1: begin
			comb_rhs_array_muxed40 <= basesoc_basesoc_dbus_stb;
		end
		default: begin
			comb_rhs_array_muxed40 <= basesoc_mmap_wishbone_stb;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed41 <= 1'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed41 <= basesoc_basesoc_ibus_we;
		end
		1'd1: begin
			comb_rhs_array_muxed41 <= basesoc_basesoc_dbus_we;
		end
		default: begin
			comb_rhs_array_muxed41 <= basesoc_mmap_wishbone_we;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed42 <= 3'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed42 <= basesoc_basesoc_ibus_cti;
		end
		1'd1: begin
			comb_rhs_array_muxed42 <= basesoc_basesoc_dbus_cti;
		end
		default: begin
			comb_rhs_array_muxed42 <= basesoc_mmap_wishbone_cti;
		end
	endcase
end
always @(*) begin
	comb_rhs_array_muxed43 <= 2'd0;
	case (basesoc_grant)
		1'd0: begin
			comb_rhs_array_muxed43 <= basesoc_basesoc_ibus_bte;
		end
		1'd1: begin
			comb_rhs_array_muxed43 <= basesoc_basesoc_dbus_bte;
		end
		default: begin
			comb_rhs_array_muxed43 <= basesoc_mmap_wishbone_bte;
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed0 <= 3'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed0 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			sync_rhs_array_muxed0 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			sync_rhs_array_muxed0 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			sync_rhs_array_muxed0 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed1 <= 16'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed1 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			sync_rhs_array_muxed1 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			sync_rhs_array_muxed1 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			sync_rhs_array_muxed1 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed2 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed2 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed2 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			sync_rhs_array_muxed2 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			sync_rhs_array_muxed2 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed3 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed3 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed3 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			sync_rhs_array_muxed3 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			sync_rhs_array_muxed3 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed4 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed4 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed4 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			sync_rhs_array_muxed4 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			sync_rhs_array_muxed4 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed5 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed5 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed5 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			sync_rhs_array_muxed5 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			sync_rhs_array_muxed5 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed6 <= 1'd0;
	case (basesoc_sdram_steerer_sel0)
		1'd0: begin
			sync_rhs_array_muxed6 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed6 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			sync_rhs_array_muxed6 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			sync_rhs_array_muxed6 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed7 <= 3'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed7 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			sync_rhs_array_muxed7 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			sync_rhs_array_muxed7 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			sync_rhs_array_muxed7 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed8 <= 16'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed8 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			sync_rhs_array_muxed8 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			sync_rhs_array_muxed8 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			sync_rhs_array_muxed8 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed9 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed9 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed9 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			sync_rhs_array_muxed9 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			sync_rhs_array_muxed9 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed10 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed10 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed10 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			sync_rhs_array_muxed10 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			sync_rhs_array_muxed10 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed11 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed11 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed11 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			sync_rhs_array_muxed11 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			sync_rhs_array_muxed11 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed12 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed12 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed12 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			sync_rhs_array_muxed12 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			sync_rhs_array_muxed12 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed13 <= 1'd0;
	case (basesoc_sdram_steerer_sel1)
		1'd0: begin
			sync_rhs_array_muxed13 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed13 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			sync_rhs_array_muxed13 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			sync_rhs_array_muxed13 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed14 <= 3'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed14 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			sync_rhs_array_muxed14 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			sync_rhs_array_muxed14 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			sync_rhs_array_muxed14 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed15 <= 16'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed15 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			sync_rhs_array_muxed15 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			sync_rhs_array_muxed15 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			sync_rhs_array_muxed15 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed16 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed16 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed16 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			sync_rhs_array_muxed16 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			sync_rhs_array_muxed16 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed17 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed17 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed17 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			sync_rhs_array_muxed17 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			sync_rhs_array_muxed17 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed18 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed18 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed18 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			sync_rhs_array_muxed18 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			sync_rhs_array_muxed18 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed19 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed19 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed19 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			sync_rhs_array_muxed19 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			sync_rhs_array_muxed19 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed20 <= 1'd0;
	case (basesoc_sdram_steerer_sel2)
		1'd0: begin
			sync_rhs_array_muxed20 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed20 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			sync_rhs_array_muxed20 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			sync_rhs_array_muxed20 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed21 <= 3'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed21 <= basesoc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			sync_rhs_array_muxed21 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			sync_rhs_array_muxed21 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			sync_rhs_array_muxed21 <= basesoc_sdram_cmd_payload_ba[2:0];
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed22 <= 16'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed22 <= basesoc_sdram_nop_a;
		end
		1'd1: begin
			sync_rhs_array_muxed22 <= basesoc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			sync_rhs_array_muxed22 <= basesoc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			sync_rhs_array_muxed22 <= basesoc_sdram_cmd_payload_a;
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed23 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed23 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed23 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			sync_rhs_array_muxed23 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			sync_rhs_array_muxed23 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed24 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed24 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed24 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			sync_rhs_array_muxed24 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			sync_rhs_array_muxed24 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed25 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed25 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed25 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			sync_rhs_array_muxed25 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			sync_rhs_array_muxed25 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed26 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed26 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed26 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			sync_rhs_array_muxed26 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			sync_rhs_array_muxed26 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
		end
	endcase
end
always @(*) begin
	sync_rhs_array_muxed27 <= 1'd0;
	case (basesoc_sdram_steerer_sel3)
		1'd0: begin
			sync_rhs_array_muxed27 <= 1'd0;
		end
		1'd1: begin
			sync_rhs_array_muxed27 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			sync_rhs_array_muxed27 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			sync_rhs_array_muxed27 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
		end
	endcase
end
always @(*) begin
	sync_f_array_muxed <= 1'd0;
	case (flash_mosi_sel)
		1'd0: begin
			sync_f_array_muxed <= flash_mosi_data[0];
		end
		1'd1: begin
			sync_f_array_muxed <= flash_mosi_data[1];
		end
		2'd2: begin
			sync_f_array_muxed <= flash_mosi_data[2];
		end
		2'd3: begin
			sync_f_array_muxed <= flash_mosi_data[3];
		end
		3'd4: begin
			sync_f_array_muxed <= flash_mosi_data[4];
		end
		3'd5: begin
			sync_f_array_muxed <= flash_mosi_data[5];
		end
		3'd6: begin
			sync_f_array_muxed <= flash_mosi_data[6];
		end
		3'd7: begin
			sync_f_array_muxed <= flash_mosi_data[7];
		end
		4'd8: begin
			sync_f_array_muxed <= flash_mosi_data[8];
		end
		4'd9: begin
			sync_f_array_muxed <= flash_mosi_data[9];
		end
		4'd10: begin
			sync_f_array_muxed <= flash_mosi_data[10];
		end
		4'd11: begin
			sync_f_array_muxed <= flash_mosi_data[11];
		end
		4'd12: begin
			sync_f_array_muxed <= flash_mosi_data[12];
		end
		4'd13: begin
			sync_f_array_muxed <= flash_mosi_data[13];
		end
		4'd14: begin
			sync_f_array_muxed <= flash_mosi_data[14];
		end
		4'd15: begin
			sync_f_array_muxed <= flash_mosi_data[15];
		end
		5'd16: begin
			sync_f_array_muxed <= flash_mosi_data[16];
		end
		5'd17: begin
			sync_f_array_muxed <= flash_mosi_data[17];
		end
		5'd18: begin
			sync_f_array_muxed <= flash_mosi_data[18];
		end
		5'd19: begin
			sync_f_array_muxed <= flash_mosi_data[19];
		end
		5'd20: begin
			sync_f_array_muxed <= flash_mosi_data[20];
		end
		5'd21: begin
			sync_f_array_muxed <= flash_mosi_data[21];
		end
		5'd22: begin
			sync_f_array_muxed <= flash_mosi_data[22];
		end
		5'd23: begin
			sync_f_array_muxed <= flash_mosi_data[23];
		end
		5'd24: begin
			sync_f_array_muxed <= flash_mosi_data[24];
		end
		5'd25: begin
			sync_f_array_muxed <= flash_mosi_data[25];
		end
		5'd26: begin
			sync_f_array_muxed <= flash_mosi_data[26];
		end
		5'd27: begin
			sync_f_array_muxed <= flash_mosi_data[27];
		end
		5'd28: begin
			sync_f_array_muxed <= flash_mosi_data[28];
		end
		5'd29: begin
			sync_f_array_muxed <= flash_mosi_data[29];
		end
		5'd30: begin
			sync_f_array_muxed <= flash_mosi_data[30];
		end
		5'd31: begin
			sync_f_array_muxed <= flash_mosi_data[31];
		end
		6'd32: begin
			sync_f_array_muxed <= flash_mosi_data[32];
		end
		6'd33: begin
			sync_f_array_muxed <= flash_mosi_data[33];
		end
		6'd34: begin
			sync_f_array_muxed <= flash_mosi_data[34];
		end
		6'd35: begin
			sync_f_array_muxed <= flash_mosi_data[35];
		end
		6'd36: begin
			sync_f_array_muxed <= flash_mosi_data[36];
		end
		6'd37: begin
			sync_f_array_muxed <= flash_mosi_data[37];
		end
		6'd38: begin
			sync_f_array_muxed <= flash_mosi_data[38];
		end
		default: begin
			sync_f_array_muxed <= flash_mosi_data[39];
		end
	endcase
end
assign xilinxasyncresetsynchronizerimpl0 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl1 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl2 = (~crg_locked);
assign xilinxasyncresetsynchronizerimpl3 = (~crg_locked);
assign s7pciephy_tx_datapath_cdc_produce_rdomain = xilinxmultiregimpl0_regs1;
assign s7pciephy_tx_datapath_cdc_consume_wdomain = xilinxmultiregimpl1_regs1;
assign s7pciephy_rx_datapath_cdc_produce_rdomain = xilinxmultiregimpl2_regs1;
assign s7pciephy_rx_datapath_cdc_consume_wdomain = xilinxmultiregimpl3_regs1;
assign s7pciephy_msi_cdc_produce_rdomain = xilinxmultiregimpl4_regs1;
assign s7pciephy_msi_cdc_consume_wdomain = xilinxmultiregimpl5_regs1;
assign s7pciephy_bus_master_enable_status = xilinxmultiregimpl6_regs1;
assign xilinxmultiregimpl6 = s7pciephy_command[2];
assign s7pciephy_max_request_size_status = xilinxmultiregimpl7_regs1;
assign s7pciephy_max_payload_size_status = xilinxmultiregimpl8_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge icap_clk) begin
	subfragments_resetinserter_state <= subfragments_resetinserter_next_state;
	if (icap_count_icap_next_value_ce0) begin
		icap_count <= icap_count_icap_next_value0;
	end
	if (icap_read_data_icap_next_value_ce1) begin
		icap_read_data <= icap_read_data_icap_next_value1;
	end
	if (icap_reset) begin
		icap_read_data <= 32'd0;
		icap_count <= 4'd0;
		subfragments_resetinserter_state <= 3'd0;
	end
	if (icap_rst) begin
		icap_read_data <= 32'd0;
		icap_count <= 4'd0;
		subfragments_resetinserter_state <= 3'd0;
	end
end

always @(posedge idelay_clk) begin
	if ((crg_reset_counter != 1'd0)) begin
		crg_reset_counter <= (crg_reset_counter - 1'd1);
	end else begin
		crg_ic_reset <= 1'd0;
	end
	if (idelay_rst) begin
		crg_reset_counter <= 4'd15;
		crg_ic_reset <= 1'd1;
	end
end

always @(posedge pcie_clk) begin
	case (s7pciephy_dcommand[14:12])
		1'd0: begin
			s7pciephy_max_request_size <= 8'd128;
		end
		1'd1: begin
			s7pciephy_max_request_size <= 9'd256;
		end
		2'd2: begin
			s7pciephy_max_request_size <= 10'd512;
		end
		2'd3: begin
			s7pciephy_max_request_size <= 10'd512;
		end
		3'd4: begin
			s7pciephy_max_request_size <= 10'd512;
		end
		3'd5: begin
			s7pciephy_max_request_size <= 10'd512;
		end
	endcase
	case (s7pciephy_dcommand[7:5])
		1'd0: begin
			s7pciephy_max_payload_size <= 8'd128;
		end
		1'd1: begin
			s7pciephy_max_payload_size <= 9'd256;
		end
		2'd2: begin
			s7pciephy_max_payload_size <= 10'd512;
		end
		2'd3: begin
			s7pciephy_max_payload_size <= 10'd512;
		end
		3'd4: begin
			s7pciephy_max_payload_size <= 10'd512;
		end
		3'd5: begin
			s7pciephy_max_payload_size <= 10'd512;
		end
	endcase
	s7pciephy_id <= {s7pciephy_bus_number, s7pciephy_device_number, s7pciephy_function_number};
	s7pciephy_tx_datapath_cdc_graycounter1_q_binary <= s7pciephy_tx_datapath_cdc_graycounter1_q_next_binary;
	s7pciephy_tx_datapath_cdc_graycounter1_q <= s7pciephy_tx_datapath_cdc_graycounter1_q_next;
	if ((s7pciephy_tx_datapath_pipe_ready_sink_valid & (~s7pciephy_tx_datapath_pipe_ready_source_ready))) begin
		s7pciephy_tx_datapath_pipe_ready_valid <= 1'd1;
	end else begin
		if (s7pciephy_tx_datapath_pipe_ready_source_ready) begin
			s7pciephy_tx_datapath_pipe_ready_valid <= 1'd0;
		end
	end
	if (((~s7pciephy_tx_datapath_pipe_ready_source_ready) & (~s7pciephy_tx_datapath_pipe_ready_valid))) begin
		s7pciephy_tx_datapath_pipe_ready_sink_d_valid <= s7pciephy_tx_datapath_pipe_ready_sink_valid;
		s7pciephy_tx_datapath_pipe_ready_sink_d_ready <= s7pciephy_tx_datapath_pipe_ready_sink_ready;
		s7pciephy_tx_datapath_pipe_ready_sink_d_first <= s7pciephy_tx_datapath_pipe_ready_sink_first;
		s7pciephy_tx_datapath_pipe_ready_sink_d_last <= s7pciephy_tx_datapath_pipe_ready_sink_last;
		s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat <= s7pciephy_tx_datapath_pipe_ready_sink_payload_dat;
		s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be <= s7pciephy_tx_datapath_pipe_ready_sink_payload_be;
	end
	if ((s7pciephy_rx_datapath_aligner_sink_valid & s7pciephy_rx_datapath_aligner_sink_ready)) begin
		s7pciephy_rx_datapath_aligner_dat_last <= s7pciephy_rx_datapath_aligner_sink_payload_dat[127:64];
		s7pciephy_rx_datapath_aligner_be_last <= s7pciephy_rx_datapath_aligner_sink_payload_be[15:8];
	end
	subfragments_s7pciephy_state <= subfragments_s7pciephy_next_state;
	if ((s7pciephy_rx_datapath_pipe_ready_sink_valid & (~s7pciephy_rx_datapath_pipe_ready_source_ready))) begin
		s7pciephy_rx_datapath_pipe_ready_valid <= 1'd1;
	end else begin
		if (s7pciephy_rx_datapath_pipe_ready_source_ready) begin
			s7pciephy_rx_datapath_pipe_ready_valid <= 1'd0;
		end
	end
	if (((~s7pciephy_rx_datapath_pipe_ready_source_ready) & (~s7pciephy_rx_datapath_pipe_ready_valid))) begin
		s7pciephy_rx_datapath_pipe_ready_sink_d_valid <= s7pciephy_rx_datapath_pipe_ready_sink_valid;
		s7pciephy_rx_datapath_pipe_ready_sink_d_ready <= s7pciephy_rx_datapath_pipe_ready_sink_ready;
		s7pciephy_rx_datapath_pipe_ready_sink_d_first <= s7pciephy_rx_datapath_pipe_ready_sink_first;
		s7pciephy_rx_datapath_pipe_ready_sink_d_last <= s7pciephy_rx_datapath_pipe_ready_sink_last;
		s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat <= s7pciephy_rx_datapath_pipe_ready_sink_payload_dat;
		s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be <= s7pciephy_rx_datapath_pipe_ready_sink_payload_be;
	end
	s7pciephy_rx_datapath_cdc_graycounter0_q_binary <= s7pciephy_rx_datapath_cdc_graycounter0_q_next_binary;
	s7pciephy_rx_datapath_cdc_graycounter0_q <= s7pciephy_rx_datapath_cdc_graycounter0_q_next;
	s7pciephy_msi_cdc_graycounter1_q_binary <= s7pciephy_msi_cdc_graycounter1_q_next_binary;
	s7pciephy_msi_cdc_graycounter1_q <= s7pciephy_msi_cdc_graycounter1_q_next;
	if (pcie_rst) begin
		s7pciephy_tx_datapath_cdc_graycounter1_q <= 3'd0;
		s7pciephy_tx_datapath_cdc_graycounter1_q_binary <= 3'd0;
		s7pciephy_tx_datapath_pipe_ready_valid <= 1'd0;
		s7pciephy_tx_datapath_pipe_ready_sink_d_valid <= 1'd0;
		s7pciephy_tx_datapath_pipe_ready_sink_d_ready <= 1'd0;
		s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat <= 128'd0;
		s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be <= 16'd0;
		s7pciephy_rx_datapath_pipe_ready_valid <= 1'd0;
		s7pciephy_rx_datapath_pipe_ready_sink_d_valid <= 1'd0;
		s7pciephy_rx_datapath_pipe_ready_sink_d_ready <= 1'd0;
		s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat <= 128'd0;
		s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be <= 16'd0;
		s7pciephy_rx_datapath_cdc_graycounter0_q <= 3'd0;
		s7pciephy_rx_datapath_cdc_graycounter0_q_binary <= 3'd0;
		s7pciephy_msi_cdc_graycounter1_q <= 3'd0;
		s7pciephy_msi_cdc_graycounter1_q_binary <= 3'd0;
		subfragments_s7pciephy_state <= 1'd0;
	end
	xilinxmultiregimpl0_regs0 <= s7pciephy_tx_datapath_cdc_graycounter0_q;
	xilinxmultiregimpl0_regs1 <= xilinxmultiregimpl0_regs0;
	xilinxmultiregimpl3_regs0 <= s7pciephy_rx_datapath_cdc_graycounter1_q;
	xilinxmultiregimpl3_regs1 <= xilinxmultiregimpl3_regs0;
	xilinxmultiregimpl4_regs0 <= s7pciephy_msi_cdc_graycounter0_q;
	xilinxmultiregimpl4_regs1 <= xilinxmultiregimpl4_regs0;
end

always @(posedge sys_clk) begin
	if ((basesoc_basesoc_bus_errors != 32'd4294967295)) begin
		if (basesoc_basesoc_bus_error) begin
			basesoc_basesoc_bus_errors <= (basesoc_basesoc_bus_errors + 1'd1);
		end
	end
	basesoc_basesoc_basesoc_ram_bus_ack <= 1'd0;
	if (((basesoc_basesoc_basesoc_ram_bus_cyc & basesoc_basesoc_basesoc_ram_bus_stb) & (~basesoc_basesoc_basesoc_ram_bus_ack))) begin
		basesoc_basesoc_basesoc_ram_bus_ack <= 1'd1;
	end
	basesoc_basesoc_ram_bus_ram_bus_ack <= 1'd0;
	if (((basesoc_basesoc_ram_bus_ram_bus_cyc & basesoc_basesoc_ram_bus_ram_bus_stb) & (~basesoc_basesoc_ram_bus_ram_bus_ack))) begin
		basesoc_basesoc_ram_bus_ram_bus_ack <= 1'd1;
	end
	if (basesoc_basesoc_uartcrossover_tx_clear) begin
		basesoc_basesoc_uartcrossover_tx_pending <= 1'd0;
	end
	basesoc_basesoc_uartcrossover_tx_trigger_d <= basesoc_basesoc_uartcrossover_tx_trigger;
	if ((basesoc_basesoc_uartcrossover_tx_trigger & (~basesoc_basesoc_uartcrossover_tx_trigger_d))) begin
		basesoc_basesoc_uartcrossover_tx_pending <= 1'd1;
	end
	if (basesoc_basesoc_uartcrossover_rx_clear) begin
		basesoc_basesoc_uartcrossover_rx_pending <= 1'd0;
	end
	basesoc_basesoc_uartcrossover_rx_trigger_d <= basesoc_basesoc_uartcrossover_rx_trigger;
	if ((basesoc_basesoc_uartcrossover_rx_trigger & (~basesoc_basesoc_uartcrossover_rx_trigger_d))) begin
		basesoc_basesoc_uartcrossover_rx_pending <= 1'd1;
	end
	if (basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_re) begin
		basesoc_basesoc_uartcrossover_tx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_basesoc_uartcrossover_tx_fifo_re) begin
			basesoc_basesoc_uartcrossover_tx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_we & basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_writable) & (~basesoc_basesoc_uartcrossover_tx_fifo_replace))) begin
		basesoc_basesoc_uartcrossover_tx_fifo_produce <= (basesoc_basesoc_uartcrossover_tx_fifo_produce + 1'd1);
	end
	if (basesoc_basesoc_uartcrossover_tx_fifo_do_read) begin
		basesoc_basesoc_uartcrossover_tx_fifo_consume <= (basesoc_basesoc_uartcrossover_tx_fifo_consume + 1'd1);
	end
	if (((basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_we & basesoc_basesoc_uartcrossover_tx_fifo_syncfifo_writable) & (~basesoc_basesoc_uartcrossover_tx_fifo_replace))) begin
		if ((~basesoc_basesoc_uartcrossover_tx_fifo_do_read)) begin
			basesoc_basesoc_uartcrossover_tx_fifo_level0 <= (basesoc_basesoc_uartcrossover_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_basesoc_uartcrossover_tx_fifo_do_read) begin
			basesoc_basesoc_uartcrossover_tx_fifo_level0 <= (basesoc_basesoc_uartcrossover_tx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_re) begin
		basesoc_basesoc_uartcrossover_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_basesoc_uartcrossover_rx_fifo_re) begin
			basesoc_basesoc_uartcrossover_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_we & basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_writable) & (~basesoc_basesoc_uartcrossover_rx_fifo_replace))) begin
		basesoc_basesoc_uartcrossover_rx_fifo_produce <= (basesoc_basesoc_uartcrossover_rx_fifo_produce + 1'd1);
	end
	if (basesoc_basesoc_uartcrossover_rx_fifo_do_read) begin
		basesoc_basesoc_uartcrossover_rx_fifo_consume <= (basesoc_basesoc_uartcrossover_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_we & basesoc_basesoc_uartcrossover_rx_fifo_syncfifo_writable) & (~basesoc_basesoc_uartcrossover_rx_fifo_replace))) begin
		if ((~basesoc_basesoc_uartcrossover_rx_fifo_do_read)) begin
			basesoc_basesoc_uartcrossover_rx_fifo_level0 <= (basesoc_basesoc_uartcrossover_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_basesoc_uartcrossover_rx_fifo_do_read) begin
			basesoc_basesoc_uartcrossover_rx_fifo_level0 <= (basesoc_basesoc_uartcrossover_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_basesoc_xover_tx_clear) begin
		basesoc_basesoc_xover_tx_pending <= 1'd0;
	end
	basesoc_basesoc_xover_tx_trigger_d <= basesoc_basesoc_xover_tx_trigger;
	if ((basesoc_basesoc_xover_tx_trigger & (~basesoc_basesoc_xover_tx_trigger_d))) begin
		basesoc_basesoc_xover_tx_pending <= 1'd1;
	end
	if (basesoc_basesoc_xover_rx_clear) begin
		basesoc_basesoc_xover_rx_pending <= 1'd0;
	end
	basesoc_basesoc_xover_rx_trigger_d <= basesoc_basesoc_xover_rx_trigger;
	if ((basesoc_basesoc_xover_rx_trigger & (~basesoc_basesoc_xover_rx_trigger_d))) begin
		basesoc_basesoc_xover_rx_pending <= 1'd1;
	end
	if (((~basesoc_basesoc_xover_tx_fifo_source_valid) | basesoc_basesoc_xover_tx_fifo_source_ready)) begin
		basesoc_basesoc_xover_tx_fifo_source_valid <= basesoc_basesoc_xover_tx_fifo_sink_valid;
		basesoc_basesoc_xover_tx_fifo_source_first <= basesoc_basesoc_xover_tx_fifo_sink_first;
		basesoc_basesoc_xover_tx_fifo_source_last <= basesoc_basesoc_xover_tx_fifo_sink_last;
		basesoc_basesoc_xover_tx_fifo_source_payload_data <= basesoc_basesoc_xover_tx_fifo_sink_payload_data;
	end
	if (basesoc_basesoc_xover_rx_fifo_syncfifo_re) begin
		basesoc_basesoc_xover_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_basesoc_xover_rx_fifo_re) begin
			basesoc_basesoc_xover_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_basesoc_xover_rx_fifo_syncfifo_we & basesoc_basesoc_xover_rx_fifo_syncfifo_writable) & (~basesoc_basesoc_xover_rx_fifo_replace))) begin
		basesoc_basesoc_xover_rx_fifo_produce <= (basesoc_basesoc_xover_rx_fifo_produce + 1'd1);
	end
	if (basesoc_basesoc_xover_rx_fifo_do_read) begin
		basesoc_basesoc_xover_rx_fifo_consume <= (basesoc_basesoc_xover_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_basesoc_xover_rx_fifo_syncfifo_we & basesoc_basesoc_xover_rx_fifo_syncfifo_writable) & (~basesoc_basesoc_xover_rx_fifo_replace))) begin
		if ((~basesoc_basesoc_xover_rx_fifo_do_read)) begin
			basesoc_basesoc_xover_rx_fifo_level0 <= (basesoc_basesoc_xover_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_basesoc_xover_rx_fifo_do_read) begin
			basesoc_basesoc_xover_rx_fifo_level0 <= (basesoc_basesoc_xover_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_basesoc_en_storage) begin
		if ((basesoc_basesoc_value == 1'd0)) begin
			basesoc_basesoc_value <= basesoc_basesoc_reload_storage;
		end else begin
			basesoc_basesoc_value <= (basesoc_basesoc_value - 1'd1);
		end
	end else begin
		basesoc_basesoc_value <= basesoc_basesoc_load_storage;
	end
	if (basesoc_basesoc_update_value_re) begin
		basesoc_basesoc_value_status <= basesoc_basesoc_value;
	end
	if (basesoc_basesoc_zero_clear) begin
		basesoc_basesoc_zero_pending <= 1'd0;
	end
	basesoc_basesoc_zero_trigger_d <= basesoc_basesoc_zero_trigger;
	if ((basesoc_basesoc_zero_trigger & (~basesoc_basesoc_zero_trigger_d))) begin
		basesoc_basesoc_zero_pending <= 1'd1;
	end
	a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= a7ddrphy_dqs_oe_delay_tappeddelayline;
	a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0;
	a7ddrphy_dqspattern_o1 <= a7ddrphy_dqspattern_o0;
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value0 <= (a7ddrphy_bitslip0_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value0 <= 3'd7;
	end
	a7ddrphy_bitslip0_r0 <= {a7ddrphy_dqspattern_o1, a7ddrphy_bitslip0_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value0 <= (a7ddrphy_bitslip1_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value0 <= 3'd7;
	end
	a7ddrphy_bitslip1_r0 <= {a7ddrphy_dqspattern_o1, a7ddrphy_bitslip1_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value1 <= (a7ddrphy_bitslip0_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value1 <= 3'd7;
	end
	a7ddrphy_bitslip0_r1 <= {{a7ddrphy_dfi_p3_wrdata_mask[2], a7ddrphy_dfi_p3_wrdata_mask[0], a7ddrphy_dfi_p2_wrdata_mask[2], a7ddrphy_dfi_p2_wrdata_mask[0], a7ddrphy_dfi_p1_wrdata_mask[2], a7ddrphy_dfi_p1_wrdata_mask[0], a7ddrphy_dfi_p0_wrdata_mask[2], a7ddrphy_dfi_p0_wrdata_mask[0]}, a7ddrphy_bitslip0_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value1 <= (a7ddrphy_bitslip1_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value1 <= 3'd7;
	end
	a7ddrphy_bitslip1_r1 <= {{a7ddrphy_dfi_p3_wrdata_mask[3], a7ddrphy_dfi_p3_wrdata_mask[1], a7ddrphy_dfi_p2_wrdata_mask[3], a7ddrphy_dfi_p2_wrdata_mask[1], a7ddrphy_dfi_p1_wrdata_mask[3], a7ddrphy_dfi_p1_wrdata_mask[1], a7ddrphy_dfi_p0_wrdata_mask[3], a7ddrphy_dfi_p0_wrdata_mask[1]}, a7ddrphy_bitslip1_r1[15:8]};
	a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= a7ddrphy_dq_oe_delay_tappeddelayline;
	a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0;
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value2 <= (a7ddrphy_bitslip0_value2 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value2 <= 3'd7;
	end
	a7ddrphy_bitslip0_r2 <= {{a7ddrphy_dfi_p3_wrdata[16], a7ddrphy_dfi_p3_wrdata[0], a7ddrphy_dfi_p2_wrdata[16], a7ddrphy_dfi_p2_wrdata[0], a7ddrphy_dfi_p1_wrdata[16], a7ddrphy_dfi_p1_wrdata[0], a7ddrphy_dfi_p0_wrdata[16], a7ddrphy_dfi_p0_wrdata[0]}, a7ddrphy_bitslip0_r2[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip0_value3 <= (a7ddrphy_bitslip0_value3 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip0_value3 <= 3'd7;
	end
	a7ddrphy_bitslip0_r3 <= {a7ddrphy_bitslip03, a7ddrphy_bitslip0_r3[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value2 <= (a7ddrphy_bitslip1_value2 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value2 <= 3'd7;
	end
	a7ddrphy_bitslip1_r2 <= {{a7ddrphy_dfi_p3_wrdata[17], a7ddrphy_dfi_p3_wrdata[1], a7ddrphy_dfi_p2_wrdata[17], a7ddrphy_dfi_p2_wrdata[1], a7ddrphy_dfi_p1_wrdata[17], a7ddrphy_dfi_p1_wrdata[1], a7ddrphy_dfi_p0_wrdata[17], a7ddrphy_dfi_p0_wrdata[1]}, a7ddrphy_bitslip1_r2[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip1_value3 <= (a7ddrphy_bitslip1_value3 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip1_value3 <= 3'd7;
	end
	a7ddrphy_bitslip1_r3 <= {a7ddrphy_bitslip13, a7ddrphy_bitslip1_r3[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip2_value0 <= (a7ddrphy_bitslip2_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip2_value0 <= 3'd7;
	end
	a7ddrphy_bitslip2_r0 <= {{a7ddrphy_dfi_p3_wrdata[18], a7ddrphy_dfi_p3_wrdata[2], a7ddrphy_dfi_p2_wrdata[18], a7ddrphy_dfi_p2_wrdata[2], a7ddrphy_dfi_p1_wrdata[18], a7ddrphy_dfi_p1_wrdata[2], a7ddrphy_dfi_p0_wrdata[18], a7ddrphy_dfi_p0_wrdata[2]}, a7ddrphy_bitslip2_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip2_value1 <= (a7ddrphy_bitslip2_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip2_value1 <= 3'd7;
	end
	a7ddrphy_bitslip2_r1 <= {a7ddrphy_bitslip21, a7ddrphy_bitslip2_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip3_value0 <= (a7ddrphy_bitslip3_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip3_value0 <= 3'd7;
	end
	a7ddrphy_bitslip3_r0 <= {{a7ddrphy_dfi_p3_wrdata[19], a7ddrphy_dfi_p3_wrdata[3], a7ddrphy_dfi_p2_wrdata[19], a7ddrphy_dfi_p2_wrdata[3], a7ddrphy_dfi_p1_wrdata[19], a7ddrphy_dfi_p1_wrdata[3], a7ddrphy_dfi_p0_wrdata[19], a7ddrphy_dfi_p0_wrdata[3]}, a7ddrphy_bitslip3_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip3_value1 <= (a7ddrphy_bitslip3_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip3_value1 <= 3'd7;
	end
	a7ddrphy_bitslip3_r1 <= {a7ddrphy_bitslip31, a7ddrphy_bitslip3_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip4_value0 <= (a7ddrphy_bitslip4_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip4_value0 <= 3'd7;
	end
	a7ddrphy_bitslip4_r0 <= {{a7ddrphy_dfi_p3_wrdata[20], a7ddrphy_dfi_p3_wrdata[4], a7ddrphy_dfi_p2_wrdata[20], a7ddrphy_dfi_p2_wrdata[4], a7ddrphy_dfi_p1_wrdata[20], a7ddrphy_dfi_p1_wrdata[4], a7ddrphy_dfi_p0_wrdata[20], a7ddrphy_dfi_p0_wrdata[4]}, a7ddrphy_bitslip4_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip4_value1 <= (a7ddrphy_bitslip4_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip4_value1 <= 3'd7;
	end
	a7ddrphy_bitslip4_r1 <= {a7ddrphy_bitslip41, a7ddrphy_bitslip4_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip5_value0 <= (a7ddrphy_bitslip5_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip5_value0 <= 3'd7;
	end
	a7ddrphy_bitslip5_r0 <= {{a7ddrphy_dfi_p3_wrdata[21], a7ddrphy_dfi_p3_wrdata[5], a7ddrphy_dfi_p2_wrdata[21], a7ddrphy_dfi_p2_wrdata[5], a7ddrphy_dfi_p1_wrdata[21], a7ddrphy_dfi_p1_wrdata[5], a7ddrphy_dfi_p0_wrdata[21], a7ddrphy_dfi_p0_wrdata[5]}, a7ddrphy_bitslip5_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip5_value1 <= (a7ddrphy_bitslip5_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip5_value1 <= 3'd7;
	end
	a7ddrphy_bitslip5_r1 <= {a7ddrphy_bitslip51, a7ddrphy_bitslip5_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip6_value0 <= (a7ddrphy_bitslip6_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip6_value0 <= 3'd7;
	end
	a7ddrphy_bitslip6_r0 <= {{a7ddrphy_dfi_p3_wrdata[22], a7ddrphy_dfi_p3_wrdata[6], a7ddrphy_dfi_p2_wrdata[22], a7ddrphy_dfi_p2_wrdata[6], a7ddrphy_dfi_p1_wrdata[22], a7ddrphy_dfi_p1_wrdata[6], a7ddrphy_dfi_p0_wrdata[22], a7ddrphy_dfi_p0_wrdata[6]}, a7ddrphy_bitslip6_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip6_value1 <= (a7ddrphy_bitslip6_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip6_value1 <= 3'd7;
	end
	a7ddrphy_bitslip6_r1 <= {a7ddrphy_bitslip61, a7ddrphy_bitslip6_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip7_value0 <= (a7ddrphy_bitslip7_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip7_value0 <= 3'd7;
	end
	a7ddrphy_bitslip7_r0 <= {{a7ddrphy_dfi_p3_wrdata[23], a7ddrphy_dfi_p3_wrdata[7], a7ddrphy_dfi_p2_wrdata[23], a7ddrphy_dfi_p2_wrdata[7], a7ddrphy_dfi_p1_wrdata[23], a7ddrphy_dfi_p1_wrdata[7], a7ddrphy_dfi_p0_wrdata[23], a7ddrphy_dfi_p0_wrdata[7]}, a7ddrphy_bitslip7_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip7_value1 <= (a7ddrphy_bitslip7_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip7_value1 <= 3'd7;
	end
	a7ddrphy_bitslip7_r1 <= {a7ddrphy_bitslip71, a7ddrphy_bitslip7_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip8_value0 <= (a7ddrphy_bitslip8_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip8_value0 <= 3'd7;
	end
	a7ddrphy_bitslip8_r0 <= {{a7ddrphy_dfi_p3_wrdata[24], a7ddrphy_dfi_p3_wrdata[8], a7ddrphy_dfi_p2_wrdata[24], a7ddrphy_dfi_p2_wrdata[8], a7ddrphy_dfi_p1_wrdata[24], a7ddrphy_dfi_p1_wrdata[8], a7ddrphy_dfi_p0_wrdata[24], a7ddrphy_dfi_p0_wrdata[8]}, a7ddrphy_bitslip8_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip8_value1 <= (a7ddrphy_bitslip8_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip8_value1 <= 3'd7;
	end
	a7ddrphy_bitslip8_r1 <= {a7ddrphy_bitslip81, a7ddrphy_bitslip8_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip9_value0 <= (a7ddrphy_bitslip9_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip9_value0 <= 3'd7;
	end
	a7ddrphy_bitslip9_r0 <= {{a7ddrphy_dfi_p3_wrdata[25], a7ddrphy_dfi_p3_wrdata[9], a7ddrphy_dfi_p2_wrdata[25], a7ddrphy_dfi_p2_wrdata[9], a7ddrphy_dfi_p1_wrdata[25], a7ddrphy_dfi_p1_wrdata[9], a7ddrphy_dfi_p0_wrdata[25], a7ddrphy_dfi_p0_wrdata[9]}, a7ddrphy_bitslip9_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip9_value1 <= (a7ddrphy_bitslip9_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip9_value1 <= 3'd7;
	end
	a7ddrphy_bitslip9_r1 <= {a7ddrphy_bitslip91, a7ddrphy_bitslip9_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip10_value0 <= (a7ddrphy_bitslip10_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip10_value0 <= 3'd7;
	end
	a7ddrphy_bitslip10_r0 <= {{a7ddrphy_dfi_p3_wrdata[26], a7ddrphy_dfi_p3_wrdata[10], a7ddrphy_dfi_p2_wrdata[26], a7ddrphy_dfi_p2_wrdata[10], a7ddrphy_dfi_p1_wrdata[26], a7ddrphy_dfi_p1_wrdata[10], a7ddrphy_dfi_p0_wrdata[26], a7ddrphy_dfi_p0_wrdata[10]}, a7ddrphy_bitslip10_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip10_value1 <= (a7ddrphy_bitslip10_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip10_value1 <= 3'd7;
	end
	a7ddrphy_bitslip10_r1 <= {a7ddrphy_bitslip101, a7ddrphy_bitslip10_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip11_value0 <= (a7ddrphy_bitslip11_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip11_value0 <= 3'd7;
	end
	a7ddrphy_bitslip11_r0 <= {{a7ddrphy_dfi_p3_wrdata[27], a7ddrphy_dfi_p3_wrdata[11], a7ddrphy_dfi_p2_wrdata[27], a7ddrphy_dfi_p2_wrdata[11], a7ddrphy_dfi_p1_wrdata[27], a7ddrphy_dfi_p1_wrdata[11], a7ddrphy_dfi_p0_wrdata[27], a7ddrphy_dfi_p0_wrdata[11]}, a7ddrphy_bitslip11_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip11_value1 <= (a7ddrphy_bitslip11_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip11_value1 <= 3'd7;
	end
	a7ddrphy_bitslip11_r1 <= {a7ddrphy_bitslip111, a7ddrphy_bitslip11_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip12_value0 <= (a7ddrphy_bitslip12_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip12_value0 <= 3'd7;
	end
	a7ddrphy_bitslip12_r0 <= {{a7ddrphy_dfi_p3_wrdata[28], a7ddrphy_dfi_p3_wrdata[12], a7ddrphy_dfi_p2_wrdata[28], a7ddrphy_dfi_p2_wrdata[12], a7ddrphy_dfi_p1_wrdata[28], a7ddrphy_dfi_p1_wrdata[12], a7ddrphy_dfi_p0_wrdata[28], a7ddrphy_dfi_p0_wrdata[12]}, a7ddrphy_bitslip12_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip12_value1 <= (a7ddrphy_bitslip12_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip12_value1 <= 3'd7;
	end
	a7ddrphy_bitslip12_r1 <= {a7ddrphy_bitslip121, a7ddrphy_bitslip12_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip13_value0 <= (a7ddrphy_bitslip13_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip13_value0 <= 3'd7;
	end
	a7ddrphy_bitslip13_r0 <= {{a7ddrphy_dfi_p3_wrdata[29], a7ddrphy_dfi_p3_wrdata[13], a7ddrphy_dfi_p2_wrdata[29], a7ddrphy_dfi_p2_wrdata[13], a7ddrphy_dfi_p1_wrdata[29], a7ddrphy_dfi_p1_wrdata[13], a7ddrphy_dfi_p0_wrdata[29], a7ddrphy_dfi_p0_wrdata[13]}, a7ddrphy_bitslip13_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip13_value1 <= (a7ddrphy_bitslip13_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip13_value1 <= 3'd7;
	end
	a7ddrphy_bitslip13_r1 <= {a7ddrphy_bitslip131, a7ddrphy_bitslip13_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip14_value0 <= (a7ddrphy_bitslip14_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip14_value0 <= 3'd7;
	end
	a7ddrphy_bitslip14_r0 <= {{a7ddrphy_dfi_p3_wrdata[30], a7ddrphy_dfi_p3_wrdata[14], a7ddrphy_dfi_p2_wrdata[30], a7ddrphy_dfi_p2_wrdata[14], a7ddrphy_dfi_p1_wrdata[30], a7ddrphy_dfi_p1_wrdata[14], a7ddrphy_dfi_p0_wrdata[30], a7ddrphy_dfi_p0_wrdata[14]}, a7ddrphy_bitslip14_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip14_value1 <= (a7ddrphy_bitslip14_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip14_value1 <= 3'd7;
	end
	a7ddrphy_bitslip14_r1 <= {a7ddrphy_bitslip141, a7ddrphy_bitslip14_r1[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip15_value0 <= (a7ddrphy_bitslip15_value0 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_wdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip15_value0 <= 3'd7;
	end
	a7ddrphy_bitslip15_r0 <= {{a7ddrphy_dfi_p3_wrdata[31], a7ddrphy_dfi_p3_wrdata[15], a7ddrphy_dfi_p2_wrdata[31], a7ddrphy_dfi_p2_wrdata[15], a7ddrphy_dfi_p1_wrdata[31], a7ddrphy_dfi_p1_wrdata[15], a7ddrphy_dfi_p0_wrdata[31], a7ddrphy_dfi_p0_wrdata[15]}, a7ddrphy_bitslip15_r0[15:8]};
	if ((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_re)) begin
		a7ddrphy_bitslip15_value1 <= (a7ddrphy_bitslip15_value1 + 1'd1);
	end
	if (((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_bitslip_rst_re) | a7ddrphy_rst_storage)) begin
		a7ddrphy_bitslip15_value1 <= 3'd7;
	end
	a7ddrphy_bitslip15_r1 <= {a7ddrphy_bitslip151, a7ddrphy_bitslip15_r1[15:8]};
	a7ddrphy_rddata_en_tappeddelayline0 <= (((a7ddrphy_dfi_p0_rddata_en | a7ddrphy_dfi_p1_rddata_en) | a7ddrphy_dfi_p2_rddata_en) | a7ddrphy_dfi_p3_rddata_en);
	a7ddrphy_rddata_en_tappeddelayline1 <= a7ddrphy_rddata_en_tappeddelayline0;
	a7ddrphy_rddata_en_tappeddelayline2 <= a7ddrphy_rddata_en_tappeddelayline1;
	a7ddrphy_rddata_en_tappeddelayline3 <= a7ddrphy_rddata_en_tappeddelayline2;
	a7ddrphy_rddata_en_tappeddelayline4 <= a7ddrphy_rddata_en_tappeddelayline3;
	a7ddrphy_rddata_en_tappeddelayline5 <= a7ddrphy_rddata_en_tappeddelayline4;
	a7ddrphy_rddata_en_tappeddelayline6 <= a7ddrphy_rddata_en_tappeddelayline5;
	a7ddrphy_rddata_en_tappeddelayline7 <= a7ddrphy_rddata_en_tappeddelayline6;
	a7ddrphy_wrdata_en_tappeddelayline0 <= (((a7ddrphy_dfi_p0_wrdata_en | a7ddrphy_dfi_p1_wrdata_en) | a7ddrphy_dfi_p2_wrdata_en) | a7ddrphy_dfi_p3_wrdata_en);
	a7ddrphy_wrdata_en_tappeddelayline1 <= a7ddrphy_wrdata_en_tappeddelayline0;
	a7ddrphy_wrdata_en_tappeddelayline2 <= a7ddrphy_wrdata_en_tappeddelayline1;
	if (basesoc_sdram_inti_p0_rddata_valid) begin
		basesoc_sdram_phaseinjector0_rddata_status <= basesoc_sdram_inti_p0_rddata;
	end
	if (basesoc_sdram_inti_p1_rddata_valid) begin
		basesoc_sdram_phaseinjector1_rddata_status <= basesoc_sdram_inti_p1_rddata;
	end
	if (basesoc_sdram_inti_p2_rddata_valid) begin
		basesoc_sdram_phaseinjector2_rddata_status <= basesoc_sdram_inti_p2_rddata;
	end
	if (basesoc_sdram_inti_p3_rddata_valid) begin
		basesoc_sdram_phaseinjector3_rddata_status <= basesoc_sdram_inti_p3_rddata;
	end
	if ((basesoc_sdram_timer_wait & (~basesoc_sdram_timer_done0))) begin
		basesoc_sdram_timer_count1 <= (basesoc_sdram_timer_count1 - 1'd1);
	end else begin
		basesoc_sdram_timer_count1 <= 10'd781;
	end
	basesoc_sdram_postponer_req_o <= 1'd0;
	if (basesoc_sdram_postponer_req_i) begin
		basesoc_sdram_postponer_count <= (basesoc_sdram_postponer_count - 1'd1);
		if ((basesoc_sdram_postponer_count == 1'd0)) begin
			basesoc_sdram_postponer_count <= 1'd0;
			basesoc_sdram_postponer_req_o <= 1'd1;
		end
	end
	if (basesoc_sdram_sequencer_start0) begin
		basesoc_sdram_sequencer_count <= 1'd0;
	end else begin
		if (basesoc_sdram_sequencer_done1) begin
			if ((basesoc_sdram_sequencer_count != 1'd0)) begin
				basesoc_sdram_sequencer_count <= (basesoc_sdram_sequencer_count - 1'd1);
			end
		end
	end
	basesoc_sdram_cmd_payload_a <= 1'd0;
	basesoc_sdram_cmd_payload_ba <= 1'd0;
	basesoc_sdram_cmd_payload_cas <= 1'd0;
	basesoc_sdram_cmd_payload_ras <= 1'd0;
	basesoc_sdram_cmd_payload_we <= 1'd0;
	basesoc_sdram_sequencer_done1 <= 1'd0;
	if ((basesoc_sdram_sequencer_start1 & (basesoc_sdram_sequencer_counter == 1'd0))) begin
		basesoc_sdram_cmd_payload_a <= 11'd1024;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd1;
		basesoc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((basesoc_sdram_sequencer_counter == 2'd3)) begin
		basesoc_sdram_cmd_payload_a <= 11'd1024;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd1;
		basesoc_sdram_cmd_payload_ras <= 1'd1;
		basesoc_sdram_cmd_payload_we <= 1'd0;
	end
	if ((basesoc_sdram_sequencer_counter == 7'd73)) begin
		basesoc_sdram_cmd_payload_a <= 1'd0;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd0;
		basesoc_sdram_sequencer_done1 <= 1'd1;
	end
	if ((basesoc_sdram_sequencer_counter == 7'd73)) begin
		basesoc_sdram_sequencer_counter <= 1'd0;
	end else begin
		if ((basesoc_sdram_sequencer_counter != 1'd0)) begin
			basesoc_sdram_sequencer_counter <= (basesoc_sdram_sequencer_counter + 1'd1);
		end else begin
			if (basesoc_sdram_sequencer_start1) begin
				basesoc_sdram_sequencer_counter <= 1'd1;
			end
		end
	end
	if ((basesoc_sdram_zqcs_timer_wait & (~basesoc_sdram_zqcs_timer_done0))) begin
		basesoc_sdram_zqcs_timer_count1 <= (basesoc_sdram_zqcs_timer_count1 - 1'd1);
	end else begin
		basesoc_sdram_zqcs_timer_count1 <= 27'd99999999;
	end
	basesoc_sdram_zqcs_executer_done <= 1'd0;
	if ((basesoc_sdram_zqcs_executer_start & (basesoc_sdram_zqcs_executer_counter == 1'd0))) begin
		basesoc_sdram_cmd_payload_a <= 11'd1024;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd1;
		basesoc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((basesoc_sdram_zqcs_executer_counter == 2'd3)) begin
		basesoc_sdram_cmd_payload_a <= 1'd0;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((basesoc_sdram_zqcs_executer_counter == 5'd19)) begin
		basesoc_sdram_cmd_payload_a <= 1'd0;
		basesoc_sdram_cmd_payload_ba <= 1'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd0;
		basesoc_sdram_zqcs_executer_done <= 1'd1;
	end
	if ((basesoc_sdram_zqcs_executer_counter == 5'd19)) begin
		basesoc_sdram_zqcs_executer_counter <= 1'd0;
	end else begin
		if ((basesoc_sdram_zqcs_executer_counter != 1'd0)) begin
			basesoc_sdram_zqcs_executer_counter <= (basesoc_sdram_zqcs_executer_counter + 1'd1);
		end else begin
			if (basesoc_sdram_zqcs_executer_start) begin
				basesoc_sdram_zqcs_executer_counter <= 1'd1;
			end
		end
	end
	subfragments_refresher_state <= subfragments_refresher_next_state;
	if (basesoc_sdram_bankmachine0_row_close) begin
		basesoc_sdram_bankmachine0_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine0_row_open) begin
			basesoc_sdram_bankmachine0_row_opened <= 1'd1;
			basesoc_sdram_bankmachine0_row <= basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & basesoc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~basesoc_sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine0_cmd_buffer_source_valid) | basesoc_sdram_bankmachine0_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine0_cmd_buffer_source_valid <= basesoc_sdram_bankmachine0_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine0_cmd_buffer_source_first <= basesoc_sdram_bankmachine0_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine0_cmd_buffer_source_last <= basesoc_sdram_bankmachine0_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine0_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine0_twtpcon_valid) begin
		basesoc_sdram_bankmachine0_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine0_twtpcon_ready)) begin
			basesoc_sdram_bankmachine0_twtpcon_count <= (basesoc_sdram_bankmachine0_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine0_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine0_trccon_valid) begin
		basesoc_sdram_bankmachine0_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine0_trccon_ready)) begin
			basesoc_sdram_bankmachine0_trccon_count <= (basesoc_sdram_bankmachine0_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine0_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine0_trascon_valid) begin
		basesoc_sdram_bankmachine0_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine0_trascon_ready)) begin
			basesoc_sdram_bankmachine0_trascon_count <= (basesoc_sdram_bankmachine0_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine0_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine0_state <= subfragments_bankmachine0_next_state;
	if (basesoc_sdram_bankmachine1_row_close) begin
		basesoc_sdram_bankmachine1_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine1_row_open) begin
			basesoc_sdram_bankmachine1_row_opened <= 1'd1;
			basesoc_sdram_bankmachine1_row <= basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & basesoc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~basesoc_sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine1_cmd_buffer_source_valid) | basesoc_sdram_bankmachine1_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine1_cmd_buffer_source_valid <= basesoc_sdram_bankmachine1_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine1_cmd_buffer_source_first <= basesoc_sdram_bankmachine1_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine1_cmd_buffer_source_last <= basesoc_sdram_bankmachine1_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine1_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine1_twtpcon_valid) begin
		basesoc_sdram_bankmachine1_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine1_twtpcon_ready)) begin
			basesoc_sdram_bankmachine1_twtpcon_count <= (basesoc_sdram_bankmachine1_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine1_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine1_trccon_valid) begin
		basesoc_sdram_bankmachine1_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine1_trccon_ready)) begin
			basesoc_sdram_bankmachine1_trccon_count <= (basesoc_sdram_bankmachine1_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine1_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine1_trascon_valid) begin
		basesoc_sdram_bankmachine1_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine1_trascon_ready)) begin
			basesoc_sdram_bankmachine1_trascon_count <= (basesoc_sdram_bankmachine1_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine1_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine1_state <= subfragments_bankmachine1_next_state;
	if (basesoc_sdram_bankmachine2_row_close) begin
		basesoc_sdram_bankmachine2_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine2_row_open) begin
			basesoc_sdram_bankmachine2_row_opened <= 1'd1;
			basesoc_sdram_bankmachine2_row <= basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & basesoc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~basesoc_sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine2_cmd_buffer_source_valid) | basesoc_sdram_bankmachine2_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine2_cmd_buffer_source_valid <= basesoc_sdram_bankmachine2_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine2_cmd_buffer_source_first <= basesoc_sdram_bankmachine2_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine2_cmd_buffer_source_last <= basesoc_sdram_bankmachine2_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine2_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine2_twtpcon_valid) begin
		basesoc_sdram_bankmachine2_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine2_twtpcon_ready)) begin
			basesoc_sdram_bankmachine2_twtpcon_count <= (basesoc_sdram_bankmachine2_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine2_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine2_trccon_valid) begin
		basesoc_sdram_bankmachine2_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine2_trccon_ready)) begin
			basesoc_sdram_bankmachine2_trccon_count <= (basesoc_sdram_bankmachine2_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine2_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine2_trascon_valid) begin
		basesoc_sdram_bankmachine2_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine2_trascon_ready)) begin
			basesoc_sdram_bankmachine2_trascon_count <= (basesoc_sdram_bankmachine2_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine2_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine2_state <= subfragments_bankmachine2_next_state;
	if (basesoc_sdram_bankmachine3_row_close) begin
		basesoc_sdram_bankmachine3_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine3_row_open) begin
			basesoc_sdram_bankmachine3_row_opened <= 1'd1;
			basesoc_sdram_bankmachine3_row <= basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & basesoc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~basesoc_sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine3_cmd_buffer_source_valid) | basesoc_sdram_bankmachine3_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine3_cmd_buffer_source_valid <= basesoc_sdram_bankmachine3_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine3_cmd_buffer_source_first <= basesoc_sdram_bankmachine3_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine3_cmd_buffer_source_last <= basesoc_sdram_bankmachine3_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine3_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine3_twtpcon_valid) begin
		basesoc_sdram_bankmachine3_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine3_twtpcon_ready)) begin
			basesoc_sdram_bankmachine3_twtpcon_count <= (basesoc_sdram_bankmachine3_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine3_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine3_trccon_valid) begin
		basesoc_sdram_bankmachine3_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine3_trccon_ready)) begin
			basesoc_sdram_bankmachine3_trccon_count <= (basesoc_sdram_bankmachine3_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine3_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine3_trascon_valid) begin
		basesoc_sdram_bankmachine3_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine3_trascon_ready)) begin
			basesoc_sdram_bankmachine3_trascon_count <= (basesoc_sdram_bankmachine3_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine3_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine3_state <= subfragments_bankmachine3_next_state;
	if (basesoc_sdram_bankmachine4_row_close) begin
		basesoc_sdram_bankmachine4_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine4_row_open) begin
			basesoc_sdram_bankmachine4_row_opened <= 1'd1;
			basesoc_sdram_bankmachine4_row <= basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & basesoc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~basesoc_sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine4_cmd_buffer_source_valid) | basesoc_sdram_bankmachine4_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine4_cmd_buffer_source_valid <= basesoc_sdram_bankmachine4_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine4_cmd_buffer_source_first <= basesoc_sdram_bankmachine4_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine4_cmd_buffer_source_last <= basesoc_sdram_bankmachine4_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine4_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine4_twtpcon_valid) begin
		basesoc_sdram_bankmachine4_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine4_twtpcon_ready)) begin
			basesoc_sdram_bankmachine4_twtpcon_count <= (basesoc_sdram_bankmachine4_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine4_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine4_trccon_valid) begin
		basesoc_sdram_bankmachine4_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine4_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine4_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine4_trccon_ready)) begin
			basesoc_sdram_bankmachine4_trccon_count <= (basesoc_sdram_bankmachine4_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine4_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine4_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine4_trascon_valid) begin
		basesoc_sdram_bankmachine4_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine4_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine4_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine4_trascon_ready)) begin
			basesoc_sdram_bankmachine4_trascon_count <= (basesoc_sdram_bankmachine4_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine4_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine4_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine4_state <= subfragments_bankmachine4_next_state;
	if (basesoc_sdram_bankmachine5_row_close) begin
		basesoc_sdram_bankmachine5_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine5_row_open) begin
			basesoc_sdram_bankmachine5_row_opened <= 1'd1;
			basesoc_sdram_bankmachine5_row <= basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & basesoc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~basesoc_sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine5_cmd_buffer_source_valid) | basesoc_sdram_bankmachine5_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine5_cmd_buffer_source_valid <= basesoc_sdram_bankmachine5_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine5_cmd_buffer_source_first <= basesoc_sdram_bankmachine5_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine5_cmd_buffer_source_last <= basesoc_sdram_bankmachine5_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine5_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine5_twtpcon_valid) begin
		basesoc_sdram_bankmachine5_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine5_twtpcon_ready)) begin
			basesoc_sdram_bankmachine5_twtpcon_count <= (basesoc_sdram_bankmachine5_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine5_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine5_trccon_valid) begin
		basesoc_sdram_bankmachine5_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine5_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine5_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine5_trccon_ready)) begin
			basesoc_sdram_bankmachine5_trccon_count <= (basesoc_sdram_bankmachine5_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine5_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine5_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine5_trascon_valid) begin
		basesoc_sdram_bankmachine5_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine5_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine5_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine5_trascon_ready)) begin
			basesoc_sdram_bankmachine5_trascon_count <= (basesoc_sdram_bankmachine5_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine5_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine5_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine5_state <= subfragments_bankmachine5_next_state;
	if (basesoc_sdram_bankmachine6_row_close) begin
		basesoc_sdram_bankmachine6_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine6_row_open) begin
			basesoc_sdram_bankmachine6_row_opened <= 1'd1;
			basesoc_sdram_bankmachine6_row <= basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & basesoc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~basesoc_sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine6_cmd_buffer_source_valid) | basesoc_sdram_bankmachine6_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine6_cmd_buffer_source_valid <= basesoc_sdram_bankmachine6_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine6_cmd_buffer_source_first <= basesoc_sdram_bankmachine6_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine6_cmd_buffer_source_last <= basesoc_sdram_bankmachine6_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine6_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine6_twtpcon_valid) begin
		basesoc_sdram_bankmachine6_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine6_twtpcon_ready)) begin
			basesoc_sdram_bankmachine6_twtpcon_count <= (basesoc_sdram_bankmachine6_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine6_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine6_trccon_valid) begin
		basesoc_sdram_bankmachine6_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine6_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine6_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine6_trccon_ready)) begin
			basesoc_sdram_bankmachine6_trccon_count <= (basesoc_sdram_bankmachine6_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine6_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine6_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine6_trascon_valid) begin
		basesoc_sdram_bankmachine6_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine6_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine6_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine6_trascon_ready)) begin
			basesoc_sdram_bankmachine6_trascon_count <= (basesoc_sdram_bankmachine6_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine6_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine6_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine6_state <= subfragments_bankmachine6_next_state;
	if (basesoc_sdram_bankmachine7_row_close) begin
		basesoc_sdram_bankmachine7_row_opened <= 1'd0;
	end else begin
		if (basesoc_sdram_bankmachine7_row_open) begin
			basesoc_sdram_bankmachine7_row_opened <= 1'd1;
			basesoc_sdram_bankmachine7_row <= basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr[22:7];
		end
	end
	if (((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & basesoc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~basesoc_sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		if ((~basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read)) begin
			basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
			basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level <= (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~basesoc_sdram_bankmachine7_cmd_buffer_source_valid) | basesoc_sdram_bankmachine7_cmd_buffer_source_ready)) begin
		basesoc_sdram_bankmachine7_cmd_buffer_source_valid <= basesoc_sdram_bankmachine7_cmd_buffer_sink_valid;
		basesoc_sdram_bankmachine7_cmd_buffer_source_first <= basesoc_sdram_bankmachine7_cmd_buffer_sink_first;
		basesoc_sdram_bankmachine7_cmd_buffer_source_last <= basesoc_sdram_bankmachine7_cmd_buffer_sink_last;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we <= basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_we;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr <= basesoc_sdram_bankmachine7_cmd_buffer_sink_payload_addr;
	end
	if (basesoc_sdram_bankmachine7_twtpcon_valid) begin
		basesoc_sdram_bankmachine7_twtpcon_count <= 3'd5;
		if (1'd0) begin
			basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine7_twtpcon_ready)) begin
			basesoc_sdram_bankmachine7_twtpcon_count <= (basesoc_sdram_bankmachine7_twtpcon_count - 1'd1);
			if ((basesoc_sdram_bankmachine7_twtpcon_count == 1'd1)) begin
				basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine7_trccon_valid) begin
		basesoc_sdram_bankmachine7_trccon_count <= 3'd6;
		if (1'd0) begin
			basesoc_sdram_bankmachine7_trccon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine7_trccon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine7_trccon_ready)) begin
			basesoc_sdram_bankmachine7_trccon_count <= (basesoc_sdram_bankmachine7_trccon_count - 1'd1);
			if ((basesoc_sdram_bankmachine7_trccon_count == 1'd1)) begin
				basesoc_sdram_bankmachine7_trccon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_bankmachine7_trascon_valid) begin
		basesoc_sdram_bankmachine7_trascon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_bankmachine7_trascon_ready <= 1'd1;
		end else begin
			basesoc_sdram_bankmachine7_trascon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_bankmachine7_trascon_ready)) begin
			basesoc_sdram_bankmachine7_trascon_count <= (basesoc_sdram_bankmachine7_trascon_count - 1'd1);
			if ((basesoc_sdram_bankmachine7_trascon_count == 1'd1)) begin
				basesoc_sdram_bankmachine7_trascon_ready <= 1'd1;
			end
		end
	end
	subfragments_bankmachine7_state <= subfragments_bankmachine7_next_state;
	if ((~basesoc_sdram_en0)) begin
		basesoc_sdram_time0 <= 5'd31;
	end else begin
		if ((~basesoc_sdram_max_time0)) begin
			basesoc_sdram_time0 <= (basesoc_sdram_time0 - 1'd1);
		end
	end
	if ((~basesoc_sdram_en1)) begin
		basesoc_sdram_time1 <= 4'd15;
	end else begin
		if ((~basesoc_sdram_max_time1)) begin
			basesoc_sdram_time1 <= (basesoc_sdram_time1 - 1'd1);
		end
	end
	if (basesoc_sdram_choose_cmd_ce) begin
		case (basesoc_sdram_choose_cmd_grant)
			1'd0: begin
				if (basesoc_sdram_choose_cmd_request[1]) begin
					basesoc_sdram_choose_cmd_grant <= 1'd1;
				end else begin
					if (basesoc_sdram_choose_cmd_request[2]) begin
						basesoc_sdram_choose_cmd_grant <= 2'd2;
					end else begin
						if (basesoc_sdram_choose_cmd_request[3]) begin
							basesoc_sdram_choose_cmd_grant <= 2'd3;
						end else begin
							if (basesoc_sdram_choose_cmd_request[4]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd4;
							end else begin
								if (basesoc_sdram_choose_cmd_request[5]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd5;
								end else begin
									if (basesoc_sdram_choose_cmd_request[6]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd6;
									end else begin
										if (basesoc_sdram_choose_cmd_request[7]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (basesoc_sdram_choose_cmd_request[2]) begin
					basesoc_sdram_choose_cmd_grant <= 2'd2;
				end else begin
					if (basesoc_sdram_choose_cmd_request[3]) begin
						basesoc_sdram_choose_cmd_grant <= 2'd3;
					end else begin
						if (basesoc_sdram_choose_cmd_request[4]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd4;
						end else begin
							if (basesoc_sdram_choose_cmd_request[5]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd5;
							end else begin
								if (basesoc_sdram_choose_cmd_request[6]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd6;
								end else begin
									if (basesoc_sdram_choose_cmd_request[7]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd7;
									end else begin
										if (basesoc_sdram_choose_cmd_request[0]) begin
											basesoc_sdram_choose_cmd_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (basesoc_sdram_choose_cmd_request[3]) begin
					basesoc_sdram_choose_cmd_grant <= 2'd3;
				end else begin
					if (basesoc_sdram_choose_cmd_request[4]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd4;
					end else begin
						if (basesoc_sdram_choose_cmd_request[5]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd5;
						end else begin
							if (basesoc_sdram_choose_cmd_request[6]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd6;
							end else begin
								if (basesoc_sdram_choose_cmd_request[7]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd7;
								end else begin
									if (basesoc_sdram_choose_cmd_request[0]) begin
										basesoc_sdram_choose_cmd_grant <= 1'd0;
									end else begin
										if (basesoc_sdram_choose_cmd_request[1]) begin
											basesoc_sdram_choose_cmd_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (basesoc_sdram_choose_cmd_request[4]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd4;
				end else begin
					if (basesoc_sdram_choose_cmd_request[5]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd5;
					end else begin
						if (basesoc_sdram_choose_cmd_request[6]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd6;
						end else begin
							if (basesoc_sdram_choose_cmd_request[7]) begin
								basesoc_sdram_choose_cmd_grant <= 3'd7;
							end else begin
								if (basesoc_sdram_choose_cmd_request[0]) begin
									basesoc_sdram_choose_cmd_grant <= 1'd0;
								end else begin
									if (basesoc_sdram_choose_cmd_request[1]) begin
										basesoc_sdram_choose_cmd_grant <= 1'd1;
									end else begin
										if (basesoc_sdram_choose_cmd_request[2]) begin
											basesoc_sdram_choose_cmd_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (basesoc_sdram_choose_cmd_request[5]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd5;
				end else begin
					if (basesoc_sdram_choose_cmd_request[6]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd6;
					end else begin
						if (basesoc_sdram_choose_cmd_request[7]) begin
							basesoc_sdram_choose_cmd_grant <= 3'd7;
						end else begin
							if (basesoc_sdram_choose_cmd_request[0]) begin
								basesoc_sdram_choose_cmd_grant <= 1'd0;
							end else begin
								if (basesoc_sdram_choose_cmd_request[1]) begin
									basesoc_sdram_choose_cmd_grant <= 1'd1;
								end else begin
									if (basesoc_sdram_choose_cmd_request[2]) begin
										basesoc_sdram_choose_cmd_grant <= 2'd2;
									end else begin
										if (basesoc_sdram_choose_cmd_request[3]) begin
											basesoc_sdram_choose_cmd_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (basesoc_sdram_choose_cmd_request[6]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd6;
				end else begin
					if (basesoc_sdram_choose_cmd_request[7]) begin
						basesoc_sdram_choose_cmd_grant <= 3'd7;
					end else begin
						if (basesoc_sdram_choose_cmd_request[0]) begin
							basesoc_sdram_choose_cmd_grant <= 1'd0;
						end else begin
							if (basesoc_sdram_choose_cmd_request[1]) begin
								basesoc_sdram_choose_cmd_grant <= 1'd1;
							end else begin
								if (basesoc_sdram_choose_cmd_request[2]) begin
									basesoc_sdram_choose_cmd_grant <= 2'd2;
								end else begin
									if (basesoc_sdram_choose_cmd_request[3]) begin
										basesoc_sdram_choose_cmd_grant <= 2'd3;
									end else begin
										if (basesoc_sdram_choose_cmd_request[4]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (basesoc_sdram_choose_cmd_request[7]) begin
					basesoc_sdram_choose_cmd_grant <= 3'd7;
				end else begin
					if (basesoc_sdram_choose_cmd_request[0]) begin
						basesoc_sdram_choose_cmd_grant <= 1'd0;
					end else begin
						if (basesoc_sdram_choose_cmd_request[1]) begin
							basesoc_sdram_choose_cmd_grant <= 1'd1;
						end else begin
							if (basesoc_sdram_choose_cmd_request[2]) begin
								basesoc_sdram_choose_cmd_grant <= 2'd2;
							end else begin
								if (basesoc_sdram_choose_cmd_request[3]) begin
									basesoc_sdram_choose_cmd_grant <= 2'd3;
								end else begin
									if (basesoc_sdram_choose_cmd_request[4]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd4;
									end else begin
										if (basesoc_sdram_choose_cmd_request[5]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (basesoc_sdram_choose_cmd_request[0]) begin
					basesoc_sdram_choose_cmd_grant <= 1'd0;
				end else begin
					if (basesoc_sdram_choose_cmd_request[1]) begin
						basesoc_sdram_choose_cmd_grant <= 1'd1;
					end else begin
						if (basesoc_sdram_choose_cmd_request[2]) begin
							basesoc_sdram_choose_cmd_grant <= 2'd2;
						end else begin
							if (basesoc_sdram_choose_cmd_request[3]) begin
								basesoc_sdram_choose_cmd_grant <= 2'd3;
							end else begin
								if (basesoc_sdram_choose_cmd_request[4]) begin
									basesoc_sdram_choose_cmd_grant <= 3'd4;
								end else begin
									if (basesoc_sdram_choose_cmd_request[5]) begin
										basesoc_sdram_choose_cmd_grant <= 3'd5;
									end else begin
										if (basesoc_sdram_choose_cmd_request[6]) begin
											basesoc_sdram_choose_cmd_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	if (basesoc_sdram_choose_req_ce) begin
		case (basesoc_sdram_choose_req_grant)
			1'd0: begin
				if (basesoc_sdram_choose_req_request[1]) begin
					basesoc_sdram_choose_req_grant <= 1'd1;
				end else begin
					if (basesoc_sdram_choose_req_request[2]) begin
						basesoc_sdram_choose_req_grant <= 2'd2;
					end else begin
						if (basesoc_sdram_choose_req_request[3]) begin
							basesoc_sdram_choose_req_grant <= 2'd3;
						end else begin
							if (basesoc_sdram_choose_req_request[4]) begin
								basesoc_sdram_choose_req_grant <= 3'd4;
							end else begin
								if (basesoc_sdram_choose_req_request[5]) begin
									basesoc_sdram_choose_req_grant <= 3'd5;
								end else begin
									if (basesoc_sdram_choose_req_request[6]) begin
										basesoc_sdram_choose_req_grant <= 3'd6;
									end else begin
										if (basesoc_sdram_choose_req_request[7]) begin
											basesoc_sdram_choose_req_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (basesoc_sdram_choose_req_request[2]) begin
					basesoc_sdram_choose_req_grant <= 2'd2;
				end else begin
					if (basesoc_sdram_choose_req_request[3]) begin
						basesoc_sdram_choose_req_grant <= 2'd3;
					end else begin
						if (basesoc_sdram_choose_req_request[4]) begin
							basesoc_sdram_choose_req_grant <= 3'd4;
						end else begin
							if (basesoc_sdram_choose_req_request[5]) begin
								basesoc_sdram_choose_req_grant <= 3'd5;
							end else begin
								if (basesoc_sdram_choose_req_request[6]) begin
									basesoc_sdram_choose_req_grant <= 3'd6;
								end else begin
									if (basesoc_sdram_choose_req_request[7]) begin
										basesoc_sdram_choose_req_grant <= 3'd7;
									end else begin
										if (basesoc_sdram_choose_req_request[0]) begin
											basesoc_sdram_choose_req_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (basesoc_sdram_choose_req_request[3]) begin
					basesoc_sdram_choose_req_grant <= 2'd3;
				end else begin
					if (basesoc_sdram_choose_req_request[4]) begin
						basesoc_sdram_choose_req_grant <= 3'd4;
					end else begin
						if (basesoc_sdram_choose_req_request[5]) begin
							basesoc_sdram_choose_req_grant <= 3'd5;
						end else begin
							if (basesoc_sdram_choose_req_request[6]) begin
								basesoc_sdram_choose_req_grant <= 3'd6;
							end else begin
								if (basesoc_sdram_choose_req_request[7]) begin
									basesoc_sdram_choose_req_grant <= 3'd7;
								end else begin
									if (basesoc_sdram_choose_req_request[0]) begin
										basesoc_sdram_choose_req_grant <= 1'd0;
									end else begin
										if (basesoc_sdram_choose_req_request[1]) begin
											basesoc_sdram_choose_req_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (basesoc_sdram_choose_req_request[4]) begin
					basesoc_sdram_choose_req_grant <= 3'd4;
				end else begin
					if (basesoc_sdram_choose_req_request[5]) begin
						basesoc_sdram_choose_req_grant <= 3'd5;
					end else begin
						if (basesoc_sdram_choose_req_request[6]) begin
							basesoc_sdram_choose_req_grant <= 3'd6;
						end else begin
							if (basesoc_sdram_choose_req_request[7]) begin
								basesoc_sdram_choose_req_grant <= 3'd7;
							end else begin
								if (basesoc_sdram_choose_req_request[0]) begin
									basesoc_sdram_choose_req_grant <= 1'd0;
								end else begin
									if (basesoc_sdram_choose_req_request[1]) begin
										basesoc_sdram_choose_req_grant <= 1'd1;
									end else begin
										if (basesoc_sdram_choose_req_request[2]) begin
											basesoc_sdram_choose_req_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (basesoc_sdram_choose_req_request[5]) begin
					basesoc_sdram_choose_req_grant <= 3'd5;
				end else begin
					if (basesoc_sdram_choose_req_request[6]) begin
						basesoc_sdram_choose_req_grant <= 3'd6;
					end else begin
						if (basesoc_sdram_choose_req_request[7]) begin
							basesoc_sdram_choose_req_grant <= 3'd7;
						end else begin
							if (basesoc_sdram_choose_req_request[0]) begin
								basesoc_sdram_choose_req_grant <= 1'd0;
							end else begin
								if (basesoc_sdram_choose_req_request[1]) begin
									basesoc_sdram_choose_req_grant <= 1'd1;
								end else begin
									if (basesoc_sdram_choose_req_request[2]) begin
										basesoc_sdram_choose_req_grant <= 2'd2;
									end else begin
										if (basesoc_sdram_choose_req_request[3]) begin
											basesoc_sdram_choose_req_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (basesoc_sdram_choose_req_request[6]) begin
					basesoc_sdram_choose_req_grant <= 3'd6;
				end else begin
					if (basesoc_sdram_choose_req_request[7]) begin
						basesoc_sdram_choose_req_grant <= 3'd7;
					end else begin
						if (basesoc_sdram_choose_req_request[0]) begin
							basesoc_sdram_choose_req_grant <= 1'd0;
						end else begin
							if (basesoc_sdram_choose_req_request[1]) begin
								basesoc_sdram_choose_req_grant <= 1'd1;
							end else begin
								if (basesoc_sdram_choose_req_request[2]) begin
									basesoc_sdram_choose_req_grant <= 2'd2;
								end else begin
									if (basesoc_sdram_choose_req_request[3]) begin
										basesoc_sdram_choose_req_grant <= 2'd3;
									end else begin
										if (basesoc_sdram_choose_req_request[4]) begin
											basesoc_sdram_choose_req_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (basesoc_sdram_choose_req_request[7]) begin
					basesoc_sdram_choose_req_grant <= 3'd7;
				end else begin
					if (basesoc_sdram_choose_req_request[0]) begin
						basesoc_sdram_choose_req_grant <= 1'd0;
					end else begin
						if (basesoc_sdram_choose_req_request[1]) begin
							basesoc_sdram_choose_req_grant <= 1'd1;
						end else begin
							if (basesoc_sdram_choose_req_request[2]) begin
								basesoc_sdram_choose_req_grant <= 2'd2;
							end else begin
								if (basesoc_sdram_choose_req_request[3]) begin
									basesoc_sdram_choose_req_grant <= 2'd3;
								end else begin
									if (basesoc_sdram_choose_req_request[4]) begin
										basesoc_sdram_choose_req_grant <= 3'd4;
									end else begin
										if (basesoc_sdram_choose_req_request[5]) begin
											basesoc_sdram_choose_req_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (basesoc_sdram_choose_req_request[0]) begin
					basesoc_sdram_choose_req_grant <= 1'd0;
				end else begin
					if (basesoc_sdram_choose_req_request[1]) begin
						basesoc_sdram_choose_req_grant <= 1'd1;
					end else begin
						if (basesoc_sdram_choose_req_request[2]) begin
							basesoc_sdram_choose_req_grant <= 2'd2;
						end else begin
							if (basesoc_sdram_choose_req_request[3]) begin
								basesoc_sdram_choose_req_grant <= 2'd3;
							end else begin
								if (basesoc_sdram_choose_req_request[4]) begin
									basesoc_sdram_choose_req_grant <= 3'd4;
								end else begin
									if (basesoc_sdram_choose_req_request[5]) begin
										basesoc_sdram_choose_req_grant <= 3'd5;
									end else begin
										if (basesoc_sdram_choose_req_request[6]) begin
											basesoc_sdram_choose_req_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	basesoc_sdram_dfi_p0_cs_n <= 1'd0;
	basesoc_sdram_dfi_p0_bank <= sync_rhs_array_muxed0;
	basesoc_sdram_dfi_p0_address <= sync_rhs_array_muxed1;
	basesoc_sdram_dfi_p0_cas_n <= (~sync_rhs_array_muxed2);
	basesoc_sdram_dfi_p0_ras_n <= (~sync_rhs_array_muxed3);
	basesoc_sdram_dfi_p0_we_n <= (~sync_rhs_array_muxed4);
	basesoc_sdram_dfi_p0_rddata_en <= sync_rhs_array_muxed5;
	basesoc_sdram_dfi_p0_wrdata_en <= sync_rhs_array_muxed6;
	basesoc_sdram_dfi_p1_cs_n <= 1'd0;
	basesoc_sdram_dfi_p1_bank <= sync_rhs_array_muxed7;
	basesoc_sdram_dfi_p1_address <= sync_rhs_array_muxed8;
	basesoc_sdram_dfi_p1_cas_n <= (~sync_rhs_array_muxed9);
	basesoc_sdram_dfi_p1_ras_n <= (~sync_rhs_array_muxed10);
	basesoc_sdram_dfi_p1_we_n <= (~sync_rhs_array_muxed11);
	basesoc_sdram_dfi_p1_rddata_en <= sync_rhs_array_muxed12;
	basesoc_sdram_dfi_p1_wrdata_en <= sync_rhs_array_muxed13;
	basesoc_sdram_dfi_p2_cs_n <= 1'd0;
	basesoc_sdram_dfi_p2_bank <= sync_rhs_array_muxed14;
	basesoc_sdram_dfi_p2_address <= sync_rhs_array_muxed15;
	basesoc_sdram_dfi_p2_cas_n <= (~sync_rhs_array_muxed16);
	basesoc_sdram_dfi_p2_ras_n <= (~sync_rhs_array_muxed17);
	basesoc_sdram_dfi_p2_we_n <= (~sync_rhs_array_muxed18);
	basesoc_sdram_dfi_p2_rddata_en <= sync_rhs_array_muxed19;
	basesoc_sdram_dfi_p2_wrdata_en <= sync_rhs_array_muxed20;
	basesoc_sdram_dfi_p3_cs_n <= 1'd0;
	basesoc_sdram_dfi_p3_bank <= sync_rhs_array_muxed21;
	basesoc_sdram_dfi_p3_address <= sync_rhs_array_muxed22;
	basesoc_sdram_dfi_p3_cas_n <= (~sync_rhs_array_muxed23);
	basesoc_sdram_dfi_p3_ras_n <= (~sync_rhs_array_muxed24);
	basesoc_sdram_dfi_p3_we_n <= (~sync_rhs_array_muxed25);
	basesoc_sdram_dfi_p3_rddata_en <= sync_rhs_array_muxed26;
	basesoc_sdram_dfi_p3_wrdata_en <= sync_rhs_array_muxed27;
	if (basesoc_sdram_trrdcon_valid) begin
		basesoc_sdram_trrdcon_count <= 1'd1;
		if (1'd0) begin
			basesoc_sdram_trrdcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_trrdcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_trrdcon_ready)) begin
			basesoc_sdram_trrdcon_count <= (basesoc_sdram_trrdcon_count - 1'd1);
			if ((basesoc_sdram_trrdcon_count == 1'd1)) begin
				basesoc_sdram_trrdcon_ready <= 1'd1;
			end
		end
	end
	basesoc_sdram_tfawcon_window <= {basesoc_sdram_tfawcon_window, basesoc_sdram_tfawcon_valid};
	if ((basesoc_sdram_tfawcon_count < 3'd4)) begin
		if ((basesoc_sdram_tfawcon_count == 2'd3)) begin
			basesoc_sdram_tfawcon_ready <= (~basesoc_sdram_tfawcon_valid);
		end else begin
			basesoc_sdram_tfawcon_ready <= 1'd1;
		end
	end
	if (basesoc_sdram_tccdcon_valid) begin
		basesoc_sdram_tccdcon_count <= 1'd0;
		if (1'd1) begin
			basesoc_sdram_tccdcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_tccdcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_tccdcon_ready)) begin
			basesoc_sdram_tccdcon_count <= (basesoc_sdram_tccdcon_count - 1'd1);
			if ((basesoc_sdram_tccdcon_count == 1'd1)) begin
				basesoc_sdram_tccdcon_ready <= 1'd1;
			end
		end
	end
	if (basesoc_sdram_twtrcon_valid) begin
		basesoc_sdram_twtrcon_count <= 3'd4;
		if (1'd0) begin
			basesoc_sdram_twtrcon_ready <= 1'd1;
		end else begin
			basesoc_sdram_twtrcon_ready <= 1'd0;
		end
	end else begin
		if ((~basesoc_sdram_twtrcon_ready)) begin
			basesoc_sdram_twtrcon_count <= (basesoc_sdram_twtrcon_count - 1'd1);
			if ((basesoc_sdram_twtrcon_count == 1'd1)) begin
				basesoc_sdram_twtrcon_ready <= 1'd1;
			end
		end
	end
	subfragments_multiplexer_state <= subfragments_multiplexer_next_state;
	subfragments_new_master_wdata_ready0 <= ((((((((1'd0 | ((subfragments_roundrobin0_grant == 1'd0) & basesoc_sdram_interface_bank0_wdata_ready)) | ((subfragments_roundrobin1_grant == 1'd0) & basesoc_sdram_interface_bank1_wdata_ready)) | ((subfragments_roundrobin2_grant == 1'd0) & basesoc_sdram_interface_bank2_wdata_ready)) | ((subfragments_roundrobin3_grant == 1'd0) & basesoc_sdram_interface_bank3_wdata_ready)) | ((subfragments_roundrobin4_grant == 1'd0) & basesoc_sdram_interface_bank4_wdata_ready)) | ((subfragments_roundrobin5_grant == 1'd0) & basesoc_sdram_interface_bank5_wdata_ready)) | ((subfragments_roundrobin6_grant == 1'd0) & basesoc_sdram_interface_bank6_wdata_ready)) | ((subfragments_roundrobin7_grant == 1'd0) & basesoc_sdram_interface_bank7_wdata_ready));
	subfragments_new_master_wdata_ready1 <= subfragments_new_master_wdata_ready0;
	subfragments_new_master_rdata_valid0 <= ((((((((1'd0 | ((subfragments_roundrobin0_grant == 1'd0) & basesoc_sdram_interface_bank0_rdata_valid)) | ((subfragments_roundrobin1_grant == 1'd0) & basesoc_sdram_interface_bank1_rdata_valid)) | ((subfragments_roundrobin2_grant == 1'd0) & basesoc_sdram_interface_bank2_rdata_valid)) | ((subfragments_roundrobin3_grant == 1'd0) & basesoc_sdram_interface_bank3_rdata_valid)) | ((subfragments_roundrobin4_grant == 1'd0) & basesoc_sdram_interface_bank4_rdata_valid)) | ((subfragments_roundrobin5_grant == 1'd0) & basesoc_sdram_interface_bank5_rdata_valid)) | ((subfragments_roundrobin6_grant == 1'd0) & basesoc_sdram_interface_bank6_rdata_valid)) | ((subfragments_roundrobin7_grant == 1'd0) & basesoc_sdram_interface_bank7_rdata_valid));
	subfragments_new_master_rdata_valid1 <= subfragments_new_master_rdata_valid0;
	subfragments_new_master_rdata_valid2 <= subfragments_new_master_rdata_valid1;
	subfragments_new_master_rdata_valid3 <= subfragments_new_master_rdata_valid2;
	subfragments_new_master_rdata_valid4 <= subfragments_new_master_rdata_valid3;
	subfragments_new_master_rdata_valid5 <= subfragments_new_master_rdata_valid4;
	subfragments_new_master_rdata_valid6 <= subfragments_new_master_rdata_valid5;
	subfragments_new_master_rdata_valid7 <= subfragments_new_master_rdata_valid6;
	subfragments_new_master_rdata_valid8 <= subfragments_new_master_rdata_valid7;
	basesoc_adr_offset_r <= basesoc_wb_sdram_adr[1:0];
	subfragments_fullmemorywe_state <= subfragments_fullmemorywe_next_state;
	subfragments_litedramwishbone2native_state <= subfragments_litedramwishbone2native_next_state;
	if (basesoc_aborted_litedramwishbone2native_next_value_ce) begin
		basesoc_aborted <= basesoc_aborted_litedramwishbone2native_next_value;
	end
	if (((~s7pciephy_tx_datapath_pipe_valid_source_valid) | s7pciephy_tx_datapath_pipe_valid_source_ready)) begin
		s7pciephy_tx_datapath_pipe_valid_source_valid <= s7pciephy_tx_datapath_pipe_valid_sink_valid;
		s7pciephy_tx_datapath_pipe_valid_source_first <= s7pciephy_tx_datapath_pipe_valid_sink_first;
		s7pciephy_tx_datapath_pipe_valid_source_last <= s7pciephy_tx_datapath_pipe_valid_sink_last;
		s7pciephy_tx_datapath_pipe_valid_source_payload_dat <= s7pciephy_tx_datapath_pipe_valid_sink_payload_dat;
		s7pciephy_tx_datapath_pipe_valid_source_payload_be <= s7pciephy_tx_datapath_pipe_valid_sink_payload_be;
	end
	s7pciephy_tx_datapath_cdc_graycounter0_q_binary <= s7pciephy_tx_datapath_cdc_graycounter0_q_next_binary;
	s7pciephy_tx_datapath_cdc_graycounter0_q <= s7pciephy_tx_datapath_cdc_graycounter0_q_next;
	s7pciephy_rx_datapath_cdc_graycounter1_q_binary <= s7pciephy_rx_datapath_cdc_graycounter1_q_next_binary;
	s7pciephy_rx_datapath_cdc_graycounter1_q <= s7pciephy_rx_datapath_cdc_graycounter1_q_next;
	if (((~s7pciephy_rx_datapath_pipe_valid_source_valid) | s7pciephy_rx_datapath_pipe_valid_source_ready)) begin
		s7pciephy_rx_datapath_pipe_valid_source_valid <= s7pciephy_rx_datapath_pipe_valid_sink_valid;
		s7pciephy_rx_datapath_pipe_valid_source_first <= s7pciephy_rx_datapath_pipe_valid_sink_first;
		s7pciephy_rx_datapath_pipe_valid_source_last <= s7pciephy_rx_datapath_pipe_valid_sink_last;
		s7pciephy_rx_datapath_pipe_valid_source_payload_dat <= s7pciephy_rx_datapath_pipe_valid_sink_payload_dat;
		s7pciephy_rx_datapath_pipe_valid_source_payload_be <= s7pciephy_rx_datapath_pipe_valid_sink_payload_be;
	end
	s7pciephy_msi_cdc_graycounter0_q_binary <= s7pciephy_msi_cdc_graycounter0_q_next_binary;
	s7pciephy_msi_cdc_graycounter0_q <= s7pciephy_msi_cdc_graycounter0_q_next;
	if ((basesoc_depacketizer_header_extracter_sink_valid & basesoc_depacketizer_header_extracter_sink_ready)) begin
		basesoc_depacketizer_header_extracter_dat <= basesoc_depacketizer_header_extracter_sink_payload_dat;
		basesoc_depacketizer_header_extracter_be <= basesoc_depacketizer_header_extracter_sink_payload_be;
	end
	subfragments_litepcietlpdepacketizer_state <= subfragments_litepcietlpdepacketizer_next_state;
	if (basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0) begin
		basesoc_depacketizer_header_extracter_first <= basesoc_depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0;
	end
	if (basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1) begin
		basesoc_depacketizer_header_extracter_last <= basesoc_depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce0) begin
		basesoc_depacketizer_header_extracter_source_payload_header[31:0] <= subfragments_litepcietlpdepacketizer_next_value0;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce1) begin
		basesoc_depacketizer_header_extracter_source_payload_header[63:32] <= subfragments_litepcietlpdepacketizer_next_value1;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce2) begin
		basesoc_depacketizer_header_extracter_source_payload_header[95:64] <= subfragments_litepcietlpdepacketizer_next_value2;
	end
	if (subfragments_litepcietlpdepacketizer_next_value_ce3) begin
		basesoc_depacketizer_header_extracter_source_payload_header[127:96] <= subfragments_litepcietlpdepacketizer_next_value3;
	end
	if (basesoc_depacketizer_dispatcher_first) begin
		basesoc_depacketizer_dispatcher_sel_ongoing <= basesoc_depacketizer_dispatcher_sel0;
	end
	basesoc_depacketizer_dispatcher_ongoing1 <= ((basesoc_depacketizer_dispatch_source_valid | basesoc_depacketizer_dispatcher_ongoing1) & (~basesoc_depacketizer_dispatcher_last));
	if (basesoc_depacketizer_dispatcher_last) begin
		basesoc_depacketizer_dispatcher_first <= 1'd1;
	end else begin
		if ((basesoc_depacketizer_dispatch_source_valid & basesoc_depacketizer_dispatch_source_ready)) begin
			basesoc_depacketizer_dispatcher_first <= 1'd0;
		end
	end
	case (basesoc_packetizer_grant)
		1'd0: begin
			if ((~basesoc_packetizer_request[0])) begin
				if (basesoc_packetizer_request[1]) begin
					basesoc_packetizer_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~basesoc_packetizer_request[1])) begin
				if (basesoc_packetizer_request[0]) begin
					basesoc_packetizer_grant <= 1'd0;
				end
			end
		end
	endcase
	basesoc_packetizer_status0_ongoing1 <= ((basesoc_packetizer_tlp_raw_req_valid | basesoc_packetizer_status0_ongoing1) & (~basesoc_packetizer_status0_last));
	if (basesoc_packetizer_status0_last) begin
		basesoc_packetizer_status0_first <= 1'd1;
	end else begin
		if ((basesoc_packetizer_tlp_raw_req_valid & basesoc_packetizer_tlp_raw_req_ready)) begin
			basesoc_packetizer_status0_first <= 1'd0;
		end
	end
	basesoc_packetizer_status1_ongoing1 <= ((basesoc_packetizer_tlp_raw_cmp_valid | basesoc_packetizer_status1_ongoing1) & (~basesoc_packetizer_status1_last));
	if (basesoc_packetizer_status1_last) begin
		basesoc_packetizer_status1_first <= 1'd1;
	end else begin
		if ((basesoc_packetizer_tlp_raw_cmp_valid & basesoc_packetizer_tlp_raw_cmp_ready)) begin
			basesoc_packetizer_status1_first <= 1'd0;
		end
	end
	if ((basesoc_packetizer_header_inserter_sink_valid & basesoc_packetizer_header_inserter_sink_ready)) begin
		basesoc_packetizer_header_inserter_dat <= basesoc_packetizer_header_inserter_sink_payload_dat;
		basesoc_packetizer_header_inserter_last <= basesoc_packetizer_header_inserter_sink_last;
	end
	subfragments_litepcietlppacketizer_state <= subfragments_litepcietlppacketizer_next_state;
	if (subfragments_tag_queue_syncfifo_re) begin
		subfragments_tag_queue_readable <= 1'd1;
	end else begin
		if (subfragments_tag_queue_re) begin
			subfragments_tag_queue_readable <= 1'd0;
		end
	end
	if (((subfragments_tag_queue_syncfifo_we & subfragments_tag_queue_syncfifo_writable) & (~subfragments_tag_queue_replace))) begin
		subfragments_tag_queue_produce <= (subfragments_tag_queue_produce + 1'd1);
	end
	if (subfragments_tag_queue_do_read) begin
		subfragments_tag_queue_consume <= (subfragments_tag_queue_consume + 1'd1);
	end
	if (((subfragments_tag_queue_syncfifo_we & subfragments_tag_queue_syncfifo_writable) & (~subfragments_tag_queue_replace))) begin
		if ((~subfragments_tag_queue_do_read)) begin
			subfragments_tag_queue_level0 <= (subfragments_tag_queue_level0 + 1'd1);
		end
	end else begin
		if (subfragments_tag_queue_do_read) begin
			subfragments_tag_queue_level0 <= (subfragments_tag_queue_level0 - 1'd1);
		end
	end
	if (subfragments_req_queue_syncfifo_re) begin
		subfragments_req_queue_readable <= 1'd1;
	end else begin
		if (subfragments_req_queue_re) begin
			subfragments_req_queue_readable <= 1'd0;
		end
	end
	if (((subfragments_req_queue_syncfifo_we & subfragments_req_queue_syncfifo_writable) & (~subfragments_req_queue_replace))) begin
		subfragments_req_queue_produce <= (subfragments_req_queue_produce + 1'd1);
	end
	if (subfragments_req_queue_do_read) begin
		subfragments_req_queue_consume <= (subfragments_req_queue_consume + 1'd1);
	end
	if (((subfragments_req_queue_syncfifo_we & subfragments_req_queue_syncfifo_writable) & (~subfragments_req_queue_replace))) begin
		if ((~subfragments_req_queue_do_read)) begin
			subfragments_req_queue_level0 <= (subfragments_req_queue_level0 + 1'd1);
		end
	end else begin
		if (subfragments_req_queue_do_read) begin
			subfragments_req_queue_level0 <= (subfragments_req_queue_level0 - 1'd1);
		end
	end
	subfragments_fsm0_state <= subfragments_fsm0_next_state;
	if (subfragments_syncfifo0_syncfifo0_re) begin
		subfragments_syncfifo0_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo0_re) begin
			subfragments_syncfifo0_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo0_syncfifo0_we & subfragments_syncfifo0_syncfifo0_writable) & (~subfragments_syncfifo0_replace))) begin
		subfragments_syncfifo0_produce <= (subfragments_syncfifo0_produce + 1'd1);
	end
	if (subfragments_syncfifo0_do_read) begin
		subfragments_syncfifo0_consume <= (subfragments_syncfifo0_consume + 1'd1);
	end
	if (((subfragments_syncfifo0_syncfifo0_we & subfragments_syncfifo0_syncfifo0_writable) & (~subfragments_syncfifo0_replace))) begin
		if ((~subfragments_syncfifo0_do_read)) begin
			subfragments_syncfifo0_level0 <= (subfragments_syncfifo0_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo0_do_read) begin
			subfragments_syncfifo0_level0 <= (subfragments_syncfifo0_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo1_syncfifo1_re) begin
		subfragments_syncfifo1_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo1_re) begin
			subfragments_syncfifo1_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo1_syncfifo1_we & subfragments_syncfifo1_syncfifo1_writable) & (~subfragments_syncfifo1_replace))) begin
		subfragments_syncfifo1_produce <= (subfragments_syncfifo1_produce + 1'd1);
	end
	if (subfragments_syncfifo1_do_read) begin
		subfragments_syncfifo1_consume <= (subfragments_syncfifo1_consume + 1'd1);
	end
	if (((subfragments_syncfifo1_syncfifo1_we & subfragments_syncfifo1_syncfifo1_writable) & (~subfragments_syncfifo1_replace))) begin
		if ((~subfragments_syncfifo1_do_read)) begin
			subfragments_syncfifo1_level0 <= (subfragments_syncfifo1_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo1_do_read) begin
			subfragments_syncfifo1_level0 <= (subfragments_syncfifo1_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo2_syncfifo2_re) begin
		subfragments_syncfifo2_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo2_re) begin
			subfragments_syncfifo2_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo2_syncfifo2_we & subfragments_syncfifo2_syncfifo2_writable) & (~subfragments_syncfifo2_replace))) begin
		subfragments_syncfifo2_produce <= (subfragments_syncfifo2_produce + 1'd1);
	end
	if (subfragments_syncfifo2_do_read) begin
		subfragments_syncfifo2_consume <= (subfragments_syncfifo2_consume + 1'd1);
	end
	if (((subfragments_syncfifo2_syncfifo2_we & subfragments_syncfifo2_syncfifo2_writable) & (~subfragments_syncfifo2_replace))) begin
		if ((~subfragments_syncfifo2_do_read)) begin
			subfragments_syncfifo2_level0 <= (subfragments_syncfifo2_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo2_do_read) begin
			subfragments_syncfifo2_level0 <= (subfragments_syncfifo2_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo3_syncfifo3_re) begin
		subfragments_syncfifo3_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo3_re) begin
			subfragments_syncfifo3_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo3_syncfifo3_we & subfragments_syncfifo3_syncfifo3_writable) & (~subfragments_syncfifo3_replace))) begin
		subfragments_syncfifo3_produce <= (subfragments_syncfifo3_produce + 1'd1);
	end
	if (subfragments_syncfifo3_do_read) begin
		subfragments_syncfifo3_consume <= (subfragments_syncfifo3_consume + 1'd1);
	end
	if (((subfragments_syncfifo3_syncfifo3_we & subfragments_syncfifo3_syncfifo3_writable) & (~subfragments_syncfifo3_replace))) begin
		if ((~subfragments_syncfifo3_do_read)) begin
			subfragments_syncfifo3_level0 <= (subfragments_syncfifo3_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo3_do_read) begin
			subfragments_syncfifo3_level0 <= (subfragments_syncfifo3_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo4_syncfifo4_re) begin
		subfragments_syncfifo4_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo4_re) begin
			subfragments_syncfifo4_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo4_syncfifo4_we & subfragments_syncfifo4_syncfifo4_writable) & (~subfragments_syncfifo4_replace))) begin
		subfragments_syncfifo4_produce <= (subfragments_syncfifo4_produce + 1'd1);
	end
	if (subfragments_syncfifo4_do_read) begin
		subfragments_syncfifo4_consume <= (subfragments_syncfifo4_consume + 1'd1);
	end
	if (((subfragments_syncfifo4_syncfifo4_we & subfragments_syncfifo4_syncfifo4_writable) & (~subfragments_syncfifo4_replace))) begin
		if ((~subfragments_syncfifo4_do_read)) begin
			subfragments_syncfifo4_level0 <= (subfragments_syncfifo4_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo4_do_read) begin
			subfragments_syncfifo4_level0 <= (subfragments_syncfifo4_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo5_syncfifo5_re) begin
		subfragments_syncfifo5_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo5_re) begin
			subfragments_syncfifo5_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo5_syncfifo5_we & subfragments_syncfifo5_syncfifo5_writable) & (~subfragments_syncfifo5_replace))) begin
		subfragments_syncfifo5_produce <= (subfragments_syncfifo5_produce + 1'd1);
	end
	if (subfragments_syncfifo5_do_read) begin
		subfragments_syncfifo5_consume <= (subfragments_syncfifo5_consume + 1'd1);
	end
	if (((subfragments_syncfifo5_syncfifo5_we & subfragments_syncfifo5_syncfifo5_writable) & (~subfragments_syncfifo5_replace))) begin
		if ((~subfragments_syncfifo5_do_read)) begin
			subfragments_syncfifo5_level0 <= (subfragments_syncfifo5_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo5_do_read) begin
			subfragments_syncfifo5_level0 <= (subfragments_syncfifo5_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo6_syncfifo6_re) begin
		subfragments_syncfifo6_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo6_re) begin
			subfragments_syncfifo6_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo6_syncfifo6_we & subfragments_syncfifo6_syncfifo6_writable) & (~subfragments_syncfifo6_replace))) begin
		subfragments_syncfifo6_produce <= (subfragments_syncfifo6_produce + 1'd1);
	end
	if (subfragments_syncfifo6_do_read) begin
		subfragments_syncfifo6_consume <= (subfragments_syncfifo6_consume + 1'd1);
	end
	if (((subfragments_syncfifo6_syncfifo6_we & subfragments_syncfifo6_syncfifo6_writable) & (~subfragments_syncfifo6_replace))) begin
		if ((~subfragments_syncfifo6_do_read)) begin
			subfragments_syncfifo6_level0 <= (subfragments_syncfifo6_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo6_do_read) begin
			subfragments_syncfifo6_level0 <= (subfragments_syncfifo6_level0 - 1'd1);
		end
	end
	if (subfragments_syncfifo7_syncfifo7_re) begin
		subfragments_syncfifo7_readable <= 1'd1;
	end else begin
		if (subfragments_syncfifo7_re) begin
			subfragments_syncfifo7_readable <= 1'd0;
		end
	end
	if (((subfragments_syncfifo7_syncfifo7_we & subfragments_syncfifo7_syncfifo7_writable) & (~subfragments_syncfifo7_replace))) begin
		subfragments_syncfifo7_produce <= (subfragments_syncfifo7_produce + 1'd1);
	end
	if (subfragments_syncfifo7_do_read) begin
		subfragments_syncfifo7_consume <= (subfragments_syncfifo7_consume + 1'd1);
	end
	if (((subfragments_syncfifo7_syncfifo7_we & subfragments_syncfifo7_syncfifo7_writable) & (~subfragments_syncfifo7_replace))) begin
		if ((~subfragments_syncfifo7_do_read)) begin
			subfragments_syncfifo7_level0 <= (subfragments_syncfifo7_level0 + 1'd1);
		end
	end else begin
		if (subfragments_syncfifo7_do_read) begin
			subfragments_syncfifo7_level0 <= (subfragments_syncfifo7_level0 - 1'd1);
		end
	end
	subfragments_fsm1_state <= subfragments_fsm1_next_state;
	if (subfragments_fill_tag_litepciecrossbar_next_value_ce) begin
		subfragments_fill_tag <= subfragments_fill_tag_litepciecrossbar_next_value;
	end
	case (subfragments_grant)
		1'd0: begin
			if ((~subfragments_request[0])) begin
				if (subfragments_request[1]) begin
					subfragments_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~subfragments_request[1])) begin
				if (subfragments_request[0]) begin
					subfragments_grant <= 1'd0;
				end
			end
		end
	endcase
	subfragments_status0_ongoing1 <= ((subfragments_master_out_sink_valid | subfragments_status0_ongoing1) & (~subfragments_status0_last));
	if (subfragments_status0_last) begin
		subfragments_status0_first <= 1'd1;
	end else begin
		if ((subfragments_master_out_sink_valid & subfragments_master_out_sink_ready)) begin
			subfragments_status0_first <= 1'd0;
		end
	end
	subfragments_status1_ongoing1 <= ((subfragments_sink_valid | subfragments_status1_ongoing1) & (~subfragments_status1_last));
	if (subfragments_status1_last) begin
		subfragments_status1_first <= 1'd1;
	end else begin
		if ((subfragments_sink_valid & subfragments_sink_ready)) begin
			subfragments_status1_first <= 1'd0;
		end
	end
	basesoc_mmap_wishbone_sel <= 4'd15;
	basesoc_mmap_wishbone_adr <= (basesoc_mmap_source_payload_adr[31:2] + 30'd1006632960);
	if (1'd0) begin
		if (basesoc_mmap_source_payload_adr[2]) begin
			basesoc_mmap_wishbone_dat_w <= basesoc_mmap_source_payload_dat[31:0];
		end else begin
			basesoc_mmap_wishbone_dat_w <= basesoc_mmap_source_payload_dat[127:32];
		end
	end else begin
		basesoc_mmap_wishbone_dat_w <= basesoc_mmap_source_payload_dat[31:0];
	end
	basesoc_mmap_sink_first <= 1'd1;
	basesoc_mmap_sink_last <= 1'd1;
	basesoc_mmap_sink_payload_len <= 1'd1;
	basesoc_mmap_sink_payload_err <= 1'd0;
	basesoc_mmap_sink_payload_tag <= basesoc_mmap_source_payload_tag;
	basesoc_mmap_sink_payload_adr <= basesoc_mmap_source_payload_adr;
	basesoc_mmap_sink_payload_cmp_id <= s7pciephy_id;
	basesoc_mmap_sink_payload_req_id <= basesoc_mmap_source_payload_req_id;
	if (basesoc_mmap_update_dat) begin
		basesoc_mmap_sink_payload_dat <= basesoc_mmap_wishbone_dat_r;
	end
	subfragments_litepciewishbonemaster_state <= subfragments_litepciewishbonemaster_next_state;
	basesoc_msi_vector <= (basesoc_msi_enable & ((basesoc_msi_vector & (~basesoc_msi_clear)) | basesoc_msi_irqs));
	basesoc_msi_msi <= (basesoc_msi_msi | (basesoc_msi_irqs & basesoc_msi_enable));
	if (basesoc_msi_source_ready) begin
		basesoc_msi_msi <= (basesoc_msi_irqs & basesoc_msi_enable);
	end
	if ((basesoc_writer_loop_prog_n_storage == 1'd0)) begin
		basesoc_writer_table_sink_payload_address <= basesoc_writer_address;
		basesoc_writer_table_sink_payload_length <= basesoc_writer_length;
		basesoc_writer_table_sink_payload_irq_disable <= basesoc_writer_irq_disable;
		basesoc_writer_table_sink_payload_last_disable <= basesoc_writer_last_disable;
		basesoc_writer_table_sink_first <= (basesoc_writer_table_level == 1'd0);
		basesoc_writer_table_sink_valid <= (basesoc_writer_we_storage & basesoc_writer_we_re);
	end else begin
		basesoc_writer_table_sink_first <= basesoc_writer_table_source_first;
		basesoc_writer_table_sink_last <= basesoc_writer_table_source_last;
		basesoc_writer_table_sink_payload_address <= basesoc_writer_table_source_payload_address;
		basesoc_writer_table_sink_payload_length <= basesoc_writer_table_source_payload_length;
		basesoc_writer_table_sink_payload_irq_disable <= basesoc_writer_table_source_payload_irq_disable;
		basesoc_writer_table_sink_payload_last_disable <= basesoc_writer_table_source_payload_last_disable;
		basesoc_writer_table_sink_valid <= (basesoc_writer_table_source_valid & basesoc_writer_table_source_ready);
	end
	if (basesoc_writer_table_reset) begin
		basesoc_writer_index <= 1'd0;
		basesoc_writer_count <= 16'd65535;
	end else begin
		if ((basesoc_writer_table_source_valid & basesoc_writer_table_source_ready)) begin
			if (basesoc_writer_table_source_first) begin
				basesoc_writer_index <= 1'd0;
				basesoc_writer_count <= (basesoc_writer_count + 1'd1);
			end else begin
				basesoc_writer_index <= (basesoc_writer_index + 1'd1);
			end
		end
	end
	if (((basesoc_writer_table_syncfifo_we & basesoc_writer_table_syncfifo_writable) & (~basesoc_writer_table_replace))) begin
		basesoc_writer_table_produce <= (basesoc_writer_table_produce + 1'd1);
	end
	if (basesoc_writer_table_do_read) begin
		basesoc_writer_table_consume <= (basesoc_writer_table_consume + 1'd1);
	end
	if (((basesoc_writer_table_syncfifo_we & basesoc_writer_table_syncfifo_writable) & (~basesoc_writer_table_replace))) begin
		if ((~basesoc_writer_table_do_read)) begin
			basesoc_writer_table_level <= (basesoc_writer_table_level + 1'd1);
		end
	end else begin
		if (basesoc_writer_table_do_read) begin
			basesoc_writer_table_level <= (basesoc_writer_table_level - 1'd1);
		end
	end
	if (basesoc_writer_table_reset) begin
		basesoc_writer_table_level <= 9'd0;
		basesoc_writer_table_produce <= 8'd0;
		basesoc_writer_table_consume <= 8'd0;
	end
	subfragments_litepciedmawriter_bufferizeendpoints_state <= subfragments_litepciedmawriter_bufferizeendpoints_next_state;
	if (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value_ce0) begin
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset <= basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_bufferizeendpoints_next_value0;
	end
	if (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value_ce1) begin
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length <= basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_bufferizeendpoints_next_value1;
	end
	if (basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value_ce2) begin
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id <= basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_bufferizeendpoints_next_value2;
	end
	if (((~basesoc_writer_splitter_bufferizeendpoints_source_valid) | basesoc_writer_splitter_bufferizeendpoints_source_ready)) begin
		basesoc_writer_splitter_bufferizeendpoints_source_valid <= basesoc_writer_splitter_bufferizeendpoints_sink_valid;
		basesoc_writer_splitter_bufferizeendpoints_source_first <= basesoc_writer_splitter_bufferizeendpoints_sink_first;
		basesoc_writer_splitter_bufferizeendpoints_source_last <= basesoc_writer_splitter_bufferizeendpoints_sink_last;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_address <= basesoc_writer_splitter_bufferizeendpoints_sink_payload_address;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_length <= basesoc_writer_splitter_bufferizeendpoints_sink_payload_length;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_irq_disable <= basesoc_writer_splitter_bufferizeendpoints_sink_payload_irq_disable;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_last_disable <= basesoc_writer_splitter_bufferizeendpoints_sink_payload_last_disable;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_user_id <= basesoc_writer_splitter_bufferizeendpoints_sink_payload_user_id;
	end
	if (basesoc_writer_splitter_reset) begin
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length <= 32'd0;
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset <= 32'd0;
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id <= 32'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_valid <= 1'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_address <= 32'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_length <= 24'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_irq_disable <= 1'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_last_disable <= 1'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_user_id <= 8'd0;
		subfragments_litepciedmawriter_bufferizeendpoints_state <= 1'd0;
	end
	if (basesoc_writer_data_fifo_syncfifo_re) begin
		basesoc_writer_data_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_writer_data_fifo_re) begin
			basesoc_writer_data_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_writer_data_fifo_syncfifo_we & basesoc_writer_data_fifo_syncfifo_writable) & (~basesoc_writer_data_fifo_replace))) begin
		basesoc_writer_data_fifo_produce <= (basesoc_writer_data_fifo_produce + 1'd1);
	end
	if (basesoc_writer_data_fifo_do_read) begin
		basesoc_writer_data_fifo_consume <= (basesoc_writer_data_fifo_consume + 1'd1);
	end
	if (((basesoc_writer_data_fifo_syncfifo_we & basesoc_writer_data_fifo_syncfifo_writable) & (~basesoc_writer_data_fifo_replace))) begin
		if ((~basesoc_writer_data_fifo_do_read)) begin
			basesoc_writer_data_fifo_level0 <= (basesoc_writer_data_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_writer_data_fifo_do_read) begin
			basesoc_writer_data_fifo_level0 <= (basesoc_writer_data_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_writer_resetinserter_reset) begin
		basesoc_writer_data_fifo_readable <= 1'd0;
		basesoc_writer_data_fifo_level0 <= 8'd0;
		basesoc_writer_data_fifo_produce <= 7'd0;
		basesoc_writer_data_fifo_consume <= 7'd0;
	end
	subfragments_litepciedmawriter_fsm_state <= subfragments_litepciedmawriter_fsm_next_state;
	if (basesoc_writer_req_count_litepciedma_fsm_next_value_ce) begin
		basesoc_writer_req_count <= basesoc_writer_req_count_litepciedma_fsm_next_value;
	end
	if (((basesoc_litepciemasterinternalport1_source_valid & basesoc_litepciemasterinternalport1_source_first) & basesoc_litepciemasterinternalport1_source_ready)) begin
		basesoc_reader_last_user_id <= basesoc_litepciemasterinternalport1_source_payload_user_id;
	end
	basesoc_reader_pending_words <= ((basesoc_reader_pending_words + basesoc_reader_pending_words_queue) - basesoc_reader_pending_words_dequeue);
	if ((~basesoc_reader_enable_storage)) begin
		basesoc_reader_pending_words <= 1'd0;
	end
	if ((basesoc_reader_loop_prog_n_storage == 1'd0)) begin
		basesoc_reader_table_sink_payload_address <= basesoc_reader_address;
		basesoc_reader_table_sink_payload_length <= basesoc_reader_length;
		basesoc_reader_table_sink_payload_irq_disable <= basesoc_reader_irq_disable;
		basesoc_reader_table_sink_payload_last_disable <= basesoc_reader_last_disable;
		basesoc_reader_table_sink_first <= (basesoc_reader_table_level == 1'd0);
		basesoc_reader_table_sink_valid <= (basesoc_reader_we_storage & basesoc_reader_we_re);
	end else begin
		basesoc_reader_table_sink_first <= basesoc_reader_table_source_first;
		basesoc_reader_table_sink_last <= basesoc_reader_table_source_last;
		basesoc_reader_table_sink_payload_address <= basesoc_reader_table_source_payload_address;
		basesoc_reader_table_sink_payload_length <= basesoc_reader_table_source_payload_length;
		basesoc_reader_table_sink_payload_irq_disable <= basesoc_reader_table_source_payload_irq_disable;
		basesoc_reader_table_sink_payload_last_disable <= basesoc_reader_table_source_payload_last_disable;
		basesoc_reader_table_sink_valid <= (basesoc_reader_table_source_valid & basesoc_reader_table_source_ready);
	end
	if (basesoc_reader_table_reset) begin
		basesoc_reader_index <= 1'd0;
		basesoc_reader_count <= 16'd65535;
	end else begin
		if ((basesoc_reader_table_source_valid & basesoc_reader_table_source_ready)) begin
			if (basesoc_reader_table_source_first) begin
				basesoc_reader_index <= 1'd0;
				basesoc_reader_count <= (basesoc_reader_count + 1'd1);
			end else begin
				basesoc_reader_index <= (basesoc_reader_index + 1'd1);
			end
		end
	end
	if (((basesoc_reader_table_syncfifo_we & basesoc_reader_table_syncfifo_writable) & (~basesoc_reader_table_replace))) begin
		basesoc_reader_table_produce <= (basesoc_reader_table_produce + 1'd1);
	end
	if (basesoc_reader_table_do_read) begin
		basesoc_reader_table_consume <= (basesoc_reader_table_consume + 1'd1);
	end
	if (((basesoc_reader_table_syncfifo_we & basesoc_reader_table_syncfifo_writable) & (~basesoc_reader_table_replace))) begin
		if ((~basesoc_reader_table_do_read)) begin
			basesoc_reader_table_level <= (basesoc_reader_table_level + 1'd1);
		end
	end else begin
		if (basesoc_reader_table_do_read) begin
			basesoc_reader_table_level <= (basesoc_reader_table_level - 1'd1);
		end
	end
	if (basesoc_reader_table_reset) begin
		basesoc_reader_table_level <= 9'd0;
		basesoc_reader_table_produce <= 8'd0;
		basesoc_reader_table_consume <= 8'd0;
	end
	subfragments_litepciedmareader_bufferizeendpoints_state <= subfragments_litepciedmareader_bufferizeendpoints_next_state;
	if (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value_ce0) begin
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset <= basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset_litepciedma_next_value0;
	end
	if (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value_ce1) begin
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length <= basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length_litepciedma_next_value1;
	end
	if (basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value_ce2) begin
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id <= basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id_litepciedma_next_value2;
	end
	if (((~basesoc_reader_splitter_bufferizeendpoints_source_valid) | basesoc_reader_splitter_bufferizeendpoints_source_ready)) begin
		basesoc_reader_splitter_bufferizeendpoints_source_valid <= basesoc_reader_splitter_bufferizeendpoints_sink_valid;
		basesoc_reader_splitter_bufferizeendpoints_source_first <= basesoc_reader_splitter_bufferizeendpoints_sink_first;
		basesoc_reader_splitter_bufferizeendpoints_source_last <= basesoc_reader_splitter_bufferizeendpoints_sink_last;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_address <= basesoc_reader_splitter_bufferizeendpoints_sink_payload_address;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_length <= basesoc_reader_splitter_bufferizeendpoints_sink_payload_length;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_irq_disable <= basesoc_reader_splitter_bufferizeendpoints_sink_payload_irq_disable;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_last_disable <= basesoc_reader_splitter_bufferizeendpoints_sink_payload_last_disable;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_user_id <= basesoc_reader_splitter_bufferizeendpoints_sink_payload_user_id;
	end
	if (basesoc_reader_splitter_reset) begin
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length <= 32'd0;
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset <= 32'd0;
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id <= 32'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_valid <= 1'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_address <= 32'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_length <= 24'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_irq_disable <= 1'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_last_disable <= 1'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_user_id <= 8'd0;
		subfragments_litepciedmareader_bufferizeendpoints_state <= 1'd0;
	end
	if (basesoc_reader_data_fifo_syncfifo_re) begin
		basesoc_reader_data_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_reader_data_fifo_re) begin
			basesoc_reader_data_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_reader_data_fifo_syncfifo_we & basesoc_reader_data_fifo_syncfifo_writable) & (~basesoc_reader_data_fifo_replace))) begin
		basesoc_reader_data_fifo_produce <= (basesoc_reader_data_fifo_produce + 1'd1);
	end
	if (basesoc_reader_data_fifo_do_read) begin
		basesoc_reader_data_fifo_consume <= (basesoc_reader_data_fifo_consume + 1'd1);
	end
	if (((basesoc_reader_data_fifo_syncfifo_we & basesoc_reader_data_fifo_syncfifo_writable) & (~basesoc_reader_data_fifo_replace))) begin
		if ((~basesoc_reader_data_fifo_do_read)) begin
			basesoc_reader_data_fifo_level0 <= (basesoc_reader_data_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_reader_data_fifo_do_read) begin
			basesoc_reader_data_fifo_level0 <= (basesoc_reader_data_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_reader_resetinserter_reset) begin
		basesoc_reader_data_fifo_readable <= 1'd0;
		basesoc_reader_data_fifo_level0 <= 11'd0;
		basesoc_reader_data_fifo_produce <= 10'd0;
		basesoc_reader_data_fifo_consume <= 10'd0;
	end
	subfragments_litepciedmareader_fsm_state <= subfragments_litepciedmareader_fsm_next_state;
	if ((basesoc_buffering_reader_fifo_level1 < basesoc_buffering_reader_fifo_level_min)) begin
		basesoc_buffering_reader_fifo_level_min <= basesoc_buffering_reader_fifo_level1;
	end
	if ((basesoc_buffering_reader_fifo_status_re | (basesoc_buffering_csrfield_level_mode0 == 1'd0))) begin
		basesoc_buffering_reader_fifo_level_min <= 7'd127;
	end
	if ((basesoc_buffering_writer_fifo_level1 > basesoc_buffering_writer_fifo_level_max)) begin
		basesoc_buffering_writer_fifo_level_max <= basesoc_buffering_writer_fifo_level1;
	end
	if ((basesoc_buffering_writer_fifo_status_re | (basesoc_buffering_csrfield_level_mode1 == 1'd0))) begin
		basesoc_buffering_writer_fifo_level_max <= 1'd0;
	end
	if (basesoc_buffering_reader_fifo_syncfifo_re) begin
		basesoc_buffering_reader_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_buffering_reader_fifo_re) begin
			basesoc_buffering_reader_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_buffering_reader_fifo_syncfifo_we & basesoc_buffering_reader_fifo_syncfifo_writable) & (~basesoc_buffering_reader_fifo_replace))) begin
		basesoc_buffering_reader_fifo_produce <= (basesoc_buffering_reader_fifo_produce + 1'd1);
	end
	if (basesoc_buffering_reader_fifo_do_read) begin
		basesoc_buffering_reader_fifo_consume <= (basesoc_buffering_reader_fifo_consume + 1'd1);
	end
	if (((basesoc_buffering_reader_fifo_syncfifo_we & basesoc_buffering_reader_fifo_syncfifo_writable) & (~basesoc_buffering_reader_fifo_replace))) begin
		if ((~basesoc_buffering_reader_fifo_do_read)) begin
			basesoc_buffering_reader_fifo_level0 <= (basesoc_buffering_reader_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_buffering_reader_fifo_do_read) begin
			basesoc_buffering_reader_fifo_level0 <= (basesoc_buffering_reader_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_buffering_writer_fifo_syncfifo_re) begin
		basesoc_buffering_writer_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_buffering_writer_fifo_re) begin
			basesoc_buffering_writer_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_buffering_writer_fifo_syncfifo_we & basesoc_buffering_writer_fifo_syncfifo_writable) & (~basesoc_buffering_writer_fifo_replace))) begin
		basesoc_buffering_writer_fifo_produce <= (basesoc_buffering_writer_fifo_produce + 1'd1);
	end
	if (basesoc_buffering_writer_fifo_do_read) begin
		basesoc_buffering_writer_fifo_consume <= (basesoc_buffering_writer_fifo_consume + 1'd1);
	end
	if (((basesoc_buffering_writer_fifo_syncfifo_we & basesoc_buffering_writer_fifo_syncfifo_writable) & (~basesoc_buffering_writer_fifo_replace))) begin
		if ((~basesoc_buffering_writer_fifo_do_read)) begin
			basesoc_buffering_writer_fifo_level0 <= (basesoc_buffering_writer_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_buffering_writer_fifo_do_read) begin
			basesoc_buffering_writer_fifo_level0 <= (basesoc_buffering_writer_fifo_level0 - 1'd1);
		end
	end
	icap_icap_clk_counter <= (icap_icap_clk_counter + 1'd1);
	icap_clk <= icap_icap_clk_counter[3];
	subfragments_fsm_state <= subfragments_fsm_next_state;
	flash_clk_divider1 <= (flash_clk_divider1 + 1'd1);
	if (flash_clk_rise) begin
		flash_pads_clk <= flash_clk_enable;
	end else begin
		if (flash_clk_fall) begin
			flash_clk_divider1 <= 1'd0;
			flash_pads_clk <= 1'd0;
		end
	end
	flash_pads_cs_n <= (~(flash_cs & (flash_xfer_enable | (flash_cs_mode == 1'd1))));
	if (flash_mosi_latch) begin
		flash_mosi_data <= flash_mosi_1;
		flash_mosi_sel <= 6'd39;
	end else begin
		if (flash_clk_fall) begin
			if (flash_xfer_enable) begin
				flash_pads_mosi <= sync_f_array_muxed;
			end
			flash_mosi_sel <= (flash_mosi_sel - 1'd1);
		end
	end
	if (flash_clk_rise) begin
		if (flash_loopback) begin
			flash_miso_data <= {flash_miso_data, flash_pads_mosi};
		end else begin
			flash_miso_data <= {flash_miso_data, flash_pads_miso};
		end
	end
	if (flash_miso_latch) begin
		flash_miso_1 <= flash_miso_data;
	end
	subfragments_s7spiflash_state <= subfragments_s7spiflash_next_state;
	if (flash_count_s7spiflash_next_value_ce) begin
		flash_count <= flash_count_s7spiflash_next_value;
	end
	if (leds_done) begin
		leds_chaser <= {leds_chaser, (~leds_chaser[3])};
	end
	if (leds_re) begin
		leds_mode <= 1'd1;
	end
	if (leds_wait) begin
		if ((~leds_done)) begin
			leds_count <= (leds_count - 1'd1);
		end
	end else begin
		leds_count <= 24'd12500000;
	end
	basesoc_state <= basesoc_next_state;
	if (basesoc_basesoc_dat_w_next_value_ce0) begin
		basesoc_basesoc_dat_w <= basesoc_basesoc_dat_w_next_value0;
	end
	if (basesoc_basesoc_adr_next_value_ce1) begin
		basesoc_basesoc_adr <= basesoc_basesoc_adr_next_value1;
	end
	if (basesoc_basesoc_we_next_value_ce2) begin
		basesoc_basesoc_we <= basesoc_basesoc_we_next_value2;
	end
	case (basesoc_grant)
		1'd0: begin
			if ((~basesoc_request[0])) begin
				if (basesoc_request[1]) begin
					basesoc_grant <= 1'd1;
				end else begin
					if (basesoc_request[2]) begin
						basesoc_grant <= 2'd2;
					end
				end
			end
		end
		1'd1: begin
			if ((~basesoc_request[1])) begin
				if (basesoc_request[2]) begin
					basesoc_grant <= 2'd2;
				end else begin
					if (basesoc_request[0]) begin
						basesoc_grant <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			if ((~basesoc_request[2])) begin
				if (basesoc_request[0]) begin
					basesoc_grant <= 1'd0;
				end else begin
					if (basesoc_request[1]) begin
						basesoc_grant <= 1'd1;
					end
				end
			end
		end
	endcase
	basesoc_slave_sel_r <= basesoc_slave_sel;
	if (basesoc_wait) begin
		if ((~basesoc_done)) begin
			basesoc_count <= (basesoc_count - 1'd1);
		end
	end else begin
		basesoc_count <= 20'd1000000;
	end
	basesoc_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank0_sel) begin
		case (basesoc_csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface0_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank0_reset0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface0_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank0_scratch0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface0_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank0_bus_errors_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank0_reset0_re) begin
		basesoc_basesoc_reset_storage[1:0] <= basesoc_csr_bankarray_csrbank0_reset0_r;
	end
	basesoc_basesoc_reset_re <= basesoc_csr_bankarray_csrbank0_reset0_re;
	if (basesoc_csr_bankarray_csrbank0_scratch0_re) begin
		basesoc_basesoc_scratch_storage[31:0] <= basesoc_csr_bankarray_csrbank0_scratch0_r;
	end
	basesoc_basesoc_scratch_re <= basesoc_csr_bankarray_csrbank0_scratch0_re;
	basesoc_basesoc_bus_errors_re <= basesoc_csr_bankarray_csrbank0_bus_errors_re;
	basesoc_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank1_sel) begin
		case (basesoc_csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_rst0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_wlevel_en0_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_wlevel_strobe_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_dly_sel0_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_rst_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_inc_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_bitslip_rst_w;
			end
			4'd8: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_rdly_dq_bitslip_w;
			end
			4'd9: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_wdly_dq_bitslip_rst_w;
			end
			4'd10: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= a7ddrphy_wdly_dq_bitslip_w;
			end
			4'd11: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_rdphase0_w;
			end
			4'd12: begin
				basesoc_csr_bankarray_interface1_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank1_wrphase0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank1_rst0_re) begin
		a7ddrphy_rst_storage <= basesoc_csr_bankarray_csrbank1_rst0_r;
	end
	a7ddrphy_rst_re <= basesoc_csr_bankarray_csrbank1_rst0_re;
	if (basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_re) begin
		a7ddrphy_half_sys8x_taps_storage[4:0] <= basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_r;
	end
	a7ddrphy_half_sys8x_taps_re <= basesoc_csr_bankarray_csrbank1_half_sys8x_taps0_re;
	if (basesoc_csr_bankarray_csrbank1_wlevel_en0_re) begin
		a7ddrphy_wlevel_en_storage <= basesoc_csr_bankarray_csrbank1_wlevel_en0_r;
	end
	a7ddrphy_wlevel_en_re <= basesoc_csr_bankarray_csrbank1_wlevel_en0_re;
	if (basesoc_csr_bankarray_csrbank1_dly_sel0_re) begin
		a7ddrphy_dly_sel_storage[1:0] <= basesoc_csr_bankarray_csrbank1_dly_sel0_r;
	end
	a7ddrphy_dly_sel_re <= basesoc_csr_bankarray_csrbank1_dly_sel0_re;
	if (basesoc_csr_bankarray_csrbank1_rdphase0_re) begin
		a7ddrphy_rdphase_storage[1:0] <= basesoc_csr_bankarray_csrbank1_rdphase0_r;
	end
	a7ddrphy_rdphase_re <= basesoc_csr_bankarray_csrbank1_rdphase0_re;
	if (basesoc_csr_bankarray_csrbank1_wrphase0_re) begin
		a7ddrphy_wrphase_storage[1:0] <= basesoc_csr_bankarray_csrbank1_wrphase0_r;
	end
	a7ddrphy_wrphase_re <= basesoc_csr_bankarray_csrbank1_wrphase0_re;
	basesoc_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank2_sel) begin
		case (basesoc_csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_control0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_status_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_mosi1_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_mosi0_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_miso1_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_miso0_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_cs0_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface2_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank2_spi_loopback0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank2_spi_control0_re) begin
		flash_control_storage[15:0] <= basesoc_csr_bankarray_csrbank2_spi_control0_r;
	end
	flash_control_re <= basesoc_csr_bankarray_csrbank2_spi_control0_re;
	flash_status_re <= basesoc_csr_bankarray_csrbank2_spi_status_re;
	if (basesoc_csr_bankarray_csrbank2_spi_mosi1_re) begin
		flash_mosi_storage[39:32] <= basesoc_csr_bankarray_csrbank2_spi_mosi1_r;
	end
	if (basesoc_csr_bankarray_csrbank2_spi_mosi0_re) begin
		flash_mosi_storage[31:0] <= basesoc_csr_bankarray_csrbank2_spi_mosi0_r;
	end
	flash_mosi_re <= basesoc_csr_bankarray_csrbank2_spi_mosi0_re;
	flash_miso_re <= basesoc_csr_bankarray_csrbank2_spi_miso0_re;
	if (basesoc_csr_bankarray_csrbank2_spi_cs0_re) begin
		flash_cs_storage[16:0] <= basesoc_csr_bankarray_csrbank2_spi_cs0_r;
	end
	flash_cs_re <= basesoc_csr_bankarray_csrbank2_spi_cs0_re;
	if (basesoc_csr_bankarray_csrbank2_spi_loopback0_re) begin
		flash_loopback_storage <= basesoc_csr_bankarray_csrbank2_spi_loopback0_r;
	end
	flash_loopback_re <= basesoc_csr_bankarray_csrbank2_spi_loopback0_re;
	basesoc_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank3_sel) begin
		case (basesoc_csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface3_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank3_out0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank3_out0_re) begin
		flash_cs_n_storage <= basesoc_csr_bankarray_csrbank3_out0_r;
	end
	flash_cs_n_re <= basesoc_csr_bankarray_csrbank3_out0_re;
	basesoc_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank4_sel) begin
		case (basesoc_csr_bankarray_interface4_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_addr0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_data0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_write0_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_done_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface4_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank4_read0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank4_addr0_re) begin
		icap_addr_storage[4:0] <= basesoc_csr_bankarray_csrbank4_addr0_r;
	end
	icap_addr_re <= basesoc_csr_bankarray_csrbank4_addr0_re;
	if (icap_data_we) begin
		icap_data_storage <= icap_data_dat_w;
	end
	if (basesoc_csr_bankarray_csrbank4_data0_re) begin
		icap_data_storage[31:0] <= basesoc_csr_bankarray_csrbank4_data0_r;
	end
	icap_data_re <= basesoc_csr_bankarray_csrbank4_data0_re;
	if (basesoc_csr_bankarray_csrbank4_write0_re) begin
		icap_write_storage <= basesoc_csr_bankarray_csrbank4_write0_r;
	end
	icap_write_re <= basesoc_csr_bankarray_csrbank4_write0_re;
	icap_done_re <= basesoc_csr_bankarray_csrbank4_done_re;
	if (basesoc_csr_bankarray_csrbank4_read0_re) begin
		icap_read_storage <= basesoc_csr_bankarray_csrbank4_read0_r;
	end
	icap_read_re <= basesoc_csr_bankarray_csrbank4_read0_re;
	basesoc_csr_bankarray_sel_r <= basesoc_csr_bankarray_sel;
	basesoc_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank5_sel) begin
		case (basesoc_csr_bankarray_interface5_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface5_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank5_out0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank5_out0_re) begin
		leds_storage[3:0] <= basesoc_csr_bankarray_csrbank5_out0_r;
	end
	leds_re <= basesoc_csr_bankarray_csrbank5_out0_re;
	basesoc_csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank6_sel) begin
		case (basesoc_csr_bankarray_interface6_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_enable0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_value1_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_value0_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_we0_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_loop_status_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_level_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_writer_table_reset0_w;
			end
			4'd8: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_enable0_w;
			end
			4'd9: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_value1_w;
			end
			4'd10: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_value0_w;
			end
			4'd11: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_we0_w;
			end
			4'd12: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_w;
			end
			4'd13: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_loop_status_w;
			end
			4'd14: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_level_w;
			end
			4'd15: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_reader_table_reset0_w;
			end
			5'd16: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_loopback_enable0_w;
			end
			5'd17: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_w;
			end
			5'd18: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_w;
			end
			5'd19: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_w;
			end
			5'd20: begin
				basesoc_csr_bankarray_interface6_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank6_writer_enable0_re) begin
		basesoc_writer_enable_storage <= basesoc_csr_bankarray_csrbank6_writer_enable0_r;
	end
	basesoc_writer_enable_re <= basesoc_csr_bankarray_csrbank6_writer_enable0_re;
	if (basesoc_csr_bankarray_csrbank6_writer_table_value1_re) begin
		basesoc_writer_value_storage[57:32] <= basesoc_csr_bankarray_csrbank6_writer_table_value1_r;
	end
	if (basesoc_csr_bankarray_csrbank6_writer_table_value0_re) begin
		basesoc_writer_value_storage[31:0] <= basesoc_csr_bankarray_csrbank6_writer_table_value0_r;
	end
	basesoc_writer_value_re <= basesoc_csr_bankarray_csrbank6_writer_table_value0_re;
	if (basesoc_csr_bankarray_csrbank6_writer_table_we0_re) begin
		basesoc_writer_we_storage <= basesoc_csr_bankarray_csrbank6_writer_table_we0_r;
	end
	basesoc_writer_we_re <= basesoc_csr_bankarray_csrbank6_writer_table_we0_re;
	if (basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_re) begin
		basesoc_writer_loop_prog_n_storage <= basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_r;
	end
	basesoc_writer_loop_prog_n_re <= basesoc_csr_bankarray_csrbank6_writer_table_loop_prog_n0_re;
	basesoc_writer_loop_status_re <= basesoc_csr_bankarray_csrbank6_writer_table_loop_status_re;
	basesoc_writer_level_re <= basesoc_csr_bankarray_csrbank6_writer_table_level_re;
	if (basesoc_csr_bankarray_csrbank6_writer_table_reset0_re) begin
		basesoc_writer_reset_storage <= basesoc_csr_bankarray_csrbank6_writer_table_reset0_r;
	end
	basesoc_writer_reset_re <= basesoc_csr_bankarray_csrbank6_writer_table_reset0_re;
	if (basesoc_csr_bankarray_csrbank6_reader_enable0_re) begin
		basesoc_reader_enable_storage <= basesoc_csr_bankarray_csrbank6_reader_enable0_r;
	end
	basesoc_reader_enable_re <= basesoc_csr_bankarray_csrbank6_reader_enable0_re;
	if (basesoc_csr_bankarray_csrbank6_reader_table_value1_re) begin
		basesoc_reader_value_storage[57:32] <= basesoc_csr_bankarray_csrbank6_reader_table_value1_r;
	end
	if (basesoc_csr_bankarray_csrbank6_reader_table_value0_re) begin
		basesoc_reader_value_storage[31:0] <= basesoc_csr_bankarray_csrbank6_reader_table_value0_r;
	end
	basesoc_reader_value_re <= basesoc_csr_bankarray_csrbank6_reader_table_value0_re;
	if (basesoc_csr_bankarray_csrbank6_reader_table_we0_re) begin
		basesoc_reader_we_storage <= basesoc_csr_bankarray_csrbank6_reader_table_we0_r;
	end
	basesoc_reader_we_re <= basesoc_csr_bankarray_csrbank6_reader_table_we0_re;
	if (basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_re) begin
		basesoc_reader_loop_prog_n_storage <= basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_r;
	end
	basesoc_reader_loop_prog_n_re <= basesoc_csr_bankarray_csrbank6_reader_table_loop_prog_n0_re;
	basesoc_reader_loop_status_re <= basesoc_csr_bankarray_csrbank6_reader_table_loop_status_re;
	basesoc_reader_level_re <= basesoc_csr_bankarray_csrbank6_reader_table_level_re;
	if (basesoc_csr_bankarray_csrbank6_reader_table_reset0_re) begin
		basesoc_reader_reset_storage <= basesoc_csr_bankarray_csrbank6_reader_table_reset0_r;
	end
	basesoc_reader_reset_re <= basesoc_csr_bankarray_csrbank6_reader_table_reset0_re;
	if (basesoc_csr_bankarray_csrbank6_loopback_enable0_re) begin
		basesoc_loopback_storage <= basesoc_csr_bankarray_csrbank6_loopback_enable0_r;
	end
	basesoc_loopback_re <= basesoc_csr_bankarray_csrbank6_loopback_enable0_re;
	if (basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_re) begin
		basesoc_buffering_reader_fifo_control_storage[31:0] <= basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_r;
	end
	basesoc_buffering_reader_fifo_control_re <= basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_control0_re;
	basesoc_buffering_reader_fifo_status_re <= basesoc_csr_bankarray_csrbank6_buffering_reader_fifo_status_re;
	if (basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_re) begin
		basesoc_buffering_writer_fifo_control_storage[31:0] <= basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_r;
	end
	basesoc_buffering_writer_fifo_control_re <= basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_control0_re;
	basesoc_buffering_writer_fifo_status_re <= basesoc_csr_bankarray_csrbank6_buffering_writer_fifo_status_re;
	basesoc_csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank7_sel) begin
		case (basesoc_csr_bankarray_interface7_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface7_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank7_enable0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface7_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank7_clear0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface7_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank7_vector_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank7_enable0_re) begin
		basesoc_msi_enable_storage[31:0] <= basesoc_csr_bankarray_csrbank7_enable0_r;
	end
	basesoc_msi_enable_re <= basesoc_csr_bankarray_csrbank7_enable0_re;
	if (basesoc_csr_bankarray_csrbank7_clear0_re) begin
		basesoc_msi_clear_storage[31:0] <= basesoc_csr_bankarray_csrbank7_clear0_r;
	end
	basesoc_msi_clear_re <= basesoc_csr_bankarray_csrbank7_clear0_re;
	basesoc_msi_vector_re <= basesoc_csr_bankarray_csrbank7_vector_re;
	basesoc_csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank8_sel) begin
		case (basesoc_csr_bankarray_interface8_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface8_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank8_link_status_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface8_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank8_msi_enable_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface8_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank8_msix_enable_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface8_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank8_bus_master_enable_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface8_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank8_max_request_size_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface8_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank8_max_payload_size_w;
			end
		endcase
	end
	s7pciephy_link_status_re <= basesoc_csr_bankarray_csrbank8_link_status_re;
	s7pciephy_msi_enable_re <= basesoc_csr_bankarray_csrbank8_msi_enable_re;
	s7pciephy_msix_enable_re <= basesoc_csr_bankarray_csrbank8_msix_enable_re;
	s7pciephy_bus_master_enable_re <= basesoc_csr_bankarray_csrbank8_bus_master_enable_re;
	s7pciephy_max_request_size_re <= basesoc_csr_bankarray_csrbank8_max_request_size_re;
	s7pciephy_max_payload_size_re <= basesoc_csr_bankarray_csrbank8_max_payload_size_re;
	basesoc_csr_bankarray_interface9_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank9_sel) begin
		case (basesoc_csr_bankarray_interface9_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_control0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_sdram_phaseinjector0_command_issue_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_w;
			end
			4'd8: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_sdram_phaseinjector1_command_issue_w;
			end
			4'd9: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_w;
			end
			4'd10: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_w;
			end
			4'd11: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_w;
			end
			4'd12: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_w;
			end
			4'd13: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_w;
			end
			4'd14: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_sdram_phaseinjector2_command_issue_w;
			end
			4'd15: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_w;
			end
			5'd16: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_w;
			end
			5'd17: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_w;
			end
			5'd18: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_w;
			end
			5'd19: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_w;
			end
			5'd20: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_sdram_phaseinjector3_command_issue_w;
			end
			5'd21: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_w;
			end
			5'd22: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_w;
			end
			5'd23: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_w;
			end
			5'd24: begin
				basesoc_csr_bankarray_interface9_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank9_dfii_control0_re) begin
		basesoc_sdram_storage[3:0] <= basesoc_csr_bankarray_csrbank9_dfii_control0_r;
	end
	basesoc_sdram_re <= basesoc_csr_bankarray_csrbank9_dfii_control0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_re) begin
		basesoc_sdram_phaseinjector0_command_storage[5:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_r;
	end
	basesoc_sdram_phaseinjector0_command_re <= basesoc_csr_bankarray_csrbank9_dfii_pi0_command0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_re) begin
		basesoc_sdram_phaseinjector0_address_storage[15:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_r;
	end
	basesoc_sdram_phaseinjector0_address_re <= basesoc_csr_bankarray_csrbank9_dfii_pi0_address0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_re) begin
		basesoc_sdram_phaseinjector0_baddress_storage[2:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_r;
	end
	basesoc_sdram_phaseinjector0_baddress_re <= basesoc_csr_bankarray_csrbank9_dfii_pi0_baddress0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_re) begin
		basesoc_sdram_phaseinjector0_wrdata_storage[31:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_r;
	end
	basesoc_sdram_phaseinjector0_wrdata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi0_wrdata0_re;
	basesoc_sdram_phaseinjector0_rddata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi0_rddata_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_re) begin
		basesoc_sdram_phaseinjector1_command_storage[5:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_r;
	end
	basesoc_sdram_phaseinjector1_command_re <= basesoc_csr_bankarray_csrbank9_dfii_pi1_command0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_re) begin
		basesoc_sdram_phaseinjector1_address_storage[15:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_r;
	end
	basesoc_sdram_phaseinjector1_address_re <= basesoc_csr_bankarray_csrbank9_dfii_pi1_address0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_re) begin
		basesoc_sdram_phaseinjector1_baddress_storage[2:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_r;
	end
	basesoc_sdram_phaseinjector1_baddress_re <= basesoc_csr_bankarray_csrbank9_dfii_pi1_baddress0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_re) begin
		basesoc_sdram_phaseinjector1_wrdata_storage[31:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_r;
	end
	basesoc_sdram_phaseinjector1_wrdata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi1_wrdata0_re;
	basesoc_sdram_phaseinjector1_rddata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi1_rddata_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_re) begin
		basesoc_sdram_phaseinjector2_command_storage[5:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_r;
	end
	basesoc_sdram_phaseinjector2_command_re <= basesoc_csr_bankarray_csrbank9_dfii_pi2_command0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_re) begin
		basesoc_sdram_phaseinjector2_address_storage[15:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_r;
	end
	basesoc_sdram_phaseinjector2_address_re <= basesoc_csr_bankarray_csrbank9_dfii_pi2_address0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_re) begin
		basesoc_sdram_phaseinjector2_baddress_storage[2:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_r;
	end
	basesoc_sdram_phaseinjector2_baddress_re <= basesoc_csr_bankarray_csrbank9_dfii_pi2_baddress0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_re) begin
		basesoc_sdram_phaseinjector2_wrdata_storage[31:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_r;
	end
	basesoc_sdram_phaseinjector2_wrdata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi2_wrdata0_re;
	basesoc_sdram_phaseinjector2_rddata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi2_rddata_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_re) begin
		basesoc_sdram_phaseinjector3_command_storage[5:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_r;
	end
	basesoc_sdram_phaseinjector3_command_re <= basesoc_csr_bankarray_csrbank9_dfii_pi3_command0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_re) begin
		basesoc_sdram_phaseinjector3_address_storage[15:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_r;
	end
	basesoc_sdram_phaseinjector3_address_re <= basesoc_csr_bankarray_csrbank9_dfii_pi3_address0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_re) begin
		basesoc_sdram_phaseinjector3_baddress_storage[2:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_r;
	end
	basesoc_sdram_phaseinjector3_baddress_re <= basesoc_csr_bankarray_csrbank9_dfii_pi3_baddress0_re;
	if (basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_re) begin
		basesoc_sdram_phaseinjector3_wrdata_storage[31:0] <= basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_r;
	end
	basesoc_sdram_phaseinjector3_wrdata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi3_wrdata0_re;
	basesoc_sdram_phaseinjector3_rddata_re <= basesoc_csr_bankarray_csrbank9_dfii_pi3_rddata_re;
	basesoc_csr_bankarray_interface10_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank10_sel) begin
		case (basesoc_csr_bankarray_interface10_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_load0_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_reload0_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_en0_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_update_value0_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_value_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_ev_status_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_ev_pending_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface10_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank10_ev_enable0_w;
			end
		endcase
	end
	if (basesoc_csr_bankarray_csrbank10_load0_re) begin
		basesoc_basesoc_load_storage[31:0] <= basesoc_csr_bankarray_csrbank10_load0_r;
	end
	basesoc_basesoc_load_re <= basesoc_csr_bankarray_csrbank10_load0_re;
	if (basesoc_csr_bankarray_csrbank10_reload0_re) begin
		basesoc_basesoc_reload_storage[31:0] <= basesoc_csr_bankarray_csrbank10_reload0_r;
	end
	basesoc_basesoc_reload_re <= basesoc_csr_bankarray_csrbank10_reload0_re;
	if (basesoc_csr_bankarray_csrbank10_en0_re) begin
		basesoc_basesoc_en_storage <= basesoc_csr_bankarray_csrbank10_en0_r;
	end
	basesoc_basesoc_en_re <= basesoc_csr_bankarray_csrbank10_en0_re;
	if (basesoc_csr_bankarray_csrbank10_update_value0_re) begin
		basesoc_basesoc_update_value_storage <= basesoc_csr_bankarray_csrbank10_update_value0_r;
	end
	basesoc_basesoc_update_value_re <= basesoc_csr_bankarray_csrbank10_update_value0_re;
	basesoc_basesoc_value_re <= basesoc_csr_bankarray_csrbank10_value_re;
	basesoc_basesoc_status_re <= basesoc_csr_bankarray_csrbank10_ev_status_re;
	if (basesoc_csr_bankarray_csrbank10_ev_pending_re) begin
		basesoc_basesoc_pending_r <= basesoc_csr_bankarray_csrbank10_ev_pending_r;
	end
	basesoc_basesoc_pending_re <= basesoc_csr_bankarray_csrbank10_ev_pending_re;
	if (basesoc_csr_bankarray_csrbank10_ev_enable0_re) begin
		basesoc_basesoc_enable_storage <= basesoc_csr_bankarray_csrbank10_ev_enable0_r;
	end
	basesoc_basesoc_enable_re <= basesoc_csr_bankarray_csrbank10_ev_enable0_re;
	basesoc_csr_bankarray_interface11_bank_bus_dat_r <= 1'd0;
	if (basesoc_csr_bankarray_csrbank11_sel) begin
		case (basesoc_csr_bankarray_interface11_bank_bus_adr[8:0])
			1'd0: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_basesoc_uartcrossover_rxtx_w;
			end
			1'd1: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_txfull_w;
			end
			2'd2: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_rxempty_w;
			end
			2'd3: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_ev_status_w;
			end
			3'd4: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_ev_pending_w;
			end
			3'd5: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_ev_enable0_w;
			end
			3'd6: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_txempty_w;
			end
			3'd7: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_rxfull_w;
			end
			4'd8: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_basesoc_xover_rxtx_w;
			end
			4'd9: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_txfull_w;
			end
			4'd10: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_rxempty_w;
			end
			4'd11: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_ev_status_w;
			end
			4'd12: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_ev_pending_w;
			end
			4'd13: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_ev_enable0_w;
			end
			4'd14: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_txempty_w;
			end
			4'd15: begin
				basesoc_csr_bankarray_interface11_bank_bus_dat_r <= basesoc_csr_bankarray_csrbank11_xover_rxfull_w;
			end
		endcase
	end
	basesoc_basesoc_uartcrossover_txfull_re <= basesoc_csr_bankarray_csrbank11_txfull_re;
	basesoc_basesoc_uartcrossover_rxempty_re <= basesoc_csr_bankarray_csrbank11_rxempty_re;
	basesoc_basesoc_uartcrossover_status_re <= basesoc_csr_bankarray_csrbank11_ev_status_re;
	if (basesoc_csr_bankarray_csrbank11_ev_pending_re) begin
		basesoc_basesoc_uartcrossover_pending_r[1:0] <= basesoc_csr_bankarray_csrbank11_ev_pending_r;
	end
	basesoc_basesoc_uartcrossover_pending_re <= basesoc_csr_bankarray_csrbank11_ev_pending_re;
	if (basesoc_csr_bankarray_csrbank11_ev_enable0_re) begin
		basesoc_basesoc_uartcrossover_enable_storage[1:0] <= basesoc_csr_bankarray_csrbank11_ev_enable0_r;
	end
	basesoc_basesoc_uartcrossover_enable_re <= basesoc_csr_bankarray_csrbank11_ev_enable0_re;
	basesoc_basesoc_uartcrossover_txempty_re <= basesoc_csr_bankarray_csrbank11_txempty_re;
	basesoc_basesoc_uartcrossover_rxfull_re <= basesoc_csr_bankarray_csrbank11_rxfull_re;
	basesoc_basesoc_xover_txfull_re <= basesoc_csr_bankarray_csrbank11_xover_txfull_re;
	basesoc_basesoc_xover_rxempty_re <= basesoc_csr_bankarray_csrbank11_xover_rxempty_re;
	basesoc_basesoc_xover_status_re <= basesoc_csr_bankarray_csrbank11_xover_ev_status_re;
	if (basesoc_csr_bankarray_csrbank11_xover_ev_pending_re) begin
		basesoc_basesoc_xover_pending_r[1:0] <= basesoc_csr_bankarray_csrbank11_xover_ev_pending_r;
	end
	basesoc_basesoc_xover_pending_re <= basesoc_csr_bankarray_csrbank11_xover_ev_pending_re;
	if (basesoc_csr_bankarray_csrbank11_xover_ev_enable0_re) begin
		basesoc_basesoc_xover_enable_storage[1:0] <= basesoc_csr_bankarray_csrbank11_xover_ev_enable0_r;
	end
	basesoc_basesoc_xover_enable_re <= basesoc_csr_bankarray_csrbank11_xover_ev_enable0_re;
	basesoc_basesoc_xover_txempty_re <= basesoc_csr_bankarray_csrbank11_xover_txempty_re;
	basesoc_basesoc_xover_rxfull_re <= basesoc_csr_bankarray_csrbank11_xover_rxfull_re;
	if (sys_rst) begin
		basesoc_basesoc_reset_storage <= 2'd0;
		basesoc_basesoc_reset_re <= 1'd0;
		basesoc_basesoc_scratch_storage <= 32'd305419896;
		basesoc_basesoc_scratch_re <= 1'd0;
		basesoc_basesoc_bus_errors_re <= 1'd0;
		basesoc_basesoc_bus_errors <= 32'd0;
		basesoc_basesoc_basesoc_ram_bus_ack <= 1'd0;
		basesoc_basesoc_ram_bus_ram_bus_ack <= 1'd0;
		basesoc_basesoc_uartcrossover_txfull_re <= 1'd0;
		basesoc_basesoc_uartcrossover_rxempty_re <= 1'd0;
		basesoc_basesoc_uartcrossover_tx_pending <= 1'd0;
		basesoc_basesoc_uartcrossover_tx_trigger_d <= 1'd0;
		basesoc_basesoc_uartcrossover_rx_pending <= 1'd0;
		basesoc_basesoc_uartcrossover_rx_trigger_d <= 1'd0;
		basesoc_basesoc_uartcrossover_status_re <= 1'd0;
		basesoc_basesoc_uartcrossover_pending_re <= 1'd0;
		basesoc_basesoc_uartcrossover_pending_r <= 2'd0;
		basesoc_basesoc_uartcrossover_enable_storage <= 2'd0;
		basesoc_basesoc_uartcrossover_enable_re <= 1'd0;
		basesoc_basesoc_uartcrossover_txempty_re <= 1'd0;
		basesoc_basesoc_uartcrossover_rxfull_re <= 1'd0;
		basesoc_basesoc_uartcrossover_tx_fifo_readable <= 1'd0;
		basesoc_basesoc_uartcrossover_tx_fifo_level0 <= 5'd0;
		basesoc_basesoc_uartcrossover_tx_fifo_produce <= 4'd0;
		basesoc_basesoc_uartcrossover_tx_fifo_consume <= 4'd0;
		basesoc_basesoc_uartcrossover_rx_fifo_readable <= 1'd0;
		basesoc_basesoc_uartcrossover_rx_fifo_level0 <= 5'd0;
		basesoc_basesoc_uartcrossover_rx_fifo_produce <= 4'd0;
		basesoc_basesoc_uartcrossover_rx_fifo_consume <= 4'd0;
		basesoc_basesoc_xover_txfull_re <= 1'd0;
		basesoc_basesoc_xover_rxempty_re <= 1'd0;
		basesoc_basesoc_xover_tx_pending <= 1'd0;
		basesoc_basesoc_xover_tx_trigger_d <= 1'd0;
		basesoc_basesoc_xover_rx_pending <= 1'd0;
		basesoc_basesoc_xover_rx_trigger_d <= 1'd0;
		basesoc_basesoc_xover_status_re <= 1'd0;
		basesoc_basesoc_xover_pending_re <= 1'd0;
		basesoc_basesoc_xover_pending_r <= 2'd0;
		basesoc_basesoc_xover_enable_storage <= 2'd0;
		basesoc_basesoc_xover_enable_re <= 1'd0;
		basesoc_basesoc_xover_txempty_re <= 1'd0;
		basesoc_basesoc_xover_rxfull_re <= 1'd0;
		basesoc_basesoc_xover_tx_fifo_source_valid <= 1'd0;
		basesoc_basesoc_xover_tx_fifo_source_payload_data <= 8'd0;
		basesoc_basesoc_xover_rx_fifo_readable <= 1'd0;
		basesoc_basesoc_xover_rx_fifo_level0 <= 5'd0;
		basesoc_basesoc_xover_rx_fifo_produce <= 4'd0;
		basesoc_basesoc_xover_rx_fifo_consume <= 4'd0;
		basesoc_basesoc_load_storage <= 32'd0;
		basesoc_basesoc_load_re <= 1'd0;
		basesoc_basesoc_reload_storage <= 32'd0;
		basesoc_basesoc_reload_re <= 1'd0;
		basesoc_basesoc_en_storage <= 1'd0;
		basesoc_basesoc_en_re <= 1'd0;
		basesoc_basesoc_update_value_storage <= 1'd0;
		basesoc_basesoc_update_value_re <= 1'd0;
		basesoc_basesoc_value_status <= 32'd0;
		basesoc_basesoc_value_re <= 1'd0;
		basesoc_basesoc_zero_pending <= 1'd0;
		basesoc_basesoc_zero_trigger_d <= 1'd0;
		basesoc_basesoc_status_re <= 1'd0;
		basesoc_basesoc_pending_re <= 1'd0;
		basesoc_basesoc_pending_r <= 1'd0;
		basesoc_basesoc_enable_storage <= 1'd0;
		basesoc_basesoc_enable_re <= 1'd0;
		basesoc_basesoc_value <= 32'd0;
		a7ddrphy_rst_storage <= 1'd0;
		a7ddrphy_rst_re <= 1'd0;
		a7ddrphy_half_sys8x_taps_storage <= 5'd8;
		a7ddrphy_half_sys8x_taps_re <= 1'd0;
		a7ddrphy_wlevel_en_storage <= 1'd0;
		a7ddrphy_wlevel_en_re <= 1'd0;
		a7ddrphy_dly_sel_storage <= 2'd0;
		a7ddrphy_dly_sel_re <= 1'd0;
		a7ddrphy_rdphase_storage <= 2'd2;
		a7ddrphy_rdphase_re <= 1'd0;
		a7ddrphy_wrphase_storage <= 2'd3;
		a7ddrphy_wrphase_re <= 1'd0;
		a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
		a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
		a7ddrphy_dqspattern_o1 <= 8'd0;
		a7ddrphy_bitslip0_value0 <= 3'd7;
		a7ddrphy_bitslip1_value0 <= 3'd7;
		a7ddrphy_bitslip0_value1 <= 3'd7;
		a7ddrphy_bitslip1_value1 <= 3'd7;
		a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
		a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
		a7ddrphy_bitslip0_value2 <= 3'd7;
		a7ddrphy_bitslip0_value3 <= 3'd7;
		a7ddrphy_bitslip1_value2 <= 3'd7;
		a7ddrphy_bitslip1_value3 <= 3'd7;
		a7ddrphy_bitslip2_value0 <= 3'd7;
		a7ddrphy_bitslip2_value1 <= 3'd7;
		a7ddrphy_bitslip3_value0 <= 3'd7;
		a7ddrphy_bitslip3_value1 <= 3'd7;
		a7ddrphy_bitslip4_value0 <= 3'd7;
		a7ddrphy_bitslip4_value1 <= 3'd7;
		a7ddrphy_bitslip5_value0 <= 3'd7;
		a7ddrphy_bitslip5_value1 <= 3'd7;
		a7ddrphy_bitslip6_value0 <= 3'd7;
		a7ddrphy_bitslip6_value1 <= 3'd7;
		a7ddrphy_bitslip7_value0 <= 3'd7;
		a7ddrphy_bitslip7_value1 <= 3'd7;
		a7ddrphy_bitslip8_value0 <= 3'd7;
		a7ddrphy_bitslip8_value1 <= 3'd7;
		a7ddrphy_bitslip9_value0 <= 3'd7;
		a7ddrphy_bitslip9_value1 <= 3'd7;
		a7ddrphy_bitslip10_value0 <= 3'd7;
		a7ddrphy_bitslip10_value1 <= 3'd7;
		a7ddrphy_bitslip11_value0 <= 3'd7;
		a7ddrphy_bitslip11_value1 <= 3'd7;
		a7ddrphy_bitslip12_value0 <= 3'd7;
		a7ddrphy_bitslip12_value1 <= 3'd7;
		a7ddrphy_bitslip13_value0 <= 3'd7;
		a7ddrphy_bitslip13_value1 <= 3'd7;
		a7ddrphy_bitslip14_value0 <= 3'd7;
		a7ddrphy_bitslip14_value1 <= 3'd7;
		a7ddrphy_bitslip15_value0 <= 3'd7;
		a7ddrphy_bitslip15_value1 <= 3'd7;
		a7ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
		a7ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
		a7ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
		a7ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
		a7ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
		basesoc_sdram_storage <= 4'd1;
		basesoc_sdram_re <= 1'd0;
		basesoc_sdram_phaseinjector0_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector0_command_re <= 1'd0;
		basesoc_sdram_phaseinjector0_address_re <= 1'd0;
		basesoc_sdram_phaseinjector0_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector0_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector0_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector0_rddata_re <= 1'd0;
		basesoc_sdram_phaseinjector1_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector1_command_re <= 1'd0;
		basesoc_sdram_phaseinjector1_address_re <= 1'd0;
		basesoc_sdram_phaseinjector1_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector1_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector1_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector1_rddata_re <= 1'd0;
		basesoc_sdram_phaseinjector2_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector2_command_re <= 1'd0;
		basesoc_sdram_phaseinjector2_address_re <= 1'd0;
		basesoc_sdram_phaseinjector2_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector2_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector2_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector2_rddata_re <= 1'd0;
		basesoc_sdram_phaseinjector3_command_storage <= 6'd0;
		basesoc_sdram_phaseinjector3_command_re <= 1'd0;
		basesoc_sdram_phaseinjector3_address_re <= 1'd0;
		basesoc_sdram_phaseinjector3_baddress_re <= 1'd0;
		basesoc_sdram_phaseinjector3_wrdata_re <= 1'd0;
		basesoc_sdram_phaseinjector3_rddata_status <= 32'd0;
		basesoc_sdram_phaseinjector3_rddata_re <= 1'd0;
		basesoc_sdram_dfi_p0_address <= 16'd0;
		basesoc_sdram_dfi_p0_bank <= 3'd0;
		basesoc_sdram_dfi_p0_cas_n <= 1'd1;
		basesoc_sdram_dfi_p0_cs_n <= 1'd1;
		basesoc_sdram_dfi_p0_ras_n <= 1'd1;
		basesoc_sdram_dfi_p0_we_n <= 1'd1;
		basesoc_sdram_dfi_p0_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p0_rddata_en <= 1'd0;
		basesoc_sdram_dfi_p1_address <= 16'd0;
		basesoc_sdram_dfi_p1_bank <= 3'd0;
		basesoc_sdram_dfi_p1_cas_n <= 1'd1;
		basesoc_sdram_dfi_p1_cs_n <= 1'd1;
		basesoc_sdram_dfi_p1_ras_n <= 1'd1;
		basesoc_sdram_dfi_p1_we_n <= 1'd1;
		basesoc_sdram_dfi_p1_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p1_rddata_en <= 1'd0;
		basesoc_sdram_dfi_p2_address <= 16'd0;
		basesoc_sdram_dfi_p2_bank <= 3'd0;
		basesoc_sdram_dfi_p2_cas_n <= 1'd1;
		basesoc_sdram_dfi_p2_cs_n <= 1'd1;
		basesoc_sdram_dfi_p2_ras_n <= 1'd1;
		basesoc_sdram_dfi_p2_we_n <= 1'd1;
		basesoc_sdram_dfi_p2_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p2_rddata_en <= 1'd0;
		basesoc_sdram_dfi_p3_address <= 16'd0;
		basesoc_sdram_dfi_p3_bank <= 3'd0;
		basesoc_sdram_dfi_p3_cas_n <= 1'd1;
		basesoc_sdram_dfi_p3_cs_n <= 1'd1;
		basesoc_sdram_dfi_p3_ras_n <= 1'd1;
		basesoc_sdram_dfi_p3_we_n <= 1'd1;
		basesoc_sdram_dfi_p3_wrdata_en <= 1'd0;
		basesoc_sdram_dfi_p3_rddata_en <= 1'd0;
		basesoc_sdram_cmd_payload_a <= 16'd0;
		basesoc_sdram_cmd_payload_ba <= 3'd0;
		basesoc_sdram_cmd_payload_cas <= 1'd0;
		basesoc_sdram_cmd_payload_ras <= 1'd0;
		basesoc_sdram_cmd_payload_we <= 1'd0;
		basesoc_sdram_timer_count1 <= 10'd781;
		basesoc_sdram_postponer_req_o <= 1'd0;
		basesoc_sdram_postponer_count <= 1'd0;
		basesoc_sdram_sequencer_done1 <= 1'd0;
		basesoc_sdram_sequencer_counter <= 7'd0;
		basesoc_sdram_sequencer_count <= 1'd0;
		basesoc_sdram_zqcs_timer_count1 <= 27'd99999999;
		basesoc_sdram_zqcs_executer_done <= 1'd0;
		basesoc_sdram_zqcs_executer_counter <= 5'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine0_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine0_row <= 16'd0;
		basesoc_sdram_bankmachine0_row_opened <= 1'd0;
		basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine0_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine0_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine0_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine1_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine1_row <= 16'd0;
		basesoc_sdram_bankmachine1_row_opened <= 1'd0;
		basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine1_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine1_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine1_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine2_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine2_row <= 16'd0;
		basesoc_sdram_bankmachine2_row_opened <= 1'd0;
		basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine2_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine2_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine2_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine3_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine3_row <= 16'd0;
		basesoc_sdram_bankmachine3_row_opened <= 1'd0;
		basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine3_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine3_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine3_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine4_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine4_row <= 16'd0;
		basesoc_sdram_bankmachine4_row_opened <= 1'd0;
		basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine4_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine4_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine4_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine4_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine4_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine5_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine5_row <= 16'd0;
		basesoc_sdram_bankmachine5_row_opened <= 1'd0;
		basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine5_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine5_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine5_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine5_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine5_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine6_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine6_row <= 16'd0;
		basesoc_sdram_bankmachine6_row_opened <= 1'd0;
		basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine6_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine6_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine6_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine6_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine6_trascon_count <= 3'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_level <= 4'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_produce <= 3'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_lookahead_consume <= 3'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_source_valid <= 1'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_we <= 1'd0;
		basesoc_sdram_bankmachine7_cmd_buffer_source_payload_addr <= 23'd0;
		basesoc_sdram_bankmachine7_row <= 16'd0;
		basesoc_sdram_bankmachine7_row_opened <= 1'd0;
		basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
		basesoc_sdram_bankmachine7_twtpcon_count <= 3'd0;
		basesoc_sdram_bankmachine7_trccon_ready <= 1'd0;
		basesoc_sdram_bankmachine7_trccon_count <= 3'd0;
		basesoc_sdram_bankmachine7_trascon_ready <= 1'd0;
		basesoc_sdram_bankmachine7_trascon_count <= 3'd0;
		basesoc_sdram_choose_cmd_grant <= 3'd0;
		basesoc_sdram_choose_req_grant <= 3'd0;
		basesoc_sdram_trrdcon_ready <= 1'd0;
		basesoc_sdram_trrdcon_count <= 1'd0;
		basesoc_sdram_tfawcon_ready <= 1'd1;
		basesoc_sdram_tfawcon_window <= 5'd0;
		basesoc_sdram_tccdcon_ready <= 1'd0;
		basesoc_sdram_tccdcon_count <= 1'd0;
		basesoc_sdram_twtrcon_ready <= 1'd0;
		basesoc_sdram_twtrcon_count <= 3'd0;
		basesoc_sdram_time0 <= 5'd0;
		basesoc_sdram_time1 <= 4'd0;
		basesoc_aborted <= 1'd0;
		s7pciephy_link_status_re <= 1'd0;
		s7pciephy_msi_enable_re <= 1'd0;
		s7pciephy_msix_enable_re <= 1'd0;
		s7pciephy_bus_master_enable_re <= 1'd0;
		s7pciephy_max_request_size_re <= 1'd0;
		s7pciephy_max_payload_size_re <= 1'd0;
		s7pciephy_tx_datapath_pipe_valid_source_valid <= 1'd0;
		s7pciephy_tx_datapath_pipe_valid_source_payload_dat <= 128'd0;
		s7pciephy_tx_datapath_pipe_valid_source_payload_be <= 16'd0;
		s7pciephy_tx_datapath_cdc_graycounter0_q <= 3'd0;
		s7pciephy_tx_datapath_cdc_graycounter0_q_binary <= 3'd0;
		s7pciephy_rx_datapath_cdc_graycounter1_q <= 3'd0;
		s7pciephy_rx_datapath_cdc_graycounter1_q_binary <= 3'd0;
		s7pciephy_rx_datapath_pipe_valid_source_valid <= 1'd0;
		s7pciephy_rx_datapath_pipe_valid_source_payload_dat <= 128'd0;
		s7pciephy_rx_datapath_pipe_valid_source_payload_be <= 16'd0;
		s7pciephy_msi_cdc_graycounter0_q <= 3'd0;
		s7pciephy_msi_cdc_graycounter0_q_binary <= 3'd0;
		basesoc_depacketizer_header_extracter_source_payload_header <= 128'd0;
		basesoc_depacketizer_header_extracter_first <= 1'd0;
		basesoc_depacketizer_header_extracter_last <= 1'd0;
		basesoc_depacketizer_dispatcher_first <= 1'd1;
		basesoc_depacketizer_dispatcher_ongoing1 <= 1'd0;
		basesoc_depacketizer_dispatcher_sel_ongoing <= 1'd0;
		basesoc_packetizer_grant <= 1'd0;
		basesoc_packetizer_status0_first <= 1'd1;
		basesoc_packetizer_status0_ongoing1 <= 1'd0;
		basesoc_packetizer_status1_first <= 1'd1;
		basesoc_packetizer_status1_ongoing1 <= 1'd0;
		basesoc_mmap_sink_payload_adr <= 32'd0;
		basesoc_mmap_sink_payload_len <= 10'd0;
		basesoc_mmap_sink_payload_req_id <= 16'd0;
		basesoc_mmap_sink_payload_cmp_id <= 16'd0;
		basesoc_mmap_sink_payload_err <= 1'd0;
		basesoc_mmap_sink_payload_tag <= 8'd0;
		basesoc_mmap_sink_payload_dat <= 128'd0;
		basesoc_msi_enable_storage <= 32'd0;
		basesoc_msi_enable_re <= 1'd0;
		basesoc_msi_clear_storage <= 32'd0;
		basesoc_msi_clear_re <= 1'd0;
		basesoc_msi_vector_re <= 1'd0;
		basesoc_msi_vector <= 32'd0;
		basesoc_msi_msi <= 32'd0;
		basesoc_writer_enable_storage <= 1'd0;
		basesoc_writer_enable_re <= 1'd0;
		basesoc_writer_value_re <= 1'd0;
		basesoc_writer_we_storage <= 1'd0;
		basesoc_writer_we_re <= 1'd0;
		basesoc_writer_loop_prog_n_storage <= 1'd0;
		basesoc_writer_loop_prog_n_re <= 1'd0;
		basesoc_writer_index <= 16'd0;
		basesoc_writer_count <= 16'd0;
		basesoc_writer_loop_status_re <= 1'd0;
		basesoc_writer_level_re <= 1'd0;
		basesoc_writer_reset_storage <= 1'd0;
		basesoc_writer_reset_re <= 1'd0;
		basesoc_writer_table_sink_valid <= 1'd0;
		basesoc_writer_table_sink_payload_address <= 32'd0;
		basesoc_writer_table_sink_payload_length <= 24'd0;
		basesoc_writer_table_sink_payload_irq_disable <= 1'd0;
		basesoc_writer_table_sink_payload_last_disable <= 1'd0;
		basesoc_writer_table_level <= 9'd0;
		basesoc_writer_table_produce <= 8'd0;
		basesoc_writer_table_consume <= 8'd0;
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_length <= 32'd0;
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_offset <= 32'd0;
		basesoc_writer_splitter_litepciedmadescriptorsplitter_desc_id <= 32'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_valid <= 1'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_address <= 32'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_length <= 24'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_irq_disable <= 1'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_last_disable <= 1'd0;
		basesoc_writer_splitter_bufferizeendpoints_source_payload_user_id <= 8'd0;
		basesoc_writer_data_fifo_readable <= 1'd0;
		basesoc_writer_data_fifo_level0 <= 8'd0;
		basesoc_writer_data_fifo_produce <= 7'd0;
		basesoc_writer_data_fifo_consume <= 7'd0;
		basesoc_writer_req_count <= 24'd0;
		basesoc_reader_enable_storage <= 1'd0;
		basesoc_reader_enable_re <= 1'd0;
		basesoc_reader_value_re <= 1'd0;
		basesoc_reader_we_storage <= 1'd0;
		basesoc_reader_we_re <= 1'd0;
		basesoc_reader_loop_prog_n_storage <= 1'd0;
		basesoc_reader_loop_prog_n_re <= 1'd0;
		basesoc_reader_index <= 16'd0;
		basesoc_reader_count <= 16'd0;
		basesoc_reader_loop_status_re <= 1'd0;
		basesoc_reader_level_re <= 1'd0;
		basesoc_reader_reset_storage <= 1'd0;
		basesoc_reader_reset_re <= 1'd0;
		basesoc_reader_table_sink_valid <= 1'd0;
		basesoc_reader_table_sink_payload_address <= 32'd0;
		basesoc_reader_table_sink_payload_length <= 24'd0;
		basesoc_reader_table_sink_payload_irq_disable <= 1'd0;
		basesoc_reader_table_sink_payload_last_disable <= 1'd0;
		basesoc_reader_table_level <= 9'd0;
		basesoc_reader_table_produce <= 8'd0;
		basesoc_reader_table_consume <= 8'd0;
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_length <= 32'd0;
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_offset <= 32'd0;
		basesoc_reader_splitter_litepciedmadescriptorsplitter_desc_id <= 32'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_valid <= 1'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_address <= 32'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_length <= 24'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_irq_disable <= 1'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_last_disable <= 1'd0;
		basesoc_reader_splitter_bufferizeendpoints_source_payload_user_id <= 8'd0;
		basesoc_reader_last_user_id <= 8'd255;
		basesoc_reader_data_fifo_readable <= 1'd0;
		basesoc_reader_data_fifo_level0 <= 11'd0;
		basesoc_reader_data_fifo_produce <= 10'd0;
		basesoc_reader_data_fifo_consume <= 10'd0;
		basesoc_reader_pending_words <= 11'd0;
		basesoc_loopback_storage <= 1'd0;
		basesoc_loopback_re <= 1'd0;
		basesoc_buffering_reader_fifo_control_storage <= 32'd1024;
		basesoc_buffering_reader_fifo_control_re <= 1'd0;
		basesoc_buffering_reader_fifo_status_re <= 1'd0;
		basesoc_buffering_writer_fifo_control_storage <= 32'd1024;
		basesoc_buffering_writer_fifo_control_re <= 1'd0;
		basesoc_buffering_writer_fifo_status_re <= 1'd0;
		basesoc_buffering_reader_fifo_readable <= 1'd0;
		basesoc_buffering_reader_fifo_level0 <= 7'd0;
		basesoc_buffering_reader_fifo_produce <= 6'd0;
		basesoc_buffering_reader_fifo_consume <= 6'd0;
		basesoc_buffering_reader_fifo_level_min <= 7'd0;
		basesoc_buffering_writer_fifo_readable <= 1'd0;
		basesoc_buffering_writer_fifo_level0 <= 7'd0;
		basesoc_buffering_writer_fifo_produce <= 6'd0;
		basesoc_buffering_writer_fifo_consume <= 6'd0;
		basesoc_buffering_writer_fifo_level_max <= 7'd0;
		icap_clk <= 1'd0;
		icap_icap_clk_counter <= 4'd0;
		icap_addr_re <= 1'd0;
		icap_data_re <= 1'd0;
		icap_write_storage <= 1'd0;
		icap_write_re <= 1'd0;
		icap_done_re <= 1'd0;
		icap_read_storage <= 1'd0;
		icap_read_re <= 1'd0;
		flash_cs_n_storage <= 1'd0;
		flash_cs_n_re <= 1'd0;
		flash_pads_clk <= 1'd0;
		flash_pads_cs_n <= 1'd0;
		flash_pads_mosi <= 1'd0;
		flash_miso_1 <= 40'd0;
		flash_control_storage <= 16'd0;
		flash_control_re <= 1'd0;
		flash_status_re <= 1'd0;
		flash_mosi_re <= 1'd0;
		flash_miso_re <= 1'd0;
		flash_cs_storage <= 17'd1;
		flash_cs_re <= 1'd0;
		flash_loopback_storage <= 1'd0;
		flash_loopback_re <= 1'd0;
		flash_count <= 6'd0;
		flash_clk_divider1 <= 16'd0;
		flash_mosi_data <= 40'd0;
		flash_mosi_sel <= 6'd0;
		flash_miso_data <= 40'd0;
		leds_storage <= 4'd0;
		leds_re <= 1'd0;
		leds_chaser <= 4'd0;
		leds_mode <= 1'd0;
		leds_count <= 24'd12500000;
		subfragments_refresher_state <= 2'd0;
		subfragments_bankmachine0_state <= 4'd0;
		subfragments_bankmachine1_state <= 4'd0;
		subfragments_bankmachine2_state <= 4'd0;
		subfragments_bankmachine3_state <= 4'd0;
		subfragments_bankmachine4_state <= 4'd0;
		subfragments_bankmachine5_state <= 4'd0;
		subfragments_bankmachine6_state <= 4'd0;
		subfragments_bankmachine7_state <= 4'd0;
		subfragments_multiplexer_state <= 4'd0;
		subfragments_new_master_wdata_ready0 <= 1'd0;
		subfragments_new_master_wdata_ready1 <= 1'd0;
		subfragments_new_master_rdata_valid0 <= 1'd0;
		subfragments_new_master_rdata_valid1 <= 1'd0;
		subfragments_new_master_rdata_valid2 <= 1'd0;
		subfragments_new_master_rdata_valid3 <= 1'd0;
		subfragments_new_master_rdata_valid4 <= 1'd0;
		subfragments_new_master_rdata_valid5 <= 1'd0;
		subfragments_new_master_rdata_valid6 <= 1'd0;
		subfragments_new_master_rdata_valid7 <= 1'd0;
		subfragments_new_master_rdata_valid8 <= 1'd0;
		subfragments_fullmemorywe_state <= 2'd0;
		subfragments_litedramwishbone2native_state <= 2'd0;
		subfragments_litepcietlpdepacketizer_state <= 2'd0;
		subfragments_litepcietlppacketizer_state <= 1'd0;
		subfragments_tag_queue_readable <= 1'd0;
		subfragments_tag_queue_level0 <= 4'd0;
		subfragments_tag_queue_produce <= 3'd0;
		subfragments_tag_queue_consume <= 3'd0;
		subfragments_req_queue_readable <= 1'd0;
		subfragments_req_queue_level0 <= 4'd0;
		subfragments_req_queue_produce <= 3'd0;
		subfragments_req_queue_consume <= 3'd0;
		subfragments_syncfifo0_readable <= 1'd0;
		subfragments_syncfifo0_level0 <= 8'd0;
		subfragments_syncfifo0_produce <= 7'd0;
		subfragments_syncfifo0_consume <= 7'd0;
		subfragments_syncfifo1_readable <= 1'd0;
		subfragments_syncfifo1_level0 <= 8'd0;
		subfragments_syncfifo1_produce <= 7'd0;
		subfragments_syncfifo1_consume <= 7'd0;
		subfragments_syncfifo2_readable <= 1'd0;
		subfragments_syncfifo2_level0 <= 8'd0;
		subfragments_syncfifo2_produce <= 7'd0;
		subfragments_syncfifo2_consume <= 7'd0;
		subfragments_syncfifo3_readable <= 1'd0;
		subfragments_syncfifo3_level0 <= 8'd0;
		subfragments_syncfifo3_produce <= 7'd0;
		subfragments_syncfifo3_consume <= 7'd0;
		subfragments_syncfifo4_readable <= 1'd0;
		subfragments_syncfifo4_level0 <= 8'd0;
		subfragments_syncfifo4_produce <= 7'd0;
		subfragments_syncfifo4_consume <= 7'd0;
		subfragments_syncfifo5_readable <= 1'd0;
		subfragments_syncfifo5_level0 <= 8'd0;
		subfragments_syncfifo5_produce <= 7'd0;
		subfragments_syncfifo5_consume <= 7'd0;
		subfragments_syncfifo6_readable <= 1'd0;
		subfragments_syncfifo6_level0 <= 8'd0;
		subfragments_syncfifo6_produce <= 7'd0;
		subfragments_syncfifo6_consume <= 7'd0;
		subfragments_syncfifo7_readable <= 1'd0;
		subfragments_syncfifo7_level0 <= 8'd0;
		subfragments_syncfifo7_produce <= 7'd0;
		subfragments_syncfifo7_consume <= 7'd0;
		subfragments_fill_tag <= 3'd0;
		subfragments_grant <= 1'd0;
		subfragments_status0_first <= 1'd1;
		subfragments_status0_ongoing1 <= 1'd0;
		subfragments_status1_first <= 1'd1;
		subfragments_status1_ongoing1 <= 1'd0;
		subfragments_fsm0_state <= 2'd0;
		subfragments_fsm1_state <= 2'd0;
		subfragments_litepciewishbonemaster_state <= 2'd0;
		subfragments_litepciedmawriter_bufferizeendpoints_state <= 1'd0;
		subfragments_litepciedmawriter_fsm_state <= 1'd0;
		subfragments_litepciedmareader_bufferizeendpoints_state <= 1'd0;
		subfragments_litepciedmareader_fsm_state <= 1'd0;
		subfragments_fsm_state <= 1'd0;
		subfragments_s7spiflash_state <= 2'd0;
		basesoc_basesoc_we <= 1'd0;
		basesoc_grant <= 2'd0;
		basesoc_slave_sel_r <= 4'd0;
		basesoc_count <= 20'd1000000;
		basesoc_csr_bankarray_sel_r <= 1'd0;
		basesoc_state <= 2'd0;
	end
	xilinxmultiregimpl1_regs0 <= s7pciephy_tx_datapath_cdc_graycounter1_q;
	xilinxmultiregimpl1_regs1 <= xilinxmultiregimpl1_regs0;
	xilinxmultiregimpl2_regs0 <= s7pciephy_rx_datapath_cdc_graycounter0_q;
	xilinxmultiregimpl2_regs1 <= xilinxmultiregimpl2_regs0;
	xilinxmultiregimpl5_regs0 <= s7pciephy_msi_cdc_graycounter1_q;
	xilinxmultiregimpl5_regs1 <= xilinxmultiregimpl5_regs0;
	xilinxmultiregimpl6_regs0 <= s7pciephy_command[2];
	xilinxmultiregimpl6_regs1 <= xilinxmultiregimpl6_regs0;
	xilinxmultiregimpl7_regs0 <= s7pciephy_max_request_size;
	xilinxmultiregimpl7_regs1 <= xilinxmultiregimpl7_regs0;
	xilinxmultiregimpl8_regs0 <= s7pciephy_max_payload_size;
	xilinxmultiregimpl8_regs1 <= xilinxmultiregimpl8_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 6305-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] mem[0:6304];
initial begin
	$readmemh("mem.init", mem);
end
reg [31:0] mem_dat0;
always @(posedge sys_clk) begin
	mem_dat0 <= mem[basesoc_basesoc_basesoc_adr];
end
assign basesoc_basesoc_basesoc_dat_r = mem_dat0;


//------------------------------------------------------------------------------
// Memory mem_1: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_1[0:2047];
initial begin
	$readmemh("mem_1.init", mem_1);
end
reg [10:0] mem_1_adr0;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_ram_we[0])
		mem_1[basesoc_basesoc_ram_adr][7:0] <= basesoc_basesoc_ram_dat_w[7:0];
	if (basesoc_basesoc_ram_we[1])
		mem_1[basesoc_basesoc_ram_adr][15:8] <= basesoc_basesoc_ram_dat_w[15:8];
	if (basesoc_basesoc_ram_we[2])
		mem_1[basesoc_basesoc_ram_adr][23:16] <= basesoc_basesoc_ram_dat_w[23:16];
	if (basesoc_basesoc_ram_we[3])
		mem_1[basesoc_basesoc_ram_adr][31:24] <= basesoc_basesoc_ram_dat_w[31:24];
	mem_1_adr0 <= basesoc_basesoc_ram_adr;
end
assign basesoc_basesoc_ram_dat_r = mem_1[mem_1_adr0];


//------------------------------------------------------------------------------
// Memory mem_2: 54-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem_2[0:53];
initial begin
	$readmemh("mem_2.init", mem_2);
end
reg [5:0] mem_2_adr0;
always @(posedge sys_clk) begin
	mem_2_adr0 <= basesoc_csr_bankarray_adr;
end
assign basesoc_csr_bankarray_dat_r = mem_2[mem_2_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_uartcrossover_tx_fifo_wrport_we)
		storage[basesoc_basesoc_uartcrossover_tx_fifo_wrport_adr] <= basesoc_basesoc_uartcrossover_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[basesoc_basesoc_uartcrossover_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_basesoc_uartcrossover_tx_fifo_rdport_re)
		storage_dat1 <= storage[basesoc_basesoc_uartcrossover_tx_fifo_rdport_adr];
end
assign basesoc_basesoc_uartcrossover_tx_fifo_wrport_dat_r = storage_dat0;
assign basesoc_basesoc_uartcrossover_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_uartcrossover_rx_fifo_wrport_we)
		storage_1[basesoc_basesoc_uartcrossover_rx_fifo_wrport_adr] <= basesoc_basesoc_uartcrossover_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[basesoc_basesoc_uartcrossover_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_basesoc_uartcrossover_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[basesoc_basesoc_uartcrossover_rx_fifo_rdport_adr];
end
assign basesoc_basesoc_uartcrossover_rx_fifo_wrport_dat_r = storage_1_dat0;
assign basesoc_basesoc_uartcrossover_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Memory storage_2: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_2[0:15];
reg [9:0] storage_2_dat0;
reg [9:0] storage_2_dat1;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_xover_rx_fifo_wrport_we)
		storage_2[basesoc_basesoc_xover_rx_fifo_wrport_adr] <= basesoc_basesoc_xover_rx_fifo_wrport_dat_w;
	storage_2_dat0 <= storage_2[basesoc_basesoc_xover_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_basesoc_xover_rx_fifo_rdport_re)
		storage_2_dat1 <= storage_2[basesoc_basesoc_xover_rx_fifo_rdport_adr];
end
assign basesoc_basesoc_xover_rx_fifo_wrport_dat_r = storage_2_dat0;
assign basesoc_basesoc_xover_rx_fifo_rdport_dat_r = storage_2_dat1;


BUFG BUFG(
	.I(crg_clkout0),
	.O(crg_clkout_buf0)
);

BUFG BUFG_1(
	.I(crg_clkout1),
	.O(crg_clkout_buf1)
);

BUFG BUFG_2(
	.I(crg_clkout2),
	.O(crg_clkout_buf2)
);

BUFG BUFG_3(
	.I(crg_clkout3),
	.O(crg_clkout_buf3)
);

IDELAYCTRL IDELAYCTRL(
	.REFCLK(idelay_clk),
	.RST(crg_ic_reset)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(1'd0),
	.D2(1'd1),
	.D3(1'd0),
	.D4(1'd1),
	.D5(1'd0),
	.D6(1'd1),
	.D7(1'd0),
	.D8(1'd1),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(a7ddrphy_sd_clk_se_nodelay)
);

OBUFDS OBUFDS(
	.I(a7ddrphy_sd_clk_se_nodelay),
	.O(ddram_clk_p),
	.OB(ddram_clk_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_1 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_reset_n),
	.D2(a7ddrphy_dfi_p0_reset_n),
	.D3(a7ddrphy_dfi_p1_reset_n),
	.D4(a7ddrphy_dfi_p1_reset_n),
	.D5(a7ddrphy_dfi_p2_reset_n),
	.D6(a7ddrphy_dfi_p2_reset_n),
	.D7(a7ddrphy_dfi_p3_reset_n),
	.D8(a7ddrphy_dfi_p3_reset_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_reset_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_2 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[0]),
	.D2(a7ddrphy_dfi_p0_address[0]),
	.D3(a7ddrphy_dfi_p1_address[0]),
	.D4(a7ddrphy_dfi_p1_address[0]),
	.D5(a7ddrphy_dfi_p2_address[0]),
	.D6(a7ddrphy_dfi_p2_address[0]),
	.D7(a7ddrphy_dfi_p3_address[0]),
	.D8(a7ddrphy_dfi_p3_address[0]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_3 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[1]),
	.D2(a7ddrphy_dfi_p0_address[1]),
	.D3(a7ddrphy_dfi_p1_address[1]),
	.D4(a7ddrphy_dfi_p1_address[1]),
	.D5(a7ddrphy_dfi_p2_address[1]),
	.D6(a7ddrphy_dfi_p2_address[1]),
	.D7(a7ddrphy_dfi_p3_address[1]),
	.D8(a7ddrphy_dfi_p3_address[1]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_4 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[2]),
	.D2(a7ddrphy_dfi_p0_address[2]),
	.D3(a7ddrphy_dfi_p1_address[2]),
	.D4(a7ddrphy_dfi_p1_address[2]),
	.D5(a7ddrphy_dfi_p2_address[2]),
	.D6(a7ddrphy_dfi_p2_address[2]),
	.D7(a7ddrphy_dfi_p3_address[2]),
	.D8(a7ddrphy_dfi_p3_address[2]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_5 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[3]),
	.D2(a7ddrphy_dfi_p0_address[3]),
	.D3(a7ddrphy_dfi_p1_address[3]),
	.D4(a7ddrphy_dfi_p1_address[3]),
	.D5(a7ddrphy_dfi_p2_address[3]),
	.D6(a7ddrphy_dfi_p2_address[3]),
	.D7(a7ddrphy_dfi_p3_address[3]),
	.D8(a7ddrphy_dfi_p3_address[3]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[3])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_6 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[4]),
	.D2(a7ddrphy_dfi_p0_address[4]),
	.D3(a7ddrphy_dfi_p1_address[4]),
	.D4(a7ddrphy_dfi_p1_address[4]),
	.D5(a7ddrphy_dfi_p2_address[4]),
	.D6(a7ddrphy_dfi_p2_address[4]),
	.D7(a7ddrphy_dfi_p3_address[4]),
	.D8(a7ddrphy_dfi_p3_address[4]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[4])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_7 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[5]),
	.D2(a7ddrphy_dfi_p0_address[5]),
	.D3(a7ddrphy_dfi_p1_address[5]),
	.D4(a7ddrphy_dfi_p1_address[5]),
	.D5(a7ddrphy_dfi_p2_address[5]),
	.D6(a7ddrphy_dfi_p2_address[5]),
	.D7(a7ddrphy_dfi_p3_address[5]),
	.D8(a7ddrphy_dfi_p3_address[5]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[5])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_8 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[6]),
	.D2(a7ddrphy_dfi_p0_address[6]),
	.D3(a7ddrphy_dfi_p1_address[6]),
	.D4(a7ddrphy_dfi_p1_address[6]),
	.D5(a7ddrphy_dfi_p2_address[6]),
	.D6(a7ddrphy_dfi_p2_address[6]),
	.D7(a7ddrphy_dfi_p3_address[6]),
	.D8(a7ddrphy_dfi_p3_address[6]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[6])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_9 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[7]),
	.D2(a7ddrphy_dfi_p0_address[7]),
	.D3(a7ddrphy_dfi_p1_address[7]),
	.D4(a7ddrphy_dfi_p1_address[7]),
	.D5(a7ddrphy_dfi_p2_address[7]),
	.D6(a7ddrphy_dfi_p2_address[7]),
	.D7(a7ddrphy_dfi_p3_address[7]),
	.D8(a7ddrphy_dfi_p3_address[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[7])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_10 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[8]),
	.D2(a7ddrphy_dfi_p0_address[8]),
	.D3(a7ddrphy_dfi_p1_address[8]),
	.D4(a7ddrphy_dfi_p1_address[8]),
	.D5(a7ddrphy_dfi_p2_address[8]),
	.D6(a7ddrphy_dfi_p2_address[8]),
	.D7(a7ddrphy_dfi_p3_address[8]),
	.D8(a7ddrphy_dfi_p3_address[8]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[8])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_11 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[9]),
	.D2(a7ddrphy_dfi_p0_address[9]),
	.D3(a7ddrphy_dfi_p1_address[9]),
	.D4(a7ddrphy_dfi_p1_address[9]),
	.D5(a7ddrphy_dfi_p2_address[9]),
	.D6(a7ddrphy_dfi_p2_address[9]),
	.D7(a7ddrphy_dfi_p3_address[9]),
	.D8(a7ddrphy_dfi_p3_address[9]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[9])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_12 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[10]),
	.D2(a7ddrphy_dfi_p0_address[10]),
	.D3(a7ddrphy_dfi_p1_address[10]),
	.D4(a7ddrphy_dfi_p1_address[10]),
	.D5(a7ddrphy_dfi_p2_address[10]),
	.D6(a7ddrphy_dfi_p2_address[10]),
	.D7(a7ddrphy_dfi_p3_address[10]),
	.D8(a7ddrphy_dfi_p3_address[10]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[10])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_13 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[11]),
	.D2(a7ddrphy_dfi_p0_address[11]),
	.D3(a7ddrphy_dfi_p1_address[11]),
	.D4(a7ddrphy_dfi_p1_address[11]),
	.D5(a7ddrphy_dfi_p2_address[11]),
	.D6(a7ddrphy_dfi_p2_address[11]),
	.D7(a7ddrphy_dfi_p3_address[11]),
	.D8(a7ddrphy_dfi_p3_address[11]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[11])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_14 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[12]),
	.D2(a7ddrphy_dfi_p0_address[12]),
	.D3(a7ddrphy_dfi_p1_address[12]),
	.D4(a7ddrphy_dfi_p1_address[12]),
	.D5(a7ddrphy_dfi_p2_address[12]),
	.D6(a7ddrphy_dfi_p2_address[12]),
	.D7(a7ddrphy_dfi_p3_address[12]),
	.D8(a7ddrphy_dfi_p3_address[12]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[12])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_15 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[13]),
	.D2(a7ddrphy_dfi_p0_address[13]),
	.D3(a7ddrphy_dfi_p1_address[13]),
	.D4(a7ddrphy_dfi_p1_address[13]),
	.D5(a7ddrphy_dfi_p2_address[13]),
	.D6(a7ddrphy_dfi_p2_address[13]),
	.D7(a7ddrphy_dfi_p3_address[13]),
	.D8(a7ddrphy_dfi_p3_address[13]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[13])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_16 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[14]),
	.D2(a7ddrphy_dfi_p0_address[14]),
	.D3(a7ddrphy_dfi_p1_address[14]),
	.D4(a7ddrphy_dfi_p1_address[14]),
	.D5(a7ddrphy_dfi_p2_address[14]),
	.D6(a7ddrphy_dfi_p2_address[14]),
	.D7(a7ddrphy_dfi_p3_address[14]),
	.D8(a7ddrphy_dfi_p3_address[14]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[14])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_17 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_address[15]),
	.D2(a7ddrphy_dfi_p0_address[15]),
	.D3(a7ddrphy_dfi_p1_address[15]),
	.D4(a7ddrphy_dfi_p1_address[15]),
	.D5(a7ddrphy_dfi_p2_address[15]),
	.D6(a7ddrphy_dfi_p2_address[15]),
	.D7(a7ddrphy_dfi_p3_address[15]),
	.D8(a7ddrphy_dfi_p3_address[15]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_a[15])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_18 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_bank[0]),
	.D2(a7ddrphy_dfi_p0_bank[0]),
	.D3(a7ddrphy_dfi_p1_bank[0]),
	.D4(a7ddrphy_dfi_p1_bank[0]),
	.D5(a7ddrphy_dfi_p2_bank[0]),
	.D6(a7ddrphy_dfi_p2_bank[0]),
	.D7(a7ddrphy_dfi_p3_bank[0]),
	.D8(a7ddrphy_dfi_p3_bank[0]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_ba[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_19 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_bank[1]),
	.D2(a7ddrphy_dfi_p0_bank[1]),
	.D3(a7ddrphy_dfi_p1_bank[1]),
	.D4(a7ddrphy_dfi_p1_bank[1]),
	.D5(a7ddrphy_dfi_p2_bank[1]),
	.D6(a7ddrphy_dfi_p2_bank[1]),
	.D7(a7ddrphy_dfi_p3_bank[1]),
	.D8(a7ddrphy_dfi_p3_bank[1]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_ba[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_20 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_bank[2]),
	.D2(a7ddrphy_dfi_p0_bank[2]),
	.D3(a7ddrphy_dfi_p1_bank[2]),
	.D4(a7ddrphy_dfi_p1_bank[2]),
	.D5(a7ddrphy_dfi_p2_bank[2]),
	.D6(a7ddrphy_dfi_p2_bank[2]),
	.D7(a7ddrphy_dfi_p3_bank[2]),
	.D8(a7ddrphy_dfi_p3_bank[2]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_ba[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_21 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_ras_n),
	.D2(a7ddrphy_dfi_p0_ras_n),
	.D3(a7ddrphy_dfi_p1_ras_n),
	.D4(a7ddrphy_dfi_p1_ras_n),
	.D5(a7ddrphy_dfi_p2_ras_n),
	.D6(a7ddrphy_dfi_p2_ras_n),
	.D7(a7ddrphy_dfi_p3_ras_n),
	.D8(a7ddrphy_dfi_p3_ras_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_ras_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_22 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_cas_n),
	.D2(a7ddrphy_dfi_p0_cas_n),
	.D3(a7ddrphy_dfi_p1_cas_n),
	.D4(a7ddrphy_dfi_p1_cas_n),
	.D5(a7ddrphy_dfi_p2_cas_n),
	.D6(a7ddrphy_dfi_p2_cas_n),
	.D7(a7ddrphy_dfi_p3_cas_n),
	.D8(a7ddrphy_dfi_p3_cas_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_cas_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_23 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_we_n),
	.D2(a7ddrphy_dfi_p0_we_n),
	.D3(a7ddrphy_dfi_p1_we_n),
	.D4(a7ddrphy_dfi_p1_we_n),
	.D5(a7ddrphy_dfi_p2_we_n),
	.D6(a7ddrphy_dfi_p2_we_n),
	.D7(a7ddrphy_dfi_p3_we_n),
	.D8(a7ddrphy_dfi_p3_we_n),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_we_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_24 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_cke),
	.D2(a7ddrphy_dfi_p0_cke),
	.D3(a7ddrphy_dfi_p1_cke),
	.D4(a7ddrphy_dfi_p1_cke),
	.D5(a7ddrphy_dfi_p2_cke),
	.D6(a7ddrphy_dfi_p2_cke),
	.D7(a7ddrphy_dfi_p3_cke),
	.D8(a7ddrphy_dfi_p3_cke),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_cke)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_25 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_dfi_p0_odt),
	.D2(a7ddrphy_dfi_p0_odt),
	.D3(a7ddrphy_dfi_p1_odt),
	.D4(a7ddrphy_dfi_p1_odt),
	.D5(a7ddrphy_dfi_p2_odt),
	.D6(a7ddrphy_dfi_p2_odt),
	.D7(a7ddrphy_dfi_p3_odt),
	.D8(a7ddrphy_dfi_p3_odt),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_odt)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_26 (
	.CLK(sys4x_dqs_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip00[0]),
	.D2(a7ddrphy_bitslip00[1]),
	.D3(a7ddrphy_bitslip00[2]),
	.D4(a7ddrphy_bitslip00[3]),
	.D5(a7ddrphy_bitslip00[4]),
	.D6(a7ddrphy_bitslip00[5]),
	.D7(a7ddrphy_bitslip00[6]),
	.D8(a7ddrphy_bitslip00[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(a7ddrphy0),
	.OQ(a7ddrphy_dqs_o_no_delay0),
	.TQ(a7ddrphy_dqs_t0)
);

IOBUFDS IOBUFDS(
	.I(a7ddrphy_dqs_o_no_delay0),
	.T(a7ddrphy_dqs_t0),
	.IO(ddram_dqs_p[0]),
	.IOB(ddram_dqs_n[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_27 (
	.CLK(sys4x_dqs_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip10[0]),
	.D2(a7ddrphy_bitslip10[1]),
	.D3(a7ddrphy_bitslip10[2]),
	.D4(a7ddrphy_bitslip10[3]),
	.D5(a7ddrphy_bitslip10[4]),
	.D6(a7ddrphy_bitslip10[5]),
	.D7(a7ddrphy_bitslip10[6]),
	.D8(a7ddrphy_bitslip10[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OFB(a7ddrphy1),
	.OQ(a7ddrphy_dqs_o_no_delay1),
	.TQ(a7ddrphy_dqs_t1)
);

IOBUFDS IOBUFDS_1(
	.I(a7ddrphy_dqs_o_no_delay1),
	.T(a7ddrphy_dqs_t1),
	.IO(ddram_dqs_p[1]),
	.IOB(ddram_dqs_n[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_28 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip01[0]),
	.D2(a7ddrphy_bitslip01[1]),
	.D3(a7ddrphy_bitslip01[2]),
	.D4(a7ddrphy_bitslip01[3]),
	.D5(a7ddrphy_bitslip01[4]),
	.D6(a7ddrphy_bitslip01[5]),
	.D7(a7ddrphy_bitslip01[6]),
	.D8(a7ddrphy_bitslip01[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_dm[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_29 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip11[0]),
	.D2(a7ddrphy_bitslip11[1]),
	.D3(a7ddrphy_bitslip11[2]),
	.D4(a7ddrphy_bitslip11[3]),
	.D5(a7ddrphy_bitslip11[4]),
	.D6(a7ddrphy_bitslip11[5]),
	.D7(a7ddrphy_bitslip11[6]),
	.D8(a7ddrphy_bitslip11[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.OQ(ddram_dm[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_30 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip02[0]),
	.D2(a7ddrphy_bitslip02[1]),
	.D3(a7ddrphy_bitslip02[2]),
	.D4(a7ddrphy_bitslip02[3]),
	.D5(a7ddrphy_bitslip02[4]),
	.D6(a7ddrphy_bitslip02[5]),
	.D7(a7ddrphy_bitslip02[6]),
	.D8(a7ddrphy_bitslip02[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay0),
	.TQ(a7ddrphy_dq_t0)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed0),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip03[7]),
	.Q2(a7ddrphy_bitslip03[6]),
	.Q3(a7ddrphy_bitslip03[5]),
	.Q4(a7ddrphy_bitslip03[4]),
	.Q5(a7ddrphy_bitslip03[3]),
	.Q6(a7ddrphy_bitslip03[2]),
	.Q7(a7ddrphy_bitslip03[1]),
	.Q8(a7ddrphy_bitslip03[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay0),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed0)
);

IOBUF IOBUF(
	.I(a7ddrphy_dq_o_nodelay0),
	.T(a7ddrphy_dq_t0),
	.IO(ddram_dq[0]),
	.O(a7ddrphy_dq_i_nodelay0)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_31 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip12[0]),
	.D2(a7ddrphy_bitslip12[1]),
	.D3(a7ddrphy_bitslip12[2]),
	.D4(a7ddrphy_bitslip12[3]),
	.D5(a7ddrphy_bitslip12[4]),
	.D6(a7ddrphy_bitslip12[5]),
	.D7(a7ddrphy_bitslip12[6]),
	.D8(a7ddrphy_bitslip12[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay1),
	.TQ(a7ddrphy_dq_t1)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_1 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip13[7]),
	.Q2(a7ddrphy_bitslip13[6]),
	.Q3(a7ddrphy_bitslip13[5]),
	.Q4(a7ddrphy_bitslip13[4]),
	.Q5(a7ddrphy_bitslip13[3]),
	.Q6(a7ddrphy_bitslip13[2]),
	.Q7(a7ddrphy_bitslip13[1]),
	.Q8(a7ddrphy_bitslip13[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_1 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay1),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed1)
);

IOBUF IOBUF_1(
	.I(a7ddrphy_dq_o_nodelay1),
	.T(a7ddrphy_dq_t1),
	.IO(ddram_dq[1]),
	.O(a7ddrphy_dq_i_nodelay1)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_32 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip20[0]),
	.D2(a7ddrphy_bitslip20[1]),
	.D3(a7ddrphy_bitslip20[2]),
	.D4(a7ddrphy_bitslip20[3]),
	.D5(a7ddrphy_bitslip20[4]),
	.D6(a7ddrphy_bitslip20[5]),
	.D7(a7ddrphy_bitslip20[6]),
	.D8(a7ddrphy_bitslip20[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay2),
	.TQ(a7ddrphy_dq_t2)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed2),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip21[7]),
	.Q2(a7ddrphy_bitslip21[6]),
	.Q3(a7ddrphy_bitslip21[5]),
	.Q4(a7ddrphy_bitslip21[4]),
	.Q5(a7ddrphy_bitslip21[3]),
	.Q6(a7ddrphy_bitslip21[2]),
	.Q7(a7ddrphy_bitslip21[1]),
	.Q8(a7ddrphy_bitslip21[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_2 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay2),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed2)
);

IOBUF IOBUF_2(
	.I(a7ddrphy_dq_o_nodelay2),
	.T(a7ddrphy_dq_t2),
	.IO(ddram_dq[2]),
	.O(a7ddrphy_dq_i_nodelay2)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_33 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip30[0]),
	.D2(a7ddrphy_bitslip30[1]),
	.D3(a7ddrphy_bitslip30[2]),
	.D4(a7ddrphy_bitslip30[3]),
	.D5(a7ddrphy_bitslip30[4]),
	.D6(a7ddrphy_bitslip30[5]),
	.D7(a7ddrphy_bitslip30[6]),
	.D8(a7ddrphy_bitslip30[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay3),
	.TQ(a7ddrphy_dq_t3)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_3 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed3),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip31[7]),
	.Q2(a7ddrphy_bitslip31[6]),
	.Q3(a7ddrphy_bitslip31[5]),
	.Q4(a7ddrphy_bitslip31[4]),
	.Q5(a7ddrphy_bitslip31[3]),
	.Q6(a7ddrphy_bitslip31[2]),
	.Q7(a7ddrphy_bitslip31[1]),
	.Q8(a7ddrphy_bitslip31[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_3 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay3),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed3)
);

IOBUF IOBUF_3(
	.I(a7ddrphy_dq_o_nodelay3),
	.T(a7ddrphy_dq_t3),
	.IO(ddram_dq[3]),
	.O(a7ddrphy_dq_i_nodelay3)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_34 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip40[0]),
	.D2(a7ddrphy_bitslip40[1]),
	.D3(a7ddrphy_bitslip40[2]),
	.D4(a7ddrphy_bitslip40[3]),
	.D5(a7ddrphy_bitslip40[4]),
	.D6(a7ddrphy_bitslip40[5]),
	.D7(a7ddrphy_bitslip40[6]),
	.D8(a7ddrphy_bitslip40[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay4),
	.TQ(a7ddrphy_dq_t4)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_4 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed4),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip41[7]),
	.Q2(a7ddrphy_bitslip41[6]),
	.Q3(a7ddrphy_bitslip41[5]),
	.Q4(a7ddrphy_bitslip41[4]),
	.Q5(a7ddrphy_bitslip41[3]),
	.Q6(a7ddrphy_bitslip41[2]),
	.Q7(a7ddrphy_bitslip41[1]),
	.Q8(a7ddrphy_bitslip41[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_4 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay4),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed4)
);

IOBUF IOBUF_4(
	.I(a7ddrphy_dq_o_nodelay4),
	.T(a7ddrphy_dq_t4),
	.IO(ddram_dq[4]),
	.O(a7ddrphy_dq_i_nodelay4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_35 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip50[0]),
	.D2(a7ddrphy_bitslip50[1]),
	.D3(a7ddrphy_bitslip50[2]),
	.D4(a7ddrphy_bitslip50[3]),
	.D5(a7ddrphy_bitslip50[4]),
	.D6(a7ddrphy_bitslip50[5]),
	.D7(a7ddrphy_bitslip50[6]),
	.D8(a7ddrphy_bitslip50[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay5),
	.TQ(a7ddrphy_dq_t5)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_5 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed5),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip51[7]),
	.Q2(a7ddrphy_bitslip51[6]),
	.Q3(a7ddrphy_bitslip51[5]),
	.Q4(a7ddrphy_bitslip51[4]),
	.Q5(a7ddrphy_bitslip51[3]),
	.Q6(a7ddrphy_bitslip51[2]),
	.Q7(a7ddrphy_bitslip51[1]),
	.Q8(a7ddrphy_bitslip51[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_5 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay5),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed5)
);

IOBUF IOBUF_5(
	.I(a7ddrphy_dq_o_nodelay5),
	.T(a7ddrphy_dq_t5),
	.IO(ddram_dq[5]),
	.O(a7ddrphy_dq_i_nodelay5)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_36 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip60[0]),
	.D2(a7ddrphy_bitslip60[1]),
	.D3(a7ddrphy_bitslip60[2]),
	.D4(a7ddrphy_bitslip60[3]),
	.D5(a7ddrphy_bitslip60[4]),
	.D6(a7ddrphy_bitslip60[5]),
	.D7(a7ddrphy_bitslip60[6]),
	.D8(a7ddrphy_bitslip60[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay6),
	.TQ(a7ddrphy_dq_t6)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_6 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed6),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip61[7]),
	.Q2(a7ddrphy_bitslip61[6]),
	.Q3(a7ddrphy_bitslip61[5]),
	.Q4(a7ddrphy_bitslip61[4]),
	.Q5(a7ddrphy_bitslip61[3]),
	.Q6(a7ddrphy_bitslip61[2]),
	.Q7(a7ddrphy_bitslip61[1]),
	.Q8(a7ddrphy_bitslip61[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_6 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay6),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed6)
);

IOBUF IOBUF_6(
	.I(a7ddrphy_dq_o_nodelay6),
	.T(a7ddrphy_dq_t6),
	.IO(ddram_dq[6]),
	.O(a7ddrphy_dq_i_nodelay6)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_37 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip70[0]),
	.D2(a7ddrphy_bitslip70[1]),
	.D3(a7ddrphy_bitslip70[2]),
	.D4(a7ddrphy_bitslip70[3]),
	.D5(a7ddrphy_bitslip70[4]),
	.D6(a7ddrphy_bitslip70[5]),
	.D7(a7ddrphy_bitslip70[6]),
	.D8(a7ddrphy_bitslip70[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay7),
	.TQ(a7ddrphy_dq_t7)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_7 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed7),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip71[7]),
	.Q2(a7ddrphy_bitslip71[6]),
	.Q3(a7ddrphy_bitslip71[5]),
	.Q4(a7ddrphy_bitslip71[4]),
	.Q5(a7ddrphy_bitslip71[3]),
	.Q6(a7ddrphy_bitslip71[2]),
	.Q7(a7ddrphy_bitslip71[1]),
	.Q8(a7ddrphy_bitslip71[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_7 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay7),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[0] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed7)
);

IOBUF IOBUF_7(
	.I(a7ddrphy_dq_o_nodelay7),
	.T(a7ddrphy_dq_t7),
	.IO(ddram_dq[7]),
	.O(a7ddrphy_dq_i_nodelay7)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_38 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip80[0]),
	.D2(a7ddrphy_bitslip80[1]),
	.D3(a7ddrphy_bitslip80[2]),
	.D4(a7ddrphy_bitslip80[3]),
	.D5(a7ddrphy_bitslip80[4]),
	.D6(a7ddrphy_bitslip80[5]),
	.D7(a7ddrphy_bitslip80[6]),
	.D8(a7ddrphy_bitslip80[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay8),
	.TQ(a7ddrphy_dq_t8)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_8 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed8),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip81[7]),
	.Q2(a7ddrphy_bitslip81[6]),
	.Q3(a7ddrphy_bitslip81[5]),
	.Q4(a7ddrphy_bitslip81[4]),
	.Q5(a7ddrphy_bitslip81[3]),
	.Q6(a7ddrphy_bitslip81[2]),
	.Q7(a7ddrphy_bitslip81[1]),
	.Q8(a7ddrphy_bitslip81[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_8 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay8),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed8)
);

IOBUF IOBUF_8(
	.I(a7ddrphy_dq_o_nodelay8),
	.T(a7ddrphy_dq_t8),
	.IO(ddram_dq[8]),
	.O(a7ddrphy_dq_i_nodelay8)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_39 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip90[0]),
	.D2(a7ddrphy_bitslip90[1]),
	.D3(a7ddrphy_bitslip90[2]),
	.D4(a7ddrphy_bitslip90[3]),
	.D5(a7ddrphy_bitslip90[4]),
	.D6(a7ddrphy_bitslip90[5]),
	.D7(a7ddrphy_bitslip90[6]),
	.D8(a7ddrphy_bitslip90[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay9),
	.TQ(a7ddrphy_dq_t9)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_9 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed9),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip91[7]),
	.Q2(a7ddrphy_bitslip91[6]),
	.Q3(a7ddrphy_bitslip91[5]),
	.Q4(a7ddrphy_bitslip91[4]),
	.Q5(a7ddrphy_bitslip91[3]),
	.Q6(a7ddrphy_bitslip91[2]),
	.Q7(a7ddrphy_bitslip91[1]),
	.Q8(a7ddrphy_bitslip91[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_9 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay9),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed9)
);

IOBUF IOBUF_9(
	.I(a7ddrphy_dq_o_nodelay9),
	.T(a7ddrphy_dq_t9),
	.IO(ddram_dq[9]),
	.O(a7ddrphy_dq_i_nodelay9)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_40 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip100[0]),
	.D2(a7ddrphy_bitslip100[1]),
	.D3(a7ddrphy_bitslip100[2]),
	.D4(a7ddrphy_bitslip100[3]),
	.D5(a7ddrphy_bitslip100[4]),
	.D6(a7ddrphy_bitslip100[5]),
	.D7(a7ddrphy_bitslip100[6]),
	.D8(a7ddrphy_bitslip100[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay10),
	.TQ(a7ddrphy_dq_t10)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_10 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed10),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip101[7]),
	.Q2(a7ddrphy_bitslip101[6]),
	.Q3(a7ddrphy_bitslip101[5]),
	.Q4(a7ddrphy_bitslip101[4]),
	.Q5(a7ddrphy_bitslip101[3]),
	.Q6(a7ddrphy_bitslip101[2]),
	.Q7(a7ddrphy_bitslip101[1]),
	.Q8(a7ddrphy_bitslip101[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_10 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay10),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed10)
);

IOBUF IOBUF_10(
	.I(a7ddrphy_dq_o_nodelay10),
	.T(a7ddrphy_dq_t10),
	.IO(ddram_dq[10]),
	.O(a7ddrphy_dq_i_nodelay10)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_41 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip110[0]),
	.D2(a7ddrphy_bitslip110[1]),
	.D3(a7ddrphy_bitslip110[2]),
	.D4(a7ddrphy_bitslip110[3]),
	.D5(a7ddrphy_bitslip110[4]),
	.D6(a7ddrphy_bitslip110[5]),
	.D7(a7ddrphy_bitslip110[6]),
	.D8(a7ddrphy_bitslip110[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay11),
	.TQ(a7ddrphy_dq_t11)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_11 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed11),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip111[7]),
	.Q2(a7ddrphy_bitslip111[6]),
	.Q3(a7ddrphy_bitslip111[5]),
	.Q4(a7ddrphy_bitslip111[4]),
	.Q5(a7ddrphy_bitslip111[3]),
	.Q6(a7ddrphy_bitslip111[2]),
	.Q7(a7ddrphy_bitslip111[1]),
	.Q8(a7ddrphy_bitslip111[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_11 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay11),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed11)
);

IOBUF IOBUF_11(
	.I(a7ddrphy_dq_o_nodelay11),
	.T(a7ddrphy_dq_t11),
	.IO(ddram_dq[11]),
	.O(a7ddrphy_dq_i_nodelay11)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_42 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip120[0]),
	.D2(a7ddrphy_bitslip120[1]),
	.D3(a7ddrphy_bitslip120[2]),
	.D4(a7ddrphy_bitslip120[3]),
	.D5(a7ddrphy_bitslip120[4]),
	.D6(a7ddrphy_bitslip120[5]),
	.D7(a7ddrphy_bitslip120[6]),
	.D8(a7ddrphy_bitslip120[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay12),
	.TQ(a7ddrphy_dq_t12)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_12 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed12),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip121[7]),
	.Q2(a7ddrphy_bitslip121[6]),
	.Q3(a7ddrphy_bitslip121[5]),
	.Q4(a7ddrphy_bitslip121[4]),
	.Q5(a7ddrphy_bitslip121[3]),
	.Q6(a7ddrphy_bitslip121[2]),
	.Q7(a7ddrphy_bitslip121[1]),
	.Q8(a7ddrphy_bitslip121[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_12 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay12),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed12)
);

IOBUF IOBUF_12(
	.I(a7ddrphy_dq_o_nodelay12),
	.T(a7ddrphy_dq_t12),
	.IO(ddram_dq[12]),
	.O(a7ddrphy_dq_i_nodelay12)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_43 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip130[0]),
	.D2(a7ddrphy_bitslip130[1]),
	.D3(a7ddrphy_bitslip130[2]),
	.D4(a7ddrphy_bitslip130[3]),
	.D5(a7ddrphy_bitslip130[4]),
	.D6(a7ddrphy_bitslip130[5]),
	.D7(a7ddrphy_bitslip130[6]),
	.D8(a7ddrphy_bitslip130[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay13),
	.TQ(a7ddrphy_dq_t13)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_13 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed13),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip131[7]),
	.Q2(a7ddrphy_bitslip131[6]),
	.Q3(a7ddrphy_bitslip131[5]),
	.Q4(a7ddrphy_bitslip131[4]),
	.Q5(a7ddrphy_bitslip131[3]),
	.Q6(a7ddrphy_bitslip131[2]),
	.Q7(a7ddrphy_bitslip131[1]),
	.Q8(a7ddrphy_bitslip131[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_13 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay13),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed13)
);

IOBUF IOBUF_13(
	.I(a7ddrphy_dq_o_nodelay13),
	.T(a7ddrphy_dq_t13),
	.IO(ddram_dq[13]),
	.O(a7ddrphy_dq_i_nodelay13)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_44 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip140[0]),
	.D2(a7ddrphy_bitslip140[1]),
	.D3(a7ddrphy_bitslip140[2]),
	.D4(a7ddrphy_bitslip140[3]),
	.D5(a7ddrphy_bitslip140[4]),
	.D6(a7ddrphy_bitslip140[5]),
	.D7(a7ddrphy_bitslip140[6]),
	.D8(a7ddrphy_bitslip140[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay14),
	.TQ(a7ddrphy_dq_t14)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_14 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed14),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip141[7]),
	.Q2(a7ddrphy_bitslip141[6]),
	.Q3(a7ddrphy_bitslip141[5]),
	.Q4(a7ddrphy_bitslip141[4]),
	.Q5(a7ddrphy_bitslip141[3]),
	.Q6(a7ddrphy_bitslip141[2]),
	.Q7(a7ddrphy_bitslip141[1]),
	.Q8(a7ddrphy_bitslip141[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_14 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay14),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed14)
);

IOBUF IOBUF_14(
	.I(a7ddrphy_dq_o_nodelay14),
	.T(a7ddrphy_dq_t14),
	.IO(ddram_dq[14]),
	.O(a7ddrphy_dq_i_nodelay14)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(4'd8),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_45 (
	.CLK(sys4x_clk),
	.CLKDIV(sys_clk),
	.D1(a7ddrphy_bitslip150[0]),
	.D2(a7ddrphy_bitslip150[1]),
	.D3(a7ddrphy_bitslip150[2]),
	.D4(a7ddrphy_bitslip150[3]),
	.D5(a7ddrphy_bitslip150[4]),
	.D6(a7ddrphy_bitslip150[5]),
	.D7(a7ddrphy_bitslip150[6]),
	.D8(a7ddrphy_bitslip150[7]),
	.OCE(1'd1),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.T1((~a7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE(1'd1),
	.OQ(a7ddrphy_dq_o_nodelay15),
	.TQ(a7ddrphy_dq_t15)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(4'd8),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_15 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys4x_clk),
	.CLKB((~sys4x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(a7ddrphy_dq_i_delayed15),
	.RST((sys_rst | a7ddrphy_rst_storage)),
	.Q1(a7ddrphy_bitslip151[7]),
	.Q2(a7ddrphy_bitslip151[6]),
	.Q3(a7ddrphy_bitslip151[5]),
	.Q4(a7ddrphy_bitslip151[4]),
	.Q5(a7ddrphy_bitslip151[3]),
	.Q6(a7ddrphy_bitslip151[2]),
	.Q7(a7ddrphy_bitslip151[1]),
	.Q8(a7ddrphy_bitslip151[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_15 (
	.C(sys_clk),
	.CE((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(a7ddrphy_dq_i_nodelay15),
	.INC(1'd1),
	.LD(((a7ddrphy_dly_sel_storage[1] & a7ddrphy_rdly_dq_rst_re) | a7ddrphy_rst_storage)),
	.LDPIPEEN(1'd0),
	.DATAOUT(a7ddrphy_dq_i_delayed15)
);

IOBUF IOBUF_15(
	.I(a7ddrphy_dq_o_nodelay15),
	.T(a7ddrphy_dq_t15),
	.IO(ddram_dq[15]),
	.O(a7ddrphy_dq_i_nodelay15)
);

//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_3[0:7];
reg [25:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we)
		storage_3[basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
	storage_3_dat0 <= storage_3[basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r = storage_3_dat0;
assign basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r = storage_3[basesoc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_4[0:7];
reg [25:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we)
		storage_4[basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
	storage_4_dat0 <= storage_4[basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r = storage_4_dat0;
assign basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r = storage_4[basesoc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_5[0:7];
reg [25:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we)
		storage_5[basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
	storage_5_dat0 <= storage_5[basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r = storage_5_dat0;
assign basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r = storage_5[basesoc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_6[0:7];
reg [25:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we)
		storage_6[basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
	storage_6_dat0 <= storage_6[basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r = storage_6_dat0;
assign basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r = storage_6[basesoc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_7[0:7];
reg [25:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we)
		storage_7[basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
	storage_7_dat0 <= storage_7[basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r = storage_7_dat0;
assign basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r = storage_7[basesoc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_8[0:7];
reg [25:0] storage_8_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we)
		storage_8[basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
	storage_8_dat0 <= storage_8[basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r = storage_8_dat0;
assign basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r = storage_8[basesoc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_9[0:7];
reg [25:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we)
		storage_9[basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
	storage_9_dat0 <= storage_9[basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r = storage_9_dat0;
assign basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r = storage_9[basesoc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_10: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_10[0:7];
reg [25:0] storage_10_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we)
		storage_10[basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr] <= basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
	storage_10_dat0 <= storage_10[basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r = storage_10_dat0;
assign basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r = storage_10[basesoc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr];


//------------------------------------------------------------------------------
// Memory tag_mem: 512-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 24 
reg [23:0] tag_mem[0:511];
reg [8:0] tag_mem_adr0;
always @(posedge sys_clk) begin
	if (basesoc_tag_port_we)
		tag_mem[basesoc_tag_port_adr] <= basesoc_tag_port_dat_w;
	tag_mem_adr0 <= basesoc_tag_port_adr;
end
assign basesoc_tag_port_dat_r = tag_mem[tag_mem_adr0];


IBUFDS_GTE2 IBUFDS_GTE2(
	.CEB((~s7pciephy_pcie_rst_n)),
	.I(pcie_x4_clk_p),
	.IB(pcie_x4_clk_n),
	.O(s7pciephy_pcie_refclk)
);

//------------------------------------------------------------------------------
// Memory storage_11: 4-words x 146-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 146 
// Port 1 | Read: Sync  | Write: ---- | 
reg [145:0] storage_11[0:3];
reg [145:0] storage_11_dat0;
reg [145:0] storage_11_dat1;
always @(posedge sys_clk) begin
	if (s7pciephy_tx_datapath_cdc_wrport_we)
		storage_11[s7pciephy_tx_datapath_cdc_wrport_adr] <= s7pciephy_tx_datapath_cdc_wrport_dat_w;
	storage_11_dat0 <= storage_11[s7pciephy_tx_datapath_cdc_wrport_adr];
end
always @(posedge pcie_clk) begin
	storage_11_dat1 <= storage_11[s7pciephy_tx_datapath_cdc_rdport_adr];
end
assign s7pciephy_tx_datapath_cdc_wrport_dat_r = storage_11_dat0;
assign s7pciephy_tx_datapath_cdc_rdport_dat_r = storage_11_dat1;


//------------------------------------------------------------------------------
// Memory storage_12: 4-words x 146-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 146 
// Port 1 | Read: Sync  | Write: ---- | 
reg [145:0] storage_12[0:3];
reg [145:0] storage_12_dat0;
reg [145:0] storage_12_dat1;
always @(posedge pcie_clk) begin
	if (s7pciephy_rx_datapath_cdc_wrport_we)
		storage_12[s7pciephy_rx_datapath_cdc_wrport_adr] <= s7pciephy_rx_datapath_cdc_wrport_dat_w;
	storage_12_dat0 <= storage_12[s7pciephy_rx_datapath_cdc_wrport_adr];
end
always @(posedge sys_clk) begin
	storage_12_dat1 <= storage_12[s7pciephy_rx_datapath_cdc_rdport_adr];
end
assign s7pciephy_rx_datapath_cdc_wrport_dat_r = storage_12_dat0;
assign s7pciephy_rx_datapath_cdc_rdport_dat_r = storage_12_dat1;


//------------------------------------------------------------------------------
// Memory storage_13: 4-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_13[0:3];
reg [9:0] storage_13_dat0;
reg [9:0] storage_13_dat1;
always @(posedge sys_clk) begin
	if (s7pciephy_msi_cdc_wrport_we)
		storage_13[s7pciephy_msi_cdc_wrport_adr] <= s7pciephy_msi_cdc_wrport_dat_w;
	storage_13_dat0 <= storage_13[s7pciephy_msi_cdc_wrport_adr];
end
always @(posedge pcie_clk) begin
	storage_13_dat1 <= storage_13[s7pciephy_msi_cdc_rdport_adr];
end
assign s7pciephy_msi_cdc_wrport_dat_r = storage_13_dat0;
assign s7pciephy_msi_cdc_rdport_dat_r = storage_13_dat1;


//------------------------------------------------------------------------------
// Memory storage_14: 256-words x 60-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 60 
// Port 1 | Read: Async | Write: ---- | 
reg [59:0] storage_14[0:255];
reg [59:0] storage_14_dat0;
always @(posedge sys_clk) begin
	if (basesoc_writer_table_wrport_we)
		storage_14[basesoc_writer_table_wrport_adr] <= basesoc_writer_table_wrport_dat_w;
	storage_14_dat0 <= storage_14[basesoc_writer_table_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_writer_table_wrport_dat_r = storage_14_dat0;
assign basesoc_writer_table_rdport_dat_r = storage_14[basesoc_writer_table_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_15: 128-words x 130-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 130 
// Port 1 | Read: Sync  | Write: ---- | 
reg [129:0] storage_15[0:127];
reg [129:0] storage_15_dat0;
reg [129:0] storage_15_dat1;
always @(posedge sys_clk) begin
	if (basesoc_writer_data_fifo_wrport_we)
		storage_15[basesoc_writer_data_fifo_wrport_adr] <= basesoc_writer_data_fifo_wrport_dat_w;
	storage_15_dat0 <= storage_15[basesoc_writer_data_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_writer_data_fifo_rdport_re)
		storage_15_dat1 <= storage_15[basesoc_writer_data_fifo_rdport_adr];
end
assign basesoc_writer_data_fifo_wrport_dat_r = storage_15_dat0;
assign basesoc_writer_data_fifo_rdport_dat_r = storage_15_dat1;


//------------------------------------------------------------------------------
// Memory storage_16: 256-words x 60-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 60 
// Port 1 | Read: Async | Write: ---- | 
reg [59:0] storage_16[0:255];
reg [59:0] storage_16_dat0;
always @(posedge sys_clk) begin
	if (basesoc_reader_table_wrport_we)
		storage_16[basesoc_reader_table_wrport_adr] <= basesoc_reader_table_wrport_dat_w;
	storage_16_dat0 <= storage_16[basesoc_reader_table_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_reader_table_wrport_dat_r = storage_16_dat0;
assign basesoc_reader_table_rdport_dat_r = storage_16[basesoc_reader_table_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_17: 1024-words x 130-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 130 
// Port 1 | Read: Sync  | Write: ---- | 
reg [129:0] storage_17[0:1023];
reg [129:0] storage_17_dat0;
reg [129:0] storage_17_dat1;
always @(posedge sys_clk) begin
	if (basesoc_reader_data_fifo_wrport_we)
		storage_17[basesoc_reader_data_fifo_wrport_adr] <= basesoc_reader_data_fifo_wrport_dat_w;
	storage_17_dat0 <= storage_17[basesoc_reader_data_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_reader_data_fifo_rdport_re)
		storage_17_dat1 <= storage_17[basesoc_reader_data_fifo_rdport_adr];
end
assign basesoc_reader_data_fifo_wrport_dat_r = storage_17_dat0;
assign basesoc_reader_data_fifo_rdport_dat_r = storage_17_dat1;


//------------------------------------------------------------------------------
// Memory storage_18: 64-words x 130-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 130 
// Port 1 | Read: Sync  | Write: ---- | 
reg [129:0] storage_18[0:63];
reg [129:0] storage_18_dat0;
reg [129:0] storage_18_dat1;
always @(posedge sys_clk) begin
	if (basesoc_buffering_reader_fifo_wrport_we)
		storage_18[basesoc_buffering_reader_fifo_wrport_adr] <= basesoc_buffering_reader_fifo_wrport_dat_w;
	storage_18_dat0 <= storage_18[basesoc_buffering_reader_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_buffering_reader_fifo_rdport_re)
		storage_18_dat1 <= storage_18[basesoc_buffering_reader_fifo_rdport_adr];
end
assign basesoc_buffering_reader_fifo_wrport_dat_r = storage_18_dat0;
assign basesoc_buffering_reader_fifo_rdport_dat_r = storage_18_dat1;


//------------------------------------------------------------------------------
// Memory storage_19: 64-words x 130-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 130 
// Port 1 | Read: Sync  | Write: ---- | 
reg [129:0] storage_19[0:63];
reg [129:0] storage_19_dat0;
reg [129:0] storage_19_dat1;
always @(posedge sys_clk) begin
	if (basesoc_buffering_writer_fifo_wrport_we)
		storage_19[basesoc_buffering_writer_fifo_wrport_adr] <= basesoc_buffering_writer_fifo_wrport_dat_w;
	storage_19_dat0 <= storage_19[basesoc_buffering_writer_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_buffering_writer_fifo_rdport_re)
		storage_19_dat1 <= storage_19[basesoc_buffering_writer_fifo_rdport_adr];
end
assign basesoc_buffering_writer_fifo_wrport_dat_r = storage_19_dat0;
assign basesoc_buffering_writer_fifo_rdport_dat_r = storage_19_dat1;


ICAPE2 #(
	.ICAP_WIDTH("X32")
) ICAPE2 (
	.CLK(icap_clk),
	.CSIB(icap_csib),
	.I(icap_i_icape2),
	.RDWRB(icap_rdwrb),
	.O(icap_o_icape2)
);

STARTUPE2 STARTUPE2(
	.CLK(1'd0),
	.GSR(1'd0),
	.GTS(1'd0),
	.KEYCLEARB(1'd0),
	.PACK(1'd0),
	.USRCCLKO(flash_pads_clk),
	.USRCCLKTS(1'd0),
	.USRDONEO(1'd1),
	.USRDONETS(1'd1)
);

VexRiscv VexRiscv(
	.clk(sys_clk),
	.dBusWishbone_ACK(basesoc_basesoc_dbus_ack),
	.dBusWishbone_DAT_MISO(basesoc_basesoc_dbus_dat_r),
	.dBusWishbone_ERR(basesoc_basesoc_dbus_err),
	.externalInterruptArray(basesoc_basesoc_interrupt),
	.externalResetVector(basesoc_basesoc_vexriscv),
	.iBusWishbone_ACK(basesoc_basesoc_ibus_ack),
	.iBusWishbone_DAT_MISO(basesoc_basesoc_ibus_dat_r),
	.iBusWishbone_ERR(basesoc_basesoc_ibus_err),
	.reset((sys_rst | basesoc_basesoc_reset)),
	.softwareInterrupt(1'd0),
	.timerInterrupt(1'd0),
	.dBusWishbone_ADR(basesoc_basesoc_dbus_adr),
	.dBusWishbone_BTE(basesoc_basesoc_dbus_bte),
	.dBusWishbone_CTI(basesoc_basesoc_dbus_cti),
	.dBusWishbone_CYC(basesoc_basesoc_dbus_cyc),
	.dBusWishbone_DAT_MOSI(basesoc_basesoc_dbus_dat_w),
	.dBusWishbone_SEL(basesoc_basesoc_dbus_sel),
	.dBusWishbone_STB(basesoc_basesoc_dbus_stb),
	.dBusWishbone_WE(basesoc_basesoc_dbus_we),
	.iBusWishbone_ADR(basesoc_basesoc_ibus_adr),
	.iBusWishbone_BTE(basesoc_basesoc_ibus_bte),
	.iBusWishbone_CTI(basesoc_basesoc_ibus_cti),
	.iBusWishbone_CYC(basesoc_basesoc_ibus_cyc),
	.iBusWishbone_DAT_MOSI(basesoc_basesoc_ibus_dat_w),
	.iBusWishbone_SEL(basesoc_basesoc_ibus_sel),
	.iBusWishbone_STB(basesoc_basesoc_ibus_stb),
	.iBusWishbone_WE(basesoc_basesoc_ibus_we)
);

FD FD(
	.C(crg_clkin),
	.D(crg_reset),
	.Q(subfragments_reset0)
);

FD FD_1(
	.C(crg_clkin),
	.D(subfragments_reset0),
	.Q(subfragments_reset1)
);

FD FD_2(
	.C(crg_clkin),
	.D(subfragments_reset1),
	.Q(subfragments_reset2)
);

FD FD_3(
	.C(crg_clkin),
	.D(subfragments_reset2),
	.Q(subfragments_reset3)
);

FD FD_4(
	.C(crg_clkin),
	.D(subfragments_reset3),
	.Q(subfragments_reset4)
);

FD FD_5(
	.C(crg_clkin),
	.D(subfragments_reset4),
	.Q(subfragments_reset5)
);

FD FD_6(
	.C(crg_clkin),
	.D(subfragments_reset5),
	.Q(subfragments_reset6)
);

FD FD_7(
	.C(crg_clkin),
	.D(subfragments_reset6),
	.Q(subfragments_reset7)
);

PLLE2_ADV #(
	.CLKFBOUT_MULT(4'd8),
	.CLKIN1_PERIOD(5.0),
	.CLKOUT0_DIVIDE(5'd16),
	.CLKOUT0_PHASE(1'd0),
	.CLKOUT1_DIVIDE(3'd4),
	.CLKOUT1_PHASE(1'd0),
	.CLKOUT2_DIVIDE(3'd4),
	.CLKOUT2_PHASE(7'd90),
	.CLKOUT3_DIVIDE(4'd8),
	.CLKOUT3_PHASE(1'd0),
	.DIVCLK_DIVIDE(1'd1),
	.REF_JITTER1(0.01),
	.STARTUP_WAIT("FALSE")
) PLLE2_ADV (
	.CLKFBIN(subfragments_pll_fb),
	.CLKIN1(crg_clkin),
	.PWRDWN(crg_power_down),
	.RST(subfragments_reset7),
	.CLKFBOUT(subfragments_pll_fb),
	.CLKOUT0(crg_clkout0),
	.CLKOUT1(crg_clkout1),
	.CLKOUT2(crg_clkout2),
	.CLKOUT3(crg_clkout3),
	.LOCKED(crg_locked)
);

//------------------------------------------------------------------------------
// Memory data_mem_grain0: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain0[0:511];
reg [8:0] data_mem_grain0_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[0])
		data_mem_grain0[basesoc_data_port_adr] <= basesoc_data_port_dat_w[7:0];
	data_mem_grain0_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[7:0] = data_mem_grain0[data_mem_grain0_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain1: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain1[0:511];
reg [8:0] data_mem_grain1_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[1])
		data_mem_grain1[basesoc_data_port_adr] <= basesoc_data_port_dat_w[15:8];
	data_mem_grain1_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[15:8] = data_mem_grain1[data_mem_grain1_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain2: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain2[0:511];
reg [8:0] data_mem_grain2_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[2])
		data_mem_grain2[basesoc_data_port_adr] <= basesoc_data_port_dat_w[23:16];
	data_mem_grain2_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[23:16] = data_mem_grain2[data_mem_grain2_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain3: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain3[0:511];
reg [8:0] data_mem_grain3_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[3])
		data_mem_grain3[basesoc_data_port_adr] <= basesoc_data_port_dat_w[31:24];
	data_mem_grain3_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[31:24] = data_mem_grain3[data_mem_grain3_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain4: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain4[0:511];
reg [8:0] data_mem_grain4_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[4])
		data_mem_grain4[basesoc_data_port_adr] <= basesoc_data_port_dat_w[39:32];
	data_mem_grain4_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[39:32] = data_mem_grain4[data_mem_grain4_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain5: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain5[0:511];
reg [8:0] data_mem_grain5_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[5])
		data_mem_grain5[basesoc_data_port_adr] <= basesoc_data_port_dat_w[47:40];
	data_mem_grain5_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[47:40] = data_mem_grain5[data_mem_grain5_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain6: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain6[0:511];
reg [8:0] data_mem_grain6_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[6])
		data_mem_grain6[basesoc_data_port_adr] <= basesoc_data_port_dat_w[55:48];
	data_mem_grain6_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[55:48] = data_mem_grain6[data_mem_grain6_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain7: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain7[0:511];
reg [8:0] data_mem_grain7_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[7])
		data_mem_grain7[basesoc_data_port_adr] <= basesoc_data_port_dat_w[63:56];
	data_mem_grain7_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[63:56] = data_mem_grain7[data_mem_grain7_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain8: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain8[0:511];
reg [8:0] data_mem_grain8_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[8])
		data_mem_grain8[basesoc_data_port_adr] <= basesoc_data_port_dat_w[71:64];
	data_mem_grain8_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[71:64] = data_mem_grain8[data_mem_grain8_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain9: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain9[0:511];
reg [8:0] data_mem_grain9_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[9])
		data_mem_grain9[basesoc_data_port_adr] <= basesoc_data_port_dat_w[79:72];
	data_mem_grain9_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[79:72] = data_mem_grain9[data_mem_grain9_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain10: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain10[0:511];
reg [8:0] data_mem_grain10_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[10])
		data_mem_grain10[basesoc_data_port_adr] <= basesoc_data_port_dat_w[87:80];
	data_mem_grain10_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[87:80] = data_mem_grain10[data_mem_grain10_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain11: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain11[0:511];
reg [8:0] data_mem_grain11_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[11])
		data_mem_grain11[basesoc_data_port_adr] <= basesoc_data_port_dat_w[95:88];
	data_mem_grain11_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[95:88] = data_mem_grain11[data_mem_grain11_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain12: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain12[0:511];
reg [8:0] data_mem_grain12_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[12])
		data_mem_grain12[basesoc_data_port_adr] <= basesoc_data_port_dat_w[103:96];
	data_mem_grain12_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[103:96] = data_mem_grain12[data_mem_grain12_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain13: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain13[0:511];
reg [8:0] data_mem_grain13_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[13])
		data_mem_grain13[basesoc_data_port_adr] <= basesoc_data_port_dat_w[111:104];
	data_mem_grain13_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[111:104] = data_mem_grain13[data_mem_grain13_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain14: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain14[0:511];
reg [8:0] data_mem_grain14_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[14])
		data_mem_grain14[basesoc_data_port_adr] <= basesoc_data_port_dat_w[119:112];
	data_mem_grain14_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[119:112] = data_mem_grain14[data_mem_grain14_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain15: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain15[0:511];
reg [8:0] data_mem_grain15_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[15])
		data_mem_grain15[basesoc_data_port_adr] <= basesoc_data_port_dat_w[127:120];
	data_mem_grain15_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[127:120] = data_mem_grain15[data_mem_grain15_adr0];


pcie_support #(
	.C_DATA_WIDTH(8'd128),
	.KEEP_WIDTH(5'd16),
	.LINK_CAP_MAX_LINK_WIDTH(3'd4),
	.PCIE_GT_DEVICE("GTP"),
	.PCIE_REFCLK_FREQ(1'd0),
	.PCIE_USERCLK1_FREQ(3'd4),
	.PCIE_USERCLK2_FREQ(2'd3)
) pcie_support (
	.cfg_aer_interrupt_msgnum(1'd0),
	.cfg_ds_bus_number(1'd0),
	.cfg_ds_device_number(1'd0),
	.cfg_ds_function_number(1'd0),
	.cfg_dsn(1'd0),
	.cfg_err_acs(1'd0),
	.cfg_err_aer_headerlog(1'd0),
	.cfg_err_atomic_egress_blocked(1'd0),
	.cfg_err_cor(1'd0),
	.cfg_err_cpl_abort(1'd0),
	.cfg_err_cpl_timeout(1'd0),
	.cfg_err_cpl_unexpect(1'd0),
	.cfg_err_ecrc(1'd0),
	.cfg_err_internal_cor(1'd0),
	.cfg_err_internal_uncor(1'd0),
	.cfg_err_locked(1'd0),
	.cfg_err_malformed(1'd0),
	.cfg_err_mc_blocked(1'd0),
	.cfg_err_norecovery(1'd0),
	.cfg_err_poisoned(1'd0),
	.cfg_err_posted(1'd0),
	.cfg_err_tlp_cpl_header(1'd0),
	.cfg_err_ur(1'd0),
	.cfg_interrupt(s7pciephy_msi_cdc_source_valid),
	.cfg_interrupt_assert(1'd0),
	.cfg_interrupt_di(s7pciephy_msi_cdc_source_payload_dat),
	.cfg_interrupt_stat(1'd0),
	.cfg_mgmt_byte_en(1'd0),
	.cfg_mgmt_di(1'd0),
	.cfg_mgmt_dwaddr(1'd0),
	.cfg_mgmt_rd_en(1'd0),
	.cfg_mgmt_wr_en(1'd0),
	.cfg_mgmt_wr_readonly(1'd0),
	.cfg_mgmt_wr_rw1c_as_rw(1'd0),
	.cfg_pciecap_interrupt_msgnum(1'd0),
	.cfg_pm_force_state(1'd0),
	.cfg_pm_force_state_en(1'd0),
	.cfg_pm_halt_aspm_l0s(1'd0),
	.cfg_pm_halt_aspm_l1(1'd0),
	.cfg_pm_send_pme_to(1'd0),
	.cfg_pm_wake(1'd0),
	.cfg_trn_pending(1'd0),
	.cfg_turnoff_ok(1'd0),
	.fc_sel(1'd0),
	.m_axis_rx_tready(s7pciephy_rx_datapath_sink_sink_ready),
	.pci_exp_rxn(pcie_x4_rx_n),
	.pci_exp_rxp(pcie_x4_rx_p),
	.pcie_drp_addr(1'd0),
	.pcie_drp_clk(1'd1),
	.pcie_drp_di(1'd0),
	.pcie_drp_en(1'd0),
	.pcie_drp_we(1'd0),
	.pipe_mmcm_rst_n(1'd1),
	.pipe_pclk_sel_slave(1'd0),
	.pl_directed_link_auton(1'd0),
	.pl_directed_link_change(1'd0),
	.pl_directed_link_speed(1'd0),
	.pl_directed_link_width(1'd0),
	.pl_downstream_deemph_source(1'd0),
	.pl_transmit_hot_rst(1'd0),
	.pl_upstream_prefer_deemph(1'd1),
	.rx_np_ok(1'd1),
	.rx_np_req(1'd1),
	.s_axis_tx_tdata(s7pciephy_tx_datapath_source_source_payload_dat),
	.s_axis_tx_tkeep(s7pciephy_tx_datapath_source_source_payload_be),
	.s_axis_tx_tlast(s7pciephy_tx_datapath_source_source_last),
	.s_axis_tx_tuser(1'd0),
	.s_axis_tx_tvalid(s7pciephy_tx_datapath_source_source_valid),
	.sys_clk(s7pciephy_pcie_refclk),
	.sys_rst_n(s7pciephy_pcie_rst_n),
	.tx_cfg_gnt(1'd1),
	.cfg_aer_ecrc_check_en(s7pciephy22),
	.cfg_aer_ecrc_gen_en(s7pciephy23),
	.cfg_aer_rooterr_corr_err_received(s7pciephy47),
	.cfg_aer_rooterr_corr_err_reporting_en(s7pciephy44),
	.cfg_aer_rooterr_fatal_err_received(s7pciephy49),
	.cfg_aer_rooterr_fatal_err_reporting_en(s7pciephy46),
	.cfg_aer_rooterr_non_fatal_err_received(s7pciephy48),
	.cfg_aer_rooterr_non_fatal_err_reporting_en(s7pciephy45),
	.cfg_bridge_serr_en(s7pciephy38),
	.cfg_bus_number(s7pciephy_bus_number),
	.cfg_command(s7pciephy_command),
	.cfg_dcommand(s7pciephy_dcommand),
	.cfg_dcommand2(s7pciephy31),
	.cfg_device_number(s7pciephy_device_number),
	.cfg_dstatus(s7pciephy28),
	.cfg_err_aer_headerlog_set(s7pciephy21),
	.cfg_err_cpl_rdy(s7pciephy20),
	.cfg_function_number(s7pciephy_function_number),
	.cfg_interrupt_do(s7pciephy24),
	.cfg_interrupt_mmenable(s7pciephy25),
	.cfg_interrupt_msienable(s7pciephy_msi_enable_status),
	.cfg_interrupt_msixenable(s7pciephy_msix_enable_status),
	.cfg_interrupt_msixfm(s7pciephy26),
	.cfg_interrupt_rdy(s7pciephy_msi_cdc_source_ready),
	.cfg_lcommand(s7pciephy30),
	.cfg_lstatus(s7pciephy29),
	.cfg_mgmt_do(s7pciephy18),
	.cfg_mgmt_rd_wr_done(s7pciephy19),
	.cfg_msg_data(s7pciephy52),
	.cfg_msg_received(s7pciephy51),
	.cfg_msg_received_assert_int_a(s7pciephy60),
	.cfg_msg_received_assert_int_b(s7pciephy61),
	.cfg_msg_received_assert_int_c(s7pciephy62),
	.cfg_msg_received_assert_int_d(s7pciephy63),
	.cfg_msg_received_deassert_int_a(s7pciephy64),
	.cfg_msg_received_deassert_int_b(s7pciephy65),
	.cfg_msg_received_deassert_int_c(s7pciephy66),
	.cfg_msg_received_deassert_int_d(s7pciephy67),
	.cfg_msg_received_err_cor(s7pciephy55),
	.cfg_msg_received_err_fatal(s7pciephy57),
	.cfg_msg_received_err_non_fatal(s7pciephy56),
	.cfg_msg_received_pm_as_nak(s7pciephy53),
	.cfg_msg_received_pm_pme(s7pciephy58),
	.cfg_msg_received_pme_to_ack(s7pciephy59),
	.cfg_msg_received_setslotpowerlimit(s7pciephy54),
	.cfg_pcie_link_state(s7pciephy32),
	.cfg_pmcsr_pme_en(s7pciephy34),
	.cfg_pmcsr_pme_status(s7pciephy36),
	.cfg_pmcsr_powerstate(s7pciephy35),
	.cfg_received_func_lvl_rst(s7pciephy37),
	.cfg_root_control_pme_int_en(s7pciephy43),
	.cfg_root_control_syserr_corr_err_en(s7pciephy40),
	.cfg_root_control_syserr_fatal_err_en(s7pciephy42),
	.cfg_root_control_syserr_non_fatal_err_en(s7pciephy41),
	.cfg_slot_control_electromech_il_ctl_pulse(s7pciephy39),
	.cfg_status(s7pciephy27),
	.cfg_to_turnoff(s7pciephy33),
	.cfg_vc_tcvc_map(s7pciephy50),
	.fc_cpld(s7pciephy12),
	.fc_cplh(s7pciephy13),
	.fc_npd(s7pciephy14),
	.fc_nph(s7pciephy15),
	.fc_pd(s7pciephy16),
	.fc_ph(s7pciephy17),
	.m_axis_rx_tdata(s7pciephy_rx_datapath_sink_sink_payload_dat),
	.m_axis_rx_tkeep(s7pciephy_rx_datapath_sink_sink_payload_be),
	.m_axis_rx_tlast(s7pciephy_m_axis_rx_tlast),
	.m_axis_rx_tuser(s7pciephy_m_axis_rx_tuser),
	.m_axis_rx_tvalid(s7pciephy_rx_datapath_sink_sink_valid),
	.pci_exp_txn(pcie_x4_tx_n),
	.pci_exp_txp(pcie_x4_tx_p),
	.pcie_drp_do(s7pciephy79),
	.pcie_drp_rdy(s7pciephy78),
	.pipe_dclk_out(s7pciephy3),
	.pipe_mmcm_lock_out(s7pciephy7),
	.pipe_oobclk_out(s7pciephy6),
	.pipe_pclk_out_slave(s7pciephy0),
	.pipe_rxoutclk_out(s7pciephy2),
	.pipe_rxusrclk_out(s7pciephy1),
	.pipe_userclk1_out(s7pciephy4),
	.pipe_userclk2_out(s7pciephy5),
	.pl_directed_change_done(s7pciephy76),
	.pl_initial_link_width(s7pciephy75),
	.pl_lane_reversal_mode(s7pciephy68),
	.pl_link_gen2_cap(s7pciephy73),
	.pl_link_partner_gen2_supported(s7pciephy74),
	.pl_link_upcfg_cap(s7pciephy72),
	.pl_ltssm_state(s7pciephy_csrfield_ltssm),
	.pl_phy_lnk_up(s7pciephy69),
	.pl_received_hot_rst(s7pciephy77),
	.pl_rx_pm_state(s7pciephy71),
	.pl_sel_lnk_rate(s7pciephy_csrfield_rate),
	.pl_sel_lnk_width(s7pciephy_csrfield_width),
	.pl_tx_pm_state(s7pciephy70),
	.s_axis_tx_tready(s7pciephy_tx_datapath_source_source_ready),
	.tx_buf_av(s7pciephy9),
	.tx_cfg_req(s7pciephy11),
	.tx_err_drop(s7pciephy10),
	.user_app_rdy(s7pciephy8),
	.user_clk_out(pcie_clk),
	.user_lnk_up(s7pciephy_csrfield_status),
	.user_reset_out(pcie_rst)
);

//------------------------------------------------------------------------------
// Memory storage_20: 8-words x 5-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 5 
// Port 1 | Read: Sync  | Write: ---- | 
reg [4:0] storage_20[0:7];
reg [4:0] storage_20_dat0;
reg [4:0] storage_20_dat1;
always @(posedge sys_clk) begin
	if (subfragments_tag_queue_wrport_we)
		storage_20[subfragments_tag_queue_wrport_adr] <= subfragments_tag_queue_wrport_dat_w;
	storage_20_dat0 <= storage_20[subfragments_tag_queue_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_tag_queue_rdport_re)
		storage_20_dat1 <= storage_20[subfragments_tag_queue_rdport_adr];
end
assign subfragments_tag_queue_wrport_dat_r = storage_20_dat0;
assign subfragments_tag_queue_rdport_dat_r = storage_20_dat1;


//------------------------------------------------------------------------------
// Memory storage_21: 8-words x 21-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 21 
// Port 1 | Read: Sync  | Write: ---- | 
reg [20:0] storage_21[0:7];
reg [20:0] storage_21_dat0;
reg [20:0] storage_21_dat1;
always @(posedge sys_clk) begin
	if (subfragments_req_queue_wrport_we)
		storage_21[subfragments_req_queue_wrport_adr] <= subfragments_req_queue_wrport_dat_w;
	storage_21_dat0 <= storage_21[subfragments_req_queue_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_req_queue_rdport_re)
		storage_21_dat1 <= storage_21[subfragments_req_queue_rdport_adr];
end
assign subfragments_req_queue_wrport_dat_r = storage_21_dat0;
assign subfragments_req_queue_rdport_dat_r = storage_21_dat1;


//------------------------------------------------------------------------------
// Memory storage_22: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_22[0:127];
reg [229:0] storage_22_dat0;
reg [229:0] storage_22_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo0_wrport_we)
		storage_22[subfragments_syncfifo0_wrport_adr] <= subfragments_syncfifo0_wrport_dat_w;
	storage_22_dat0 <= storage_22[subfragments_syncfifo0_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo0_rdport_re)
		storage_22_dat1 <= storage_22[subfragments_syncfifo0_rdport_adr];
end
assign subfragments_syncfifo0_wrport_dat_r = storage_22_dat0;
assign subfragments_syncfifo0_rdport_dat_r = storage_22_dat1;


//------------------------------------------------------------------------------
// Memory storage_23: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_23[0:127];
reg [229:0] storage_23_dat0;
reg [229:0] storage_23_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo1_wrport_we)
		storage_23[subfragments_syncfifo1_wrport_adr] <= subfragments_syncfifo1_wrport_dat_w;
	storage_23_dat0 <= storage_23[subfragments_syncfifo1_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo1_rdport_re)
		storage_23_dat1 <= storage_23[subfragments_syncfifo1_rdport_adr];
end
assign subfragments_syncfifo1_wrport_dat_r = storage_23_dat0;
assign subfragments_syncfifo1_rdport_dat_r = storage_23_dat1;


//------------------------------------------------------------------------------
// Memory storage_24: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_24[0:127];
reg [229:0] storage_24_dat0;
reg [229:0] storage_24_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo2_wrport_we)
		storage_24[subfragments_syncfifo2_wrport_adr] <= subfragments_syncfifo2_wrport_dat_w;
	storage_24_dat0 <= storage_24[subfragments_syncfifo2_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo2_rdport_re)
		storage_24_dat1 <= storage_24[subfragments_syncfifo2_rdport_adr];
end
assign subfragments_syncfifo2_wrport_dat_r = storage_24_dat0;
assign subfragments_syncfifo2_rdport_dat_r = storage_24_dat1;


//------------------------------------------------------------------------------
// Memory storage_25: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_25[0:127];
reg [229:0] storage_25_dat0;
reg [229:0] storage_25_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo3_wrport_we)
		storage_25[subfragments_syncfifo3_wrport_adr] <= subfragments_syncfifo3_wrport_dat_w;
	storage_25_dat0 <= storage_25[subfragments_syncfifo3_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo3_rdport_re)
		storage_25_dat1 <= storage_25[subfragments_syncfifo3_rdport_adr];
end
assign subfragments_syncfifo3_wrport_dat_r = storage_25_dat0;
assign subfragments_syncfifo3_rdport_dat_r = storage_25_dat1;


//------------------------------------------------------------------------------
// Memory storage_26: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_26[0:127];
reg [229:0] storage_26_dat0;
reg [229:0] storage_26_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo4_wrport_we)
		storage_26[subfragments_syncfifo4_wrport_adr] <= subfragments_syncfifo4_wrport_dat_w;
	storage_26_dat0 <= storage_26[subfragments_syncfifo4_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo4_rdport_re)
		storage_26_dat1 <= storage_26[subfragments_syncfifo4_rdport_adr];
end
assign subfragments_syncfifo4_wrport_dat_r = storage_26_dat0;
assign subfragments_syncfifo4_rdport_dat_r = storage_26_dat1;


//------------------------------------------------------------------------------
// Memory storage_27: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_27[0:127];
reg [229:0] storage_27_dat0;
reg [229:0] storage_27_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo5_wrport_we)
		storage_27[subfragments_syncfifo5_wrport_adr] <= subfragments_syncfifo5_wrport_dat_w;
	storage_27_dat0 <= storage_27[subfragments_syncfifo5_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo5_rdport_re)
		storage_27_dat1 <= storage_27[subfragments_syncfifo5_rdport_adr];
end
assign subfragments_syncfifo5_wrport_dat_r = storage_27_dat0;
assign subfragments_syncfifo5_rdport_dat_r = storage_27_dat1;


//------------------------------------------------------------------------------
// Memory storage_28: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_28[0:127];
reg [229:0] storage_28_dat0;
reg [229:0] storage_28_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo6_wrport_we)
		storage_28[subfragments_syncfifo6_wrport_adr] <= subfragments_syncfifo6_wrport_dat_w;
	storage_28_dat0 <= storage_28[subfragments_syncfifo6_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo6_rdport_re)
		storage_28_dat1 <= storage_28[subfragments_syncfifo6_rdport_adr];
end
assign subfragments_syncfifo6_wrport_dat_r = storage_28_dat0;
assign subfragments_syncfifo6_rdport_dat_r = storage_28_dat1;


//------------------------------------------------------------------------------
// Memory storage_29: 128-words x 230-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 230 
// Port 1 | Read: Sync  | Write: ---- | 
reg [229:0] storage_29[0:127];
reg [229:0] storage_29_dat0;
reg [229:0] storage_29_dat1;
always @(posedge sys_clk) begin
	if (subfragments_syncfifo7_wrport_we)
		storage_29[subfragments_syncfifo7_wrport_adr] <= subfragments_syncfifo7_wrport_dat_w;
	storage_29_dat0 <= storage_29[subfragments_syncfifo7_wrport_adr];
end
always @(posedge sys_clk) begin
	if (subfragments_syncfifo7_rdport_re)
		storage_29_dat1 <= storage_29[subfragments_syncfifo7_rdport_adr];
end
assign subfragments_syncfifo7_wrport_dat_r = storage_29_dat0;
assign subfragments_syncfifo7_rdport_dat_r = storage_29_dat1;


IBUFDS IBUFDS(
	.I(clk200_p),
	.IB(clk200_n),
	.O(crg_clkin)
);

// begin gpio outputs

reg [26:0] counter;

always @(posedge crg_clkin)
begin
    counter<=counter+1'b1;
end

always @(posedge crg_clkin)
begin
    gpio_0<=counter[3];
end

always @(posedge crg_clkin)
begin
    gpio_1<=counter[4];
end

always @(posedge crg_clkin)
begin
    gpio_2<=counter[5];
end

always @(posedge crg_clkin)
begin
    gpio_3<=counter[6];
end

always @(posedge crg_clkin)
begin
    gpio_4<=counter[7];
end

always @(posedge crg_clkin)
begin
    gpio_5<=counter[8];
end

always @(posedge crg_clkin)
begin
    gpio_6<=counter[9];
end

always @(posedge crg_clkin)
begin
    gpio_7<=counter[10];
end

always @(posedge crg_clkin)
begin
    gpio_8<=counter[11];
end

always @(posedge crg_clkin)
begin
    gpio_9<=counter[12];
end

always @(posedge crg_clkin)
begin
    gpio_10<=counter[13];
end

always @(posedge crg_clkin)
begin
    gpio_11<=counter[14];
end


// end gpio outputs

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE (
	.C(sys_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl0),
	.Q(xilinxasyncresetsynchronizerimpl0_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_1 (
	.C(sys_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl0),
	.Q(sys_rst)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_2 (
	.C(sys4x_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl1),
	.Q(xilinxasyncresetsynchronizerimpl1_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_3 (
	.C(sys4x_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl1),
	.Q(xilinxasyncresetsynchronizerimpl1_expr)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_4 (
	.C(sys4x_dqs_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl2),
	.Q(xilinxasyncresetsynchronizerimpl2_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_5 (
	.C(sys4x_dqs_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl2),
	.Q(xilinxasyncresetsynchronizerimpl2_expr)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_6 (
	.C(idelay_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl3),
	.Q(xilinxasyncresetsynchronizerimpl3_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_7 (
	.C(idelay_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl3_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl3),
	.Q(idelay_rst)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2021-11-12 14:15:34.
//------------------------------------------------------------------------------
